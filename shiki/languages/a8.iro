name                   = a8
file_extensions []     = a8;

################################################################
## Constants
################################################################

__IDENTIFIER \= (\b[a-zA-Z$_][a-zA-Z0-9$_]*)

################################################################
## Styles
################################################################

styles [] {

.comment : style {
   color                 = light_green
   italic                = true
   ace_scope             = comment
   textmate_scope        = comment
   pygments_scope        = Comment
}

.keyword : style {
   color     = cyan
   ace_scope             = keyword
   textmate_scope        = keyword
   pygments_scope        = Keyword
}

.entity.name.gotoLabel : style {
   color     = cyan
   ace_scope             = entity.name.goto-label
   textmate_scope        = entity.name.goto-label
   pygments_scope        = Keyword
}

.numeric : style {
   color                 = gold
   ace_scope             = constant.numeric
   textmate_scope        = constant.numeric
   pygments_scope        = Number
}

.punctuation.definition.variable : style {
   color                 = red_2
   ace_scope             = punctuation.definition.variable
   textmate_scope        = punctuation.definition.variable
   pygments_scope        = Punctuation
}

.punctuation.separator.colon : style {
   color                 = red_2
   ace_scope             = punctuation.separator.colon
   textmate_scope        = punctuation.separator.colon
   pygments_scope        = Punctuation
}

.entity.name.label  : style {
   color                 = red_2
   ace_scope             = entity.name.label
   textmate_scope        = entity.name.label
   pygments_scope        = Name.Entity
}

.variable.other : style {
   color                 = brown
   ace_scope             = variable.other
   textmate_scope        = variable.other
   pygments_scope        = Name.Variable
}

.source : style {
   color                 = white
   ace_scope             = source
   textmate_scope        = source
   pygments_scope        = Generic
}

}

#################################################
## Parse contexts
#################################################

contexts [] {

##############################################
## Main Context - Entry point context
##############################################

main : context {

   : pattern {
      regex          \= (,.*)
      styles []       = .comment;
   }

   : pattern {
      regex          \= $${__IDENTIFIER}(\:)
      styles []       = .entity.name.gotoLabel, .punctuation.separator.colon;
   }
   : pattern {
      regex          \= $${__IDENTIFIER}(\s+)(\@)$${__IDENTIFIER}
      styles []       = .keyword, .source, .punctuation.definition.variable, .variable.other;
   }

   : pattern {
      regex          \= $${__IDENTIFIER}(\s+)$${__IDENTIFIER}
      styles []       = .keyword, .source, .entity.name.label;
   }

   : pattern {
      regex          \= $${__IDENTIFIER}
      styles []       = .keyword;
   }

   : include "numeric" ;
   : include "multi_line_comment" ;
   : include "single_line_comment" ;
   
}

###########################################
## Numeric Context
###########################################

numeric : context {
   : pattern {
      regex          \= (\b\d+)
      styles []       = .numeric;
   }
}

###########################################
## Comment Context
###########################################

multi_line_comment : context {
   description        = multiline
   : inline_push {
      regex          \= (/\*)
      styles []       = .comment;
      default_style   = .comment
      : pop {
         regex       \= (\*/)
         styles []    = .comment;
      }
   }
}

single_line_comment : context {
   description        = singleline
   : pattern {
      regex          \= (//.*)
      styles []       = .comment;
   }
}
   
}
