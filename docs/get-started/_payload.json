[{"data":1,"prerenderedAt":1723},["Reactive",2],{"content-query-AcJ52JYVSR":3,"content-navigation-8C37fagqQL":54,"content-navigation-AUvUjo7VrF":100,"content-query-lyMJy2tOYZ":109,"content-query-NKK6OdiaiL":326,"content-query-4SxawDMX1W":382},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"navigation":12,"body":13,"_type":49,"_id":50,"_source":51,"_file":52,"_extension":53},"/docs/get-started","docs",false,"","Getting started","Get started with Yabal.",[11],"index",{"sidebar":6},{"type":14,"children":15,"toc":46},"root",[16,24,41],{"type":17,"tag":18,"props":19,"children":21},"element","h1",{"id":20},"getting-started",[22],{"type":23,"value":8},"text",{"type":17,"tag":25,"props":26,"children":27},"p",{},[28,30,39],{"type":23,"value":29},"Yabal is a programming language for ",{"type":17,"tag":31,"props":32,"children":36},"a",{"href":33,"rel":34},"https://github.com/sam-astro/Astro8-Computer",[35],"nofollow",[37],{"type":23,"value":38},"Astro-8",{"type":23,"value":40},", a custom 16-bit homebrew CPU. Yabal stands for \"Yet Another Basic Astro-8 Language\".\nIt is a simple language that is easy to learn and use, and compiles to Astro-8 assembly.",{"type":17,"tag":42,"props":43,"children":45},"related",{":tags":44},"get-started",[],{"title":7,"searchDepth":47,"depth":47,"links":48},2,[],"markdown","content:docs:2.get-started:index.md","content","docs/2.get-started/index.md","md",[55],{"title":56,"_path":57,"children":58,"root":65},"Documentation","/docs",[59,60,73,81,89],{"title":56,"_path":57},{"title":8,"_path":4,"children":61,"sidebar":6},[62,66,69,72],{"title":63,"_path":64,"sidebar":65},"Downloads","/docs/get-started/downloads",true,{"title":67,"_path":68,"sidebar":65},"Emulator","/docs/get-started/emulator",{"title":70,"_path":71,"sidebar":65},"Basics of Yabal","/docs/get-started/basics-of-yabal",{"title":8,"_path":4,"sidebar":6},{"title":74,"_path":75,"children":76,"sidebar":6},"Language reference","/docs/language-reference",[77,80],{"title":78,"_path":79,"sidebar":65},"Structs","/docs/language-reference/structs",{"title":74,"_path":75,"sidebar":6},{"title":82,"_path":83,"children":84,"sidebar":6},"Perhipherals","/docs/peripherals",[85,88],{"title":86,"_path":87,"sidebar":65},"Screen","/docs/peripherals/screen",{"title":82,"_path":83,"sidebar":6},{"title":90,"_path":91,"children":92,"sidebar":6},"Advanced topics","/docs/advanced-topics",[93,96,99],{"title":94,"_path":95,"sidebar":65},"Assembly mode","/docs/advanced-topics/assembly-mode",{"title":97,"_path":98,"sidebar":65},"Optimizing","/docs/advanced-topics/optimizing",{"title":90,"_path":91,"sidebar":6},[101],{"title":56,"_path":57,"children":102,"root":65},[103],{"title":104,"_path":4,"children":105},"Get Started",[106,107,108],{"title":63,"_path":64,"sidebar":65},{"title":67,"_path":68,"sidebar":65},{"title":70,"_path":71,"sidebar":65},{"_path":68,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":67,"description":110,"tags":111,"navigation":112,"body":113,"_type":49,"_id":324,"_source":51,"_file":325,"_extension":53},"Learn how to run your Yabal programs.",[44],{"sidebar":65},{"type":14,"children":114,"toc":320},[115,120,125,132,155,168,207,219,261,275,281,286,291,314],{"type":17,"tag":18,"props":116,"children":118},{"id":117},"emulator",[119],{"type":23,"value":67},{"type":17,"tag":25,"props":121,"children":122},{},[123],{"type":23,"value":124},"To run your Yabal programs, you need to install the Astro-8 emulator. The Astro-8 emulator is a virtual machine that runs Astro-8 assembly code. Yabal compiles your code to Astro-8 assembly code, which is then run by the emulator.",{"type":17,"tag":126,"props":127,"children":129},"h2",{"id":128},"native-emulator",[130],{"type":23,"value":131},"Native emulator",{"type":17,"tag":25,"props":133,"children":134},{},[135,137,144,146,153],{"type":23,"value":136},"It is recommended to install the ",{"type":17,"tag":31,"props":138,"children":141},{"href":139,"rel":140},"https://github.com/sam-astro/Astro8-Computer/releases",[35],[142],{"type":23,"value":143},"Astro-8 emulator",{"type":23,"value":145}," by ",{"type":17,"tag":31,"props":147,"children":150},{"href":148,"rel":149},"https://github.com/sam-astro",[35],[151],{"type":23,"value":152},"sam-astro",{"type":23,"value":154}," to run your programs, since the emulator contains all the latest features like audio and file system support.",{"type":17,"tag":25,"props":156,"children":157},{},[158,160,166],{"type":23,"value":159},"To start your script with the native Astro-8 emulator, add the ",{"type":17,"tag":161,"props":162,"children":163},"code",{"className":7},[164],{"type":23,"value":165},"-n",{"type":23,"value":167}," flag in the run command:",{"type":17,"tag":169,"props":170,"children":174},"pre",{"className":171,"code":172,"language":173,"meta":7,"style":7},"language-bash shiki shiki-themes github-light github-dark","yabal run program.yabal -n\n","bash",[175],{"type":17,"tag":161,"props":176,"children":177},{"__ignoreMap":7},[178],{"type":17,"tag":179,"props":180,"children":183},"span",{"class":181,"line":182},"line",1,[184,190,196,201],{"type":17,"tag":179,"props":185,"children":187},{"style":186},"--shiki-default:#6F42C1;--shiki-dark:#B392F0",[188],{"type":23,"value":189},"yabal",{"type":17,"tag":179,"props":191,"children":193},{"style":192},"--shiki-default:#032F62;--shiki-dark:#9ECBFF",[194],{"type":23,"value":195}," run",{"type":17,"tag":179,"props":197,"children":198},{"style":192},[199],{"type":23,"value":200}," program.yabal",{"type":17,"tag":179,"props":202,"children":204},{"style":203},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[205],{"type":23,"value":206}," -n\n",{"type":17,"tag":25,"props":208,"children":209},{},[210,212,217],{"type":23,"value":211},"If you want to pass arguments to the native emulator, add ",{"type":17,"tag":161,"props":213,"children":214},{"className":7},[215],{"type":23,"value":216},"--",{"type":23,"value":218}," and move the file name to the end of the command. After that, you can pass arguments to the emulator:",{"type":17,"tag":169,"props":220,"children":222},{"className":171,"code":221,"language":173,"meta":7,"style":7},"yabal run -n -- program.yabal -f 1000\n",[223],{"type":17,"tag":161,"props":224,"children":225},{"__ignoreMap":7},[226],{"type":17,"tag":179,"props":227,"children":228},{"class":181,"line":182},[229,233,237,242,247,251,256],{"type":17,"tag":179,"props":230,"children":231},{"style":186},[232],{"type":23,"value":189},{"type":17,"tag":179,"props":234,"children":235},{"style":192},[236],{"type":23,"value":195},{"type":17,"tag":179,"props":238,"children":239},{"style":203},[240],{"type":23,"value":241}," -n",{"type":17,"tag":179,"props":243,"children":244},{"style":203},[245],{"type":23,"value":246}," --",{"type":17,"tag":179,"props":248,"children":249},{"style":192},[250],{"type":23,"value":200},{"type":17,"tag":179,"props":252,"children":253},{"style":203},[254],{"type":23,"value":255}," -f",{"type":17,"tag":179,"props":257,"children":258},{"style":203},[259],{"type":23,"value":260}," 1000\n",{"type":17,"tag":25,"props":262,"children":263},{},[264,266,273],{"type":23,"value":265},"For all the options of the native emulator, ",{"type":17,"tag":31,"props":267,"children":270},{"href":268,"rel":269},"https://sam-astro.github.io/Astro8-Computer/docs/Usage.html#emulator",[35],[271],{"type":23,"value":272},"see the documentation",{"type":23,"value":274},".",{"type":17,"tag":126,"props":276,"children":278},{"id":277},"built-in-emulator",[279],{"type":23,"value":280},"Built-in emulator",{"type":17,"tag":25,"props":282,"children":283},{},[284],{"type":23,"value":285},"If you don't want to install the Astro-8 emulator, you can use the built-in emulator instead. However, the built-in emulator is not as feature-rich as the native emulator.",{"type":17,"tag":25,"props":287,"children":288},{},[289],{"type":23,"value":290},"To start your program with the built-in emulator, run the following command:",{"type":17,"tag":169,"props":292,"children":294},{"className":171,"code":293,"language":173,"meta":7,"style":7},"yabal run program.yabal\n",[295],{"type":17,"tag":161,"props":296,"children":297},{"__ignoreMap":7},[298],{"type":17,"tag":179,"props":299,"children":300},{"class":181,"line":182},[301,305,309],{"type":17,"tag":179,"props":302,"children":303},{"style":186},[304],{"type":23,"value":189},{"type":17,"tag":179,"props":306,"children":307},{"style":192},[308],{"type":23,"value":195},{"type":17,"tag":179,"props":310,"children":311},{"style":192},[312],{"type":23,"value":313}," program.yabal\n",{"type":17,"tag":315,"props":316,"children":317},"style",{},[318],{"type":23,"value":319},"html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":47,"depth":47,"links":321},[322,323],{"id":128,"depth":47,"text":131},{"id":277,"depth":47,"text":280},"content:docs:2.get-started:2.emulator.md","docs/2.get-started/2.emulator.md",{"_path":64,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":63,"description":327,"tags":328,"navigation":329,"body":330,"_type":49,"_id":380,"_source":51,"_file":381,"_extension":53},"Download the Yabal compiler and Astro-8 emulator.",[44],{"sidebar":65},{"type":14,"children":331,"toc":376},[332,337,342,347,352,357,361,367,372],{"type":17,"tag":18,"props":333,"children":335},{"id":334},"downloads",[336],{"type":23,"value":63},{"type":17,"tag":25,"props":338,"children":339},{},[340],{"type":23,"value":341},"On this page you can download the Yabal compiler and the Astro-8 emulator.",{"type":17,"tag":126,"props":343,"children":344},{"id":189},[345],{"type":23,"value":346},"Yabal",{"type":17,"tag":25,"props":348,"children":349},{},[350],{"type":23,"value":351},"Yabal contains the compiler and emulator.",{"type":17,"tag":353,"props":354,"children":356},"download",{":repo":355},"YabalLang/compiler",[],{"type":17,"tag":358,"props":359,"children":360},"hr",{},[],{"type":17,"tag":126,"props":362,"children":364},{"id":363},"astro-8-emulator",[365],{"type":23,"value":366},"Astro-8 Emulator",{"type":17,"tag":25,"props":368,"children":369},{},[370],{"type":23,"value":371},"Astro-8 emulator an emulator for Astro-8. In comparison to the Yabal emulator it supports more features like audio and file I/O.",{"type":17,"tag":353,"props":373,"children":375},{":repo":374},"sam-astro/Astro8-Computer",[],{"title":7,"searchDepth":47,"depth":47,"links":377},[378,379],{"id":189,"depth":47,"text":346},{"id":363,"depth":47,"text":366},"content:docs:2.get-started:1.downloads.md","docs/2.get-started/1.downloads.md",{"_path":71,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":70,"description":383,"tags":384,"navigation":385,"body":386,"_type":49,"_id":1721,"_source":51,"_file":1722,"_extension":53},"Learn about the basics of Yabal.",[44],{"sidebar":65},{"type":14,"children":387,"toc":1707},[388,393,398,404,409,414,426,442,461,493,499,504,509,635,641,652,683,707,767,773,784,808,814,819,843,848,1018,1024,1042,1047,1053,1058,1069,1095,1105,1140,1152,1185,1191,1196,1201,1228,1233,1279,1284,1331,1337,1342,1376,1388,1400,1482,1500,1511,1554,1560,1575,1586,1703],{"type":17,"tag":18,"props":389,"children":391},{"id":390},"basics-of-yabal",[392],{"type":23,"value":70},{"type":17,"tag":25,"props":394,"children":395},{},[396],{"type":23,"value":397},"This page will teach you the basics of Yabal.",{"type":17,"tag":126,"props":399,"children":401},{"id":400},"comments",[402],{"type":23,"value":403},"Comments",{"type":17,"tag":25,"props":405,"children":406},{},[407],{"type":23,"value":408},"Comments are used to add notes to your code. They are ignored by the compiler.",{"type":17,"tag":25,"props":410,"children":411},{},[412],{"type":23,"value":413},"There are two types of comments in Yabal: single-line comments and multi-line comments.",{"type":17,"tag":25,"props":415,"children":416},{},[417,419,424],{"type":23,"value":418},"Single-line comments start with ",{"type":17,"tag":161,"props":420,"children":421},{"className":7},[422],{"type":23,"value":423},"//",{"type":23,"value":425}," and end at the end of the line:",{"type":17,"tag":169,"props":427,"children":430},{"className":428,"code":429,"language":189,"meta":7,"style":7},"language-yabal shiki shiki-themes github-light github-dark","// This is a single-line comment\n",[431],{"type":17,"tag":161,"props":432,"children":433},{"__ignoreMap":7},[434],{"type":17,"tag":179,"props":435,"children":436},{"class":181,"line":182},[437],{"type":17,"tag":179,"props":438,"children":440},{"style":439},"--shiki-default:#6A737D;--shiki-dark:#6A737D",[441],{"type":23,"value":429},{"type":17,"tag":25,"props":443,"children":444},{},[445,447,452,454,459],{"type":23,"value":446},"Multi-line comments start with ",{"type":17,"tag":161,"props":448,"children":449},{"className":7},[450],{"type":23,"value":451},"/*",{"type":23,"value":453}," and end with ",{"type":17,"tag":161,"props":455,"children":456},{"className":7},[457],{"type":23,"value":458},"*/",{"type":23,"value":460},":",{"type":17,"tag":169,"props":462,"children":464},{"className":428,"code":463,"language":189,"meta":7,"style":7},"/*\nThis is a multi-line comment\n*/\n",[465],{"type":17,"tag":161,"props":466,"children":467},{"__ignoreMap":7},[468,476,484],{"type":17,"tag":179,"props":469,"children":470},{"class":181,"line":182},[471],{"type":17,"tag":179,"props":472,"children":473},{"style":439},[474],{"type":23,"value":475},"/*\n",{"type":17,"tag":179,"props":477,"children":478},{"class":181,"line":47},[479],{"type":17,"tag":179,"props":480,"children":481},{"style":439},[482],{"type":23,"value":483},"This is a multi-line comment\n",{"type":17,"tag":179,"props":485,"children":487},{"class":181,"line":486},3,[488],{"type":17,"tag":179,"props":489,"children":490},{"style":439},[491],{"type":23,"value":492},"*/\n",{"type":17,"tag":126,"props":494,"children":496},{"id":495},"types",[497],{"type":23,"value":498},"Types",{"type":17,"tag":25,"props":500,"children":501},{},[502],{"type":23,"value":503},"Yabal is a statically typed language. An statically typed language means that the type of a variable is known at compile time. This is in contrast to a dynamically typed language (like JavaScript), where the type of a variable is only known at runtime.",{"type":17,"tag":25,"props":505,"children":506},{},[507],{"type":23,"value":508},"Yabal has the following types:",{"type":17,"tag":510,"props":511,"children":512},"table",{},[513,532],{"type":17,"tag":514,"props":515,"children":516},"thead",{},[517],{"type":17,"tag":518,"props":519,"children":520},"tr",{},[521,527],{"type":17,"tag":522,"props":523,"children":524},"th",{},[525],{"type":23,"value":526},"Type",{"type":17,"tag":522,"props":528,"children":529},{},[530],{"type":23,"value":531},"Description",{"type":17,"tag":533,"props":534,"children":535},"tbody",{},[536,553,583,613],{"type":17,"tag":518,"props":537,"children":538},{},[539,548],{"type":17,"tag":540,"props":541,"children":542},"td",{},[543],{"type":17,"tag":161,"props":544,"children":545},{"className":7},[546],{"type":23,"value":547},"int",{"type":17,"tag":540,"props":549,"children":550},{},[551],{"type":23,"value":552},"A 16-bit unsigned integer",{"type":17,"tag":518,"props":554,"children":555},{},[556,564],{"type":17,"tag":540,"props":557,"children":558},{},[559],{"type":17,"tag":161,"props":560,"children":561},{"className":7},[562],{"type":23,"value":563},"bool",{"type":17,"tag":540,"props":565,"children":566},{},[567,569,574,576,581],{"type":23,"value":568},"A boolean value (",{"type":17,"tag":161,"props":570,"children":571},{"className":7},[572],{"type":23,"value":573},"true",{"type":23,"value":575}," or ",{"type":17,"tag":161,"props":577,"children":578},{"className":7},[579],{"type":23,"value":580},"false",{"type":23,"value":582},") stored as a 16-bit integer",{"type":17,"tag":518,"props":584,"children":585},{},[586,600],{"type":17,"tag":540,"props":587,"children":588},{},[589,595],{"type":17,"tag":590,"props":591,"children":592},"em",{},[593],{"type":23,"value":594},"type",{"type":17,"tag":161,"props":596,"children":597},{"className":7},[598],{"type":23,"value":599},"[]",{"type":17,"tag":540,"props":601,"children":602},{},[603,605,611],{"type":23,"value":604},"An ",{"type":17,"tag":31,"props":606,"children":608},{"href":607},"#arrays",[609],{"type":23,"value":610},"array",{"type":23,"value":612}," of values of the specified type",{"type":17,"tag":518,"props":614,"children":615},{},[616,624],{"type":17,"tag":540,"props":617,"children":618},{},[619],{"type":17,"tag":590,"props":620,"children":621},{},[622],{"type":23,"value":623},"UserDefined",{"type":17,"tag":540,"props":625,"children":626},{},[627,629],{"type":23,"value":628},"An user-defined ",{"type":17,"tag":31,"props":630,"children":632},{"href":631},"#structs",[633],{"type":23,"value":634},"struct",{"type":17,"tag":636,"props":637,"children":639},"h3",{"id":638},"structs",[640],{"type":23,"value":78},{"type":17,"tag":25,"props":642,"children":643},{},[644,646,651],{"type":23,"value":645},"A struct is a user-defined type. It contains a number of fields, which can be of any ",{"type":17,"tag":31,"props":647,"children":649},{"href":648},"#types",[650],{"type":23,"value":594},{"type":23,"value":274},{"type":17,"tag":25,"props":653,"children":654},{},[655,657,661,663,668,670,675,677,681],{"type":23,"value":656},"Structs are declared using the ",{"type":17,"tag":161,"props":658,"children":659},{"className":7},[660],{"type":23,"value":634},{"type":23,"value":662}," keyword, followed by the name of the struct, and then a block of code surrounded by curly braces (",{"type":17,"tag":161,"props":664,"children":665},{"className":7},[666],{"type":23,"value":667},"{",{"type":23,"value":669}," and ",{"type":17,"tag":161,"props":671,"children":672},{"className":7},[673],{"type":23,"value":674},"}",{"type":23,"value":676},").\nWithin the block of code, you can declare fields by specifying the ",{"type":17,"tag":31,"props":678,"children":679},{"href":648},[680],{"type":23,"value":594},{"type":23,"value":682}," and name of the field.",{"type":17,"tag":25,"props":684,"children":685},{},[686,688,693,695,700,701,706],{"type":23,"value":687},"For example, we declare a struct called ",{"type":17,"tag":161,"props":689,"children":690},{"className":7},[691],{"type":23,"value":692},"Position",{"type":23,"value":694}," with two fields, ",{"type":17,"tag":161,"props":696,"children":697},{"className":7},[698],{"type":23,"value":699},"x",{"type":23,"value":669},{"type":17,"tag":161,"props":702,"children":703},{"className":7},[704],{"type":23,"value":705},"y",{"type":23,"value":460},{"type":17,"tag":169,"props":708,"children":710},{"className":428,"code":709,"language":189,"meta":7,"style":7},"struct Position {\n    int x\n    int y\n}\n",[711],{"type":17,"tag":161,"props":712,"children":713},{"__ignoreMap":7},[714,733,746,758],{"type":17,"tag":179,"props":715,"children":716},{"class":181,"line":182},[717,722,727],{"type":17,"tag":179,"props":718,"children":720},{"style":719},"--shiki-default:#D73A49;--shiki-dark:#F97583",[721],{"type":23,"value":634},{"type":17,"tag":179,"props":723,"children":724},{"style":186},[725],{"type":23,"value":726}," Position",{"type":17,"tag":179,"props":728,"children":730},{"style":729},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[731],{"type":23,"value":732}," {\n",{"type":17,"tag":179,"props":734,"children":735},{"class":181,"line":47},[736,741],{"type":17,"tag":179,"props":737,"children":738},{"style":719},[739],{"type":23,"value":740},"    int",{"type":17,"tag":179,"props":742,"children":743},{"style":729},[744],{"type":23,"value":745}," x\n",{"type":17,"tag":179,"props":747,"children":748},{"class":181,"line":486},[749,753],{"type":17,"tag":179,"props":750,"children":751},{"style":719},[752],{"type":23,"value":740},{"type":17,"tag":179,"props":754,"children":755},{"style":729},[756],{"type":23,"value":757}," y\n",{"type":17,"tag":179,"props":759,"children":761},{"class":181,"line":760},4,[762],{"type":17,"tag":179,"props":763,"children":764},{"style":729},[765],{"type":23,"value":766},"}\n",{"type":17,"tag":636,"props":768,"children":770},{"id":769},"arrays",[771],{"type":23,"value":772},"Arrays",{"type":17,"tag":25,"props":774,"children":775},{},[776,778,782],{"type":23,"value":777},"An array is a collection of values of the same type. Arrays are declared using the ",{"type":17,"tag":161,"props":779,"children":780},{"className":7},[781],{"type":23,"value":599},{"type":23,"value":783}," operator:",{"type":17,"tag":169,"props":785,"children":787},{"className":428,"code":786,"language":189,"meta":7,"style":7},"int[] numbers // An array of integers\n",[788],{"type":17,"tag":161,"props":789,"children":790},{"__ignoreMap":7},[791],{"type":17,"tag":179,"props":792,"children":793},{"class":181,"line":182},[794,798,803],{"type":17,"tag":179,"props":795,"children":796},{"style":719},[797],{"type":23,"value":547},{"type":17,"tag":179,"props":799,"children":800},{"style":729},[801],{"type":23,"value":802},"[] numbers ",{"type":17,"tag":179,"props":804,"children":805},{"style":439},[806],{"type":23,"value":807},"// An array of integers\n",{"type":17,"tag":126,"props":809,"children":811},{"id":810},"statements",[812],{"type":23,"value":813},"Statements",{"type":17,"tag":25,"props":815,"children":816},{},[817],{"type":23,"value":818},"The actual code in a Yabal program is made up of statements. Common statements are variable declarations, declaring functions, calling functions and control flow statements.",{"type":17,"tag":25,"props":820,"children":821},{},[822,824,830,832,836,837,841],{"type":23,"value":823},"A statement can be a single line of code that ends with a new-line or ",{"type":17,"tag":31,"props":825,"children":827},{"href":826},"#semi-colons",[828],{"type":23,"value":829},"semi-colon",{"type":23,"value":831},". A statement can also be multiple lines of code surrounded by curly braces (",{"type":17,"tag":161,"props":833,"children":834},{"className":7},[835],{"type":23,"value":667},{"type":23,"value":669},{"type":17,"tag":161,"props":838,"children":839},{"className":7},[840],{"type":23,"value":674},{"type":23,"value":842},").",{"type":17,"tag":25,"props":844,"children":845},{},[846],{"type":23,"value":847},"The following code shows an example of a block of code:",{"type":17,"tag":169,"props":849,"children":852},{"className":428,"code":850,"filename":851,"language":189,"meta":7,"style":7},"// Variable declaration statement\nint variable\n\n// Assignment statement\nvariable = 0\n\n// If statement that contains multiple statements\nif (variable == 0) {\n    // Assignment statement\n    variable = 1\n\n    // Expression statement (postfix increment)\n    variable++\n}\n","run",[853],{"type":17,"tag":161,"props":854,"children":855},{"__ignoreMap":7},[856,864,876,884,892,911,919,928,952,961,979,987,996,1010],{"type":17,"tag":179,"props":857,"children":858},{"class":181,"line":182},[859],{"type":17,"tag":179,"props":860,"children":861},{"style":439},[862],{"type":23,"value":863},"// Variable declaration statement\n",{"type":17,"tag":179,"props":865,"children":866},{"class":181,"line":47},[867,871],{"type":17,"tag":179,"props":868,"children":869},{"style":719},[870],{"type":23,"value":547},{"type":17,"tag":179,"props":872,"children":873},{"style":729},[874],{"type":23,"value":875}," variable\n",{"type":17,"tag":179,"props":877,"children":878},{"class":181,"line":486},[879],{"type":17,"tag":179,"props":880,"children":881},{"emptyLinePlaceholder":65},[882],{"type":23,"value":883},"\n",{"type":17,"tag":179,"props":885,"children":886},{"class":181,"line":760},[887],{"type":17,"tag":179,"props":888,"children":889},{"style":439},[890],{"type":23,"value":891},"// Assignment statement\n",{"type":17,"tag":179,"props":893,"children":895},{"class":181,"line":894},5,[896,901,906],{"type":17,"tag":179,"props":897,"children":898},{"style":729},[899],{"type":23,"value":900},"variable ",{"type":17,"tag":179,"props":902,"children":903},{"style":719},[904],{"type":23,"value":905},"=",{"type":17,"tag":179,"props":907,"children":908},{"style":203},[909],{"type":23,"value":910}," 0\n",{"type":17,"tag":179,"props":912,"children":914},{"class":181,"line":913},6,[915],{"type":17,"tag":179,"props":916,"children":917},{"emptyLinePlaceholder":65},[918],{"type":23,"value":883},{"type":17,"tag":179,"props":920,"children":922},{"class":181,"line":921},7,[923],{"type":17,"tag":179,"props":924,"children":925},{"style":439},[926],{"type":23,"value":927},"// If statement that contains multiple statements\n",{"type":17,"tag":179,"props":929,"children":931},{"class":181,"line":930},8,[932,937,942,947],{"type":17,"tag":179,"props":933,"children":934},{"style":719},[935],{"type":23,"value":936},"if",{"type":17,"tag":179,"props":938,"children":939},{"style":729},[940],{"type":23,"value":941}," (variable == ",{"type":17,"tag":179,"props":943,"children":944},{"style":203},[945],{"type":23,"value":946},"0",{"type":17,"tag":179,"props":948,"children":949},{"style":729},[950],{"type":23,"value":951},") {\n",{"type":17,"tag":179,"props":953,"children":955},{"class":181,"line":954},9,[956],{"type":17,"tag":179,"props":957,"children":958},{"style":439},[959],{"type":23,"value":960},"    // Assignment statement\n",{"type":17,"tag":179,"props":962,"children":964},{"class":181,"line":963},10,[965,970,974],{"type":17,"tag":179,"props":966,"children":967},{"style":729},[968],{"type":23,"value":969},"    variable ",{"type":17,"tag":179,"props":971,"children":972},{"style":719},[973],{"type":23,"value":905},{"type":17,"tag":179,"props":975,"children":976},{"style":203},[977],{"type":23,"value":978}," 1\n",{"type":17,"tag":179,"props":980,"children":982},{"class":181,"line":981},11,[983],{"type":17,"tag":179,"props":984,"children":985},{"emptyLinePlaceholder":65},[986],{"type":23,"value":883},{"type":17,"tag":179,"props":988,"children":990},{"class":181,"line":989},12,[991],{"type":17,"tag":179,"props":992,"children":993},{"style":439},[994],{"type":23,"value":995},"    // Expression statement (postfix increment)\n",{"type":17,"tag":179,"props":997,"children":999},{"class":181,"line":998},13,[1000,1005],{"type":17,"tag":179,"props":1001,"children":1002},{"style":729},[1003],{"type":23,"value":1004},"    variable",{"type":17,"tag":179,"props":1006,"children":1007},{"style":719},[1008],{"type":23,"value":1009},"++\n",{"type":17,"tag":179,"props":1011,"children":1013},{"class":181,"line":1012},14,[1014],{"type":17,"tag":179,"props":1015,"children":1016},{"style":729},[1017],{"type":23,"value":766},{"type":17,"tag":126,"props":1019,"children":1021},{"id":1020},"expressions",[1022],{"type":23,"value":1023},"Expressions",{"type":17,"tag":25,"props":1025,"children":1026},{},[1027,1029,1034,1036,1041],{"type":23,"value":1028},"An expression is a statement that evaluates to a value. For example, ",{"type":17,"tag":161,"props":1030,"children":1031},{"className":7},[1032],{"type":23,"value":1033},"1 + 2",{"type":23,"value":1035}," is an expression that evaluates to ",{"type":17,"tag":161,"props":1037,"children":1038},{"className":7},[1039],{"type":23,"value":1040},"3",{"type":23,"value":274},{"type":17,"tag":25,"props":1043,"children":1044},{},[1045],{"type":23,"value":1046},"Expressions can be used in many places, such as in assignment statements, function calls, and control flow statements.",{"type":17,"tag":126,"props":1048,"children":1050},{"id":1049},"variables",[1051],{"type":23,"value":1052},"Variables",{"type":17,"tag":25,"props":1054,"children":1055},{},[1056],{"type":23,"value":1057},"Variables are used to store values in memory.",{"type":17,"tag":25,"props":1059,"children":1060},{},[1061,1063,1067],{"type":23,"value":1062},"You can declare variable specifying the ",{"type":17,"tag":31,"props":1064,"children":1065},{"href":648},[1066],{"type":23,"value":594},{"type":23,"value":1068}," and name of the variable:",{"type":17,"tag":169,"props":1070,"children":1072},{"className":428,"code":1071,"language":189,"meta":7,"style":7},"// Create an integer variable called \"variable\"\nint variable\n",[1073],{"type":17,"tag":161,"props":1074,"children":1075},{"__ignoreMap":7},[1076,1084],{"type":17,"tag":179,"props":1077,"children":1078},{"class":181,"line":182},[1079],{"type":17,"tag":179,"props":1080,"children":1081},{"style":439},[1082],{"type":23,"value":1083},"// Create an integer variable called \"variable\"\n",{"type":17,"tag":179,"props":1085,"children":1086},{"class":181,"line":47},[1087,1091],{"type":17,"tag":179,"props":1088,"children":1089},{"style":719},[1090],{"type":23,"value":547},{"type":17,"tag":179,"props":1092,"children":1093},{"style":729},[1094],{"type":23,"value":875},{"type":17,"tag":25,"props":1096,"children":1097},{},[1098,1100,1104],{"type":23,"value":1099},"You can also assign a value to a variable when declaring it by using the ",{"type":17,"tag":161,"props":1101,"children":1102},{"className":7},[1103],{"type":23,"value":905},{"type":23,"value":783},{"type":17,"tag":169,"props":1106,"children":1108},{"className":428,"code":1107,"language":189,"meta":7,"style":7},"// Create an integer variable called \"variable\" and assign it the value 1\nint variable = 1\n",[1109],{"type":17,"tag":161,"props":1110,"children":1111},{"__ignoreMap":7},[1112,1120],{"type":17,"tag":179,"props":1113,"children":1114},{"class":181,"line":182},[1115],{"type":17,"tag":179,"props":1116,"children":1117},{"style":439},[1118],{"type":23,"value":1119},"// Create an integer variable called \"variable\" and assign it the value 1\n",{"type":17,"tag":179,"props":1121,"children":1122},{"class":181,"line":47},[1123,1127,1132,1136],{"type":17,"tag":179,"props":1124,"children":1125},{"style":719},[1126],{"type":23,"value":547},{"type":17,"tag":179,"props":1128,"children":1129},{"style":729},[1130],{"type":23,"value":1131}," variable ",{"type":17,"tag":179,"props":1133,"children":1134},{"style":719},[1135],{"type":23,"value":905},{"type":17,"tag":179,"props":1137,"children":1138},{"style":203},[1139],{"type":23,"value":978},{"type":17,"tag":25,"props":1141,"children":1142},{},[1143,1145,1150],{"type":23,"value":1144},"It is also possible to let the compiler infer the type of the variable. This is done by using the ",{"type":17,"tag":161,"props":1146,"children":1147},{"className":7},[1148],{"type":23,"value":1149},"var",{"type":23,"value":1151}," keyword.\nThe compiler will look at the value that is assigned to the variable, and infer the type from that:",{"type":17,"tag":169,"props":1153,"children":1155},{"className":428,"code":1154,"language":189,"meta":7,"style":7},"// Create an integer variable called \"variable\" and assign it the value 1\nvar variable = 1\n",[1156],{"type":17,"tag":161,"props":1157,"children":1158},{"__ignoreMap":7},[1159,1166],{"type":17,"tag":179,"props":1160,"children":1161},{"class":181,"line":182},[1162],{"type":17,"tag":179,"props":1163,"children":1164},{"style":439},[1165],{"type":23,"value":1119},{"type":17,"tag":179,"props":1167,"children":1168},{"class":181,"line":47},[1169,1173,1177,1181],{"type":17,"tag":179,"props":1170,"children":1171},{"style":719},[1172],{"type":23,"value":1149},{"type":17,"tag":179,"props":1174,"children":1175},{"style":729},[1176],{"type":23,"value":1131},{"type":17,"tag":179,"props":1178,"children":1179},{"style":719},[1180],{"type":23,"value":905},{"type":17,"tag":179,"props":1182,"children":1183},{"style":203},[1184],{"type":23,"value":978},{"type":17,"tag":126,"props":1186,"children":1188},{"id":1187},"semi-colons",[1189],{"type":23,"value":1190},"Semi-colons",{"type":17,"tag":25,"props":1192,"children":1193},{},[1194],{"type":23,"value":1195},"Semi-colons can be used to separate statements. They are optional, but are required if you want to put multiple statements on the same line.",{"type":17,"tag":25,"props":1197,"children":1198},{},[1199],{"type":23,"value":1200},"For example, this is valid:",{"type":17,"tag":169,"props":1202,"children":1204},{"className":428,"code":1203,"language":189,"meta":7,"style":7},"int a = 1\n",[1205],{"type":17,"tag":161,"props":1206,"children":1207},{"__ignoreMap":7},[1208],{"type":17,"tag":179,"props":1209,"children":1210},{"class":181,"line":182},[1211,1215,1220,1224],{"type":17,"tag":179,"props":1212,"children":1213},{"style":719},[1214],{"type":23,"value":547},{"type":17,"tag":179,"props":1216,"children":1217},{"style":729},[1218],{"type":23,"value":1219}," a ",{"type":17,"tag":179,"props":1221,"children":1222},{"style":719},[1223],{"type":23,"value":905},{"type":17,"tag":179,"props":1225,"children":1226},{"style":203},[1227],{"type":23,"value":978},{"type":17,"tag":25,"props":1229,"children":1230},{},[1231],{"type":23,"value":1232},"But this is not, since there are multiple statements on the same line:",{"type":17,"tag":169,"props":1234,"children":1236},{"className":428,"code":1235,"language":189,"meta":7,"style":7},"int a = 1 int b = 2\n",[1237],{"type":17,"tag":161,"props":1238,"children":1239},{"__ignoreMap":7},[1240],{"type":17,"tag":179,"props":1241,"children":1242},{"class":181,"line":182},[1243,1247,1251,1255,1260,1265,1270,1274],{"type":17,"tag":179,"props":1244,"children":1245},{"style":719},[1246],{"type":23,"value":547},{"type":17,"tag":179,"props":1248,"children":1249},{"style":729},[1250],{"type":23,"value":1219},{"type":17,"tag":179,"props":1252,"children":1253},{"style":719},[1254],{"type":23,"value":905},{"type":17,"tag":179,"props":1256,"children":1257},{"style":203},[1258],{"type":23,"value":1259}," 1",{"type":17,"tag":179,"props":1261,"children":1262},{"style":719},[1263],{"type":23,"value":1264}," int",{"type":17,"tag":179,"props":1266,"children":1267},{"style":729},[1268],{"type":23,"value":1269}," b ",{"type":17,"tag":179,"props":1271,"children":1272},{"style":719},[1273],{"type":23,"value":905},{"type":17,"tag":179,"props":1275,"children":1276},{"style":203},[1277],{"type":23,"value":1278}," 2\n",{"type":17,"tag":25,"props":1280,"children":1281},{},[1282],{"type":23,"value":1283},"If you want to put multiple statements on the same line, you can use semi-colons to separate them:",{"type":17,"tag":169,"props":1285,"children":1287},{"className":428,"code":1286,"language":189,"meta":7,"style":7},"int a = 1; int b = 2\n",[1288],{"type":17,"tag":161,"props":1289,"children":1290},{"__ignoreMap":7},[1291],{"type":17,"tag":179,"props":1292,"children":1293},{"class":181,"line":182},[1294,1298,1302,1306,1310,1315,1319,1323,1327],{"type":17,"tag":179,"props":1295,"children":1296},{"style":719},[1297],{"type":23,"value":547},{"type":17,"tag":179,"props":1299,"children":1300},{"style":729},[1301],{"type":23,"value":1219},{"type":17,"tag":179,"props":1303,"children":1304},{"style":719},[1305],{"type":23,"value":905},{"type":17,"tag":179,"props":1307,"children":1308},{"style":203},[1309],{"type":23,"value":1259},{"type":17,"tag":179,"props":1311,"children":1312},{"style":729},[1313],{"type":23,"value":1314},"; ",{"type":17,"tag":179,"props":1316,"children":1317},{"style":719},[1318],{"type":23,"value":547},{"type":17,"tag":179,"props":1320,"children":1321},{"style":729},[1322],{"type":23,"value":1269},{"type":17,"tag":179,"props":1324,"children":1325},{"style":719},[1326],{"type":23,"value":905},{"type":17,"tag":179,"props":1328,"children":1329},{"style":203},[1330],{"type":23,"value":1278},{"type":17,"tag":126,"props":1332,"children":1334},{"id":1333},"functions",[1335],{"type":23,"value":1336},"Functions",{"type":17,"tag":25,"props":1338,"children":1339},{},[1340],{"type":23,"value":1341},"Functions are used to reuse code. When you declare a function with code, you can call it from other places in your code.",{"type":17,"tag":25,"props":1343,"children":1344},{},[1345,1347,1351,1353,1358,1359,1364,1366,1370,1371,1375],{"type":23,"value":1346},"Functions are specified the return ",{"type":17,"tag":31,"props":1348,"children":1349},{"href":648},[1350],{"type":23,"value":594},{"type":23,"value":1352}," and name of the function, followed by the parameters of the function in parentheses (",{"type":17,"tag":161,"props":1354,"children":1355},{"className":7},[1356],{"type":23,"value":1357},"(",{"type":23,"value":669},{"type":17,"tag":161,"props":1360,"children":1361},{"className":7},[1362],{"type":23,"value":1363},")",{"type":23,"value":1365},"), and then a block of code surrounded by curly braces (",{"type":17,"tag":161,"props":1367,"children":1368},{"className":7},[1369],{"type":23,"value":667},{"type":23,"value":669},{"type":17,"tag":161,"props":1372,"children":1373},{"className":7},[1374],{"type":23,"value":674},{"type":23,"value":842},{"type":17,"tag":25,"props":1377,"children":1378},{},[1379,1381,1386],{"type":23,"value":1380},"To return a value from a function, use the ",{"type":17,"tag":161,"props":1382,"children":1383},{"className":7},[1384],{"type":23,"value":1385},"return",{"type":23,"value":1387}," keyword followed by the value to return.",{"type":17,"tag":25,"props":1389,"children":1390},{},[1391,1393,1398],{"type":23,"value":1392},"For example, the following code declares a function called ",{"type":17,"tag":161,"props":1394,"children":1395},{"className":7},[1396],{"type":23,"value":1397},"add",{"type":23,"value":1399}," that takes two integers as parameters and returns an integer:",{"type":17,"tag":169,"props":1401,"children":1403},{"className":428,"code":1402,"language":189,"meta":7,"style":7},"// Declare the add function\n// The function takes two integers (a and b) as parameters and returns an integer\nint add(int a, int b) {\n    return a + b\n}\n",[1404],{"type":17,"tag":161,"props":1405,"children":1406},{"__ignoreMap":7},[1407,1415,1423,1453,1475],{"type":17,"tag":179,"props":1408,"children":1409},{"class":181,"line":182},[1410],{"type":17,"tag":179,"props":1411,"children":1412},{"style":439},[1413],{"type":23,"value":1414},"// Declare the add function\n",{"type":17,"tag":179,"props":1416,"children":1417},{"class":181,"line":47},[1418],{"type":17,"tag":179,"props":1419,"children":1420},{"style":439},[1421],{"type":23,"value":1422},"// The function takes two integers (a and b) as parameters and returns an integer\n",{"type":17,"tag":179,"props":1424,"children":1425},{"class":181,"line":486},[1426,1430,1435,1439,1444,1448],{"type":17,"tag":179,"props":1427,"children":1428},{"style":719},[1429],{"type":23,"value":547},{"type":17,"tag":179,"props":1431,"children":1432},{"style":729},[1433],{"type":23,"value":1434}," add(",{"type":17,"tag":179,"props":1436,"children":1437},{"style":719},[1438],{"type":23,"value":547},{"type":17,"tag":179,"props":1440,"children":1441},{"style":729},[1442],{"type":23,"value":1443}," a, ",{"type":17,"tag":179,"props":1445,"children":1446},{"style":719},[1447],{"type":23,"value":547},{"type":17,"tag":179,"props":1449,"children":1450},{"style":729},[1451],{"type":23,"value":1452}," b) {\n",{"type":17,"tag":179,"props":1454,"children":1455},{"class":181,"line":760},[1456,1461,1465,1470],{"type":17,"tag":179,"props":1457,"children":1458},{"style":719},[1459],{"type":23,"value":1460},"    return",{"type":17,"tag":179,"props":1462,"children":1463},{"style":729},[1464],{"type":23,"value":1219},{"type":17,"tag":179,"props":1466,"children":1467},{"style":719},[1468],{"type":23,"value":1469},"+",{"type":17,"tag":179,"props":1471,"children":1472},{"style":729},[1473],{"type":23,"value":1474}," b\n",{"type":17,"tag":179,"props":1476,"children":1477},{"class":181,"line":894},[1478],{"type":17,"tag":179,"props":1479,"children":1480},{"style":729},[1481],{"type":23,"value":766},{"type":17,"tag":25,"props":1483,"children":1484},{},[1485,1487,1492,1494,1498],{"type":23,"value":1486},"Functions can also be declared without a return type by specifying ",{"type":17,"tag":161,"props":1488,"children":1489},{"className":7},[1490],{"type":23,"value":1491},"void",{"type":23,"value":1493}," as the return type. A function with a return type of ",{"type":17,"tag":161,"props":1495,"children":1496},{"className":7},[1497],{"type":23,"value":1491},{"type":23,"value":1499}," cannot return a value.",{"type":17,"tag":25,"props":1501,"children":1502},{},[1503,1504,1509],{"type":23,"value":1392},{"type":17,"tag":161,"props":1505,"children":1506},{"className":7},[1507],{"type":23,"value":1508},"print",{"type":23,"value":1510}," that takes a int array as a parameter and returns nothing:",{"type":17,"tag":169,"props":1512,"children":1514},{"className":428,"code":1513,"language":189,"meta":7,"style":7},"void print(int[] data) {\n    // Print the value to the screen\n}\n",[1515],{"type":17,"tag":161,"props":1516,"children":1517},{"__ignoreMap":7},[1518,1539,1547],{"type":17,"tag":179,"props":1519,"children":1520},{"class":181,"line":182},[1521,1525,1530,1534],{"type":17,"tag":179,"props":1522,"children":1523},{"style":186},[1524],{"type":23,"value":1491},{"type":17,"tag":179,"props":1526,"children":1527},{"style":729},[1528],{"type":23,"value":1529}," print(",{"type":17,"tag":179,"props":1531,"children":1532},{"style":719},[1533],{"type":23,"value":547},{"type":17,"tag":179,"props":1535,"children":1536},{"style":729},[1537],{"type":23,"value":1538},"[] data) {\n",{"type":17,"tag":179,"props":1540,"children":1541},{"class":181,"line":47},[1542],{"type":17,"tag":179,"props":1543,"children":1544},{"style":439},[1545],{"type":23,"value":1546},"    // Print the value to the screen\n",{"type":17,"tag":179,"props":1548,"children":1549},{"class":181,"line":486},[1550],{"type":17,"tag":179,"props":1551,"children":1552},{"style":729},[1553],{"type":23,"value":766},{"type":17,"tag":636,"props":1555,"children":1557},{"id":1556},"calling-functions",[1558],{"type":23,"value":1559},"Calling functions",{"type":17,"tag":25,"props":1561,"children":1562},{},[1563,1565,1569,1570,1574],{"type":23,"value":1564},"To call a function, use the name of the function followed by the arguments of the function in parentheses (",{"type":17,"tag":161,"props":1566,"children":1567},{"className":7},[1568],{"type":23,"value":1357},{"type":23,"value":669},{"type":17,"tag":161,"props":1571,"children":1572},{"className":7},[1573],{"type":23,"value":1363},{"type":23,"value":842},{"type":17,"tag":25,"props":1576,"children":1577},{},[1578,1580,1584],{"type":23,"value":1579},"For example, the following code calls the ",{"type":17,"tag":161,"props":1581,"children":1582},{"className":7},[1583],{"type":23,"value":1397},{"type":23,"value":1585}," function that we declared earlier:",{"type":17,"tag":169,"props":1587,"children":1590},{"className":428,"code":1588,"filename":851,"highlights":1589,"language":189,"meta":7,"style":7},"// Call the add function and store the result in the \"result\" variable\nint result = add(1, 2)\n\nint add(int a, int b) {\n    return a + b\n}\n",[47],[1591],{"type":17,"tag":161,"props":1592,"children":1593},{"__ignoreMap":7},[1594,1602,1643,1650,1677,1696],{"type":17,"tag":179,"props":1595,"children":1596},{"class":181,"line":182},[1597],{"type":17,"tag":179,"props":1598,"children":1599},{"style":439},[1600],{"type":23,"value":1601},"// Call the add function and store the result in the \"result\" variable\n",{"type":17,"tag":179,"props":1603,"children":1605},{"class":1604,"line":47},"line highlight",[1606,1610,1615,1619,1623,1628,1633,1638],{"type":17,"tag":179,"props":1607,"children":1608},{"style":719},[1609],{"type":23,"value":547},{"type":17,"tag":179,"props":1611,"children":1612},{"style":729},[1613],{"type":23,"value":1614}," result ",{"type":17,"tag":179,"props":1616,"children":1617},{"style":719},[1618],{"type":23,"value":905},{"type":17,"tag":179,"props":1620,"children":1621},{"style":729},[1622],{"type":23,"value":1434},{"type":17,"tag":179,"props":1624,"children":1625},{"style":203},[1626],{"type":23,"value":1627},"1",{"type":17,"tag":179,"props":1629,"children":1630},{"style":729},[1631],{"type":23,"value":1632},", ",{"type":17,"tag":179,"props":1634,"children":1635},{"style":203},[1636],{"type":23,"value":1637},"2",{"type":17,"tag":179,"props":1639,"children":1640},{"style":729},[1641],{"type":23,"value":1642},")\n",{"type":17,"tag":179,"props":1644,"children":1645},{"class":181,"line":486},[1646],{"type":17,"tag":179,"props":1647,"children":1648},{"emptyLinePlaceholder":65},[1649],{"type":23,"value":883},{"type":17,"tag":179,"props":1651,"children":1652},{"class":181,"line":760},[1653,1657,1661,1665,1669,1673],{"type":17,"tag":179,"props":1654,"children":1655},{"style":719},[1656],{"type":23,"value":547},{"type":17,"tag":179,"props":1658,"children":1659},{"style":729},[1660],{"type":23,"value":1434},{"type":17,"tag":179,"props":1662,"children":1663},{"style":719},[1664],{"type":23,"value":547},{"type":17,"tag":179,"props":1666,"children":1667},{"style":729},[1668],{"type":23,"value":1443},{"type":17,"tag":179,"props":1670,"children":1671},{"style":719},[1672],{"type":23,"value":547},{"type":17,"tag":179,"props":1674,"children":1675},{"style":729},[1676],{"type":23,"value":1452},{"type":17,"tag":179,"props":1678,"children":1679},{"class":181,"line":894},[1680,1684,1688,1692],{"type":17,"tag":179,"props":1681,"children":1682},{"style":719},[1683],{"type":23,"value":1460},{"type":17,"tag":179,"props":1685,"children":1686},{"style":729},[1687],{"type":23,"value":1219},{"type":17,"tag":179,"props":1689,"children":1690},{"style":719},[1691],{"type":23,"value":1469},{"type":17,"tag":179,"props":1693,"children":1694},{"style":729},[1695],{"type":23,"value":1474},{"type":17,"tag":179,"props":1697,"children":1698},{"class":181,"line":913},[1699],{"type":17,"tag":179,"props":1700,"children":1701},{"style":729},[1702],{"type":23,"value":766},{"type":17,"tag":315,"props":1704,"children":1705},{},[1706],{"type":23,"value":319},{"title":7,"searchDepth":47,"depth":47,"links":1708},[1709,1710,1714,1715,1716,1717,1718],{"id":400,"depth":47,"text":403},{"id":495,"depth":47,"text":498,"children":1711},[1712,1713],{"id":638,"depth":486,"text":78},{"id":769,"depth":486,"text":772},{"id":810,"depth":47,"text":813},{"id":1020,"depth":47,"text":1023},{"id":1049,"depth":47,"text":1052},{"id":1187,"depth":47,"text":1190},{"id":1333,"depth":47,"text":1336,"children":1719},[1720],{"id":1556,"depth":486,"text":1559},"content:docs:2.get-started:3.basics-of-yabal.md","docs/2.get-started/3.basics-of-yabal.md",1698346814449]