[{"data":1,"prerenderedAt":1652},["Reactive",2],{"content-query-AcJ52JYVSR":3,"content-navigation-8C37fagqQL":54,"content-navigation-AUvUjo7VrF":92,"content-query-NKK6OdiaiL":101,"content-query-4SxawDMX1W":159,"content-query-lyMJy2tOYZ":1447},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"navigation":12,"body":13,"_type":49,"_id":50,"_source":51,"_file":52,"_extension":53},"/docs/get-started","docs",false,"","Getting started","Get started with Yabal.",[11],"index",{"sidebar":6},{"type":14,"children":15,"toc":46},"root",[16,24,41],{"type":17,"tag":18,"props":19,"children":21},"element","h1",{"id":20},"getting-started",[22],{"type":23,"value":8},"text",{"type":17,"tag":25,"props":26,"children":27},"p",{},[28,30,39],{"type":23,"value":29},"Yabal is a programming language for ",{"type":17,"tag":31,"props":32,"children":36},"a",{"href":33,"rel":34},"https://github.com/sam-astro/Astro8-Computer",[35],"nofollow",[37],{"type":23,"value":38},"Astro-8",{"type":23,"value":40},", a custom 16-bit homebrew CPU. Yabal stands for \"Yet Another Basic Astro-8 Language\".\nIt is a simple language that is easy to learn and use, and compiles to Astro-8 assembly.",{"type":17,"tag":42,"props":43,"children":45},"related",{":tags":44},"get-started",[],{"title":7,"searchDepth":47,"depth":47,"links":48},2,[],"markdown","content:docs:2.get-started:index.md","content","docs/2.get-started/index.md","md",[55],{"title":56,"_path":57,"children":58,"root":65},"Documentation","/docs",[59,60,73,81],{"title":56,"_path":57},{"title":8,"_path":4,"children":61,"sidebar":6},[62,66,69,72],{"title":63,"_path":64,"sidebar":65},"Downloads","/docs/get-started/downloads",true,{"title":67,"_path":68,"sidebar":65},"Emulator","/docs/get-started/emulator",{"title":70,"_path":71,"sidebar":65},"Basics of Yabal","/docs/get-started/basics-of-yabal",{"title":8,"_path":4,"sidebar":6},{"title":74,"_path":75,"children":76,"sidebar":6},"Language reference","/docs/language-reference",[77,80],{"title":78,"_path":79,"sidebar":65},"Structs","/docs/language-reference/structs",{"title":74,"_path":75,"sidebar":6},{"title":82,"_path":83,"children":84,"sidebar":6},"Advanced topics","/docs/advanced-topics",[85,88,91],{"title":86,"_path":87,"sidebar":65},"Assembly mode","/docs/advanced-topics/assembly-mode",{"title":89,"_path":90,"sidebar":65},"Optimizing","/docs/advanced-topics/optimizing",{"title":82,"_path":83,"sidebar":6},[93],{"title":56,"_path":57,"children":94,"root":65},[95],{"title":96,"_path":4,"children":97},"Get Started",[98,99,100],{"title":63,"_path":64,"sidebar":65},{"title":67,"_path":68,"sidebar":65},{"title":70,"_path":71,"sidebar":65},{"_path":64,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":63,"description":102,"tags":103,"navigation":104,"body":105,"_type":49,"_id":157,"_source":51,"_file":158,"_extension":53},"Download the Yabal compiler and Astro-8 emulator.",[44],{"sidebar":65},{"type":14,"children":106,"toc":153},[107,112,117,124,129,134,138,144,149],{"type":17,"tag":18,"props":108,"children":110},{"id":109},"downloads",[111],{"type":23,"value":63},{"type":17,"tag":25,"props":113,"children":114},{},[115],{"type":23,"value":116},"On this page you can download the Yabal compiler and the Astro-8 emulator.",{"type":17,"tag":118,"props":119,"children":121},"h2",{"id":120},"yabal",[122],{"type":23,"value":123},"Yabal",{"type":17,"tag":25,"props":125,"children":126},{},[127],{"type":23,"value":128},"Yabal contains the compiler and emulator.",{"type":17,"tag":130,"props":131,"children":133},"download",{":repo":132},"YabalLang/compiler",[],{"type":17,"tag":135,"props":136,"children":137},"hr",{},[],{"type":17,"tag":118,"props":139,"children":141},{"id":140},"astro-8-emulator",[142],{"type":23,"value":143},"Astro-8 Emulator",{"type":17,"tag":25,"props":145,"children":146},{},[147],{"type":23,"value":148},"Astro-8 emulator an emulator for Astro-8. In comparison to the Yabal emulator it supports more features like audio and file I/O.",{"type":17,"tag":130,"props":150,"children":152},{":repo":151},"sam-astro/Astro8-Computer",[],{"title":7,"searchDepth":47,"depth":47,"links":154},[155,156],{"id":120,"depth":47,"text":123},{"id":140,"depth":47,"text":143},"content:docs:2.get-started:1.downloads.md","docs/2.get-started/1.downloads.md",{"_path":71,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":70,"description":160,"tags":161,"navigation":162,"body":163,"_type":49,"_id":1445,"_source":51,"_file":1446,"_extension":53},"Learn about the basics of Yabal.",[44],{"sidebar":65},{"type":14,"children":164,"toc":1431},[165,170,175,181,186,191,204,224,243,275,281,286,291,417,423,435,466,490,551,557,568,592,598,603,627,632,802,808,826,831,837,842,853,879,889,924,936,969,975,980,985,1012,1017,1063,1068,1115,1121,1126,1160,1172,1184,1266,1284,1295,1338,1344,1359,1370,1425],{"type":17,"tag":18,"props":166,"children":168},{"id":167},"basics-of-yabal",[169],{"type":23,"value":70},{"type":17,"tag":25,"props":171,"children":172},{},[173],{"type":23,"value":174},"This page will teach you the basics of Yabal.",{"type":17,"tag":118,"props":176,"children":178},{"id":177},"comments",[179],{"type":23,"value":180},"Comments",{"type":17,"tag":25,"props":182,"children":183},{},[184],{"type":23,"value":185},"Comments are used to add notes to your code. They are ignored by the compiler.",{"type":17,"tag":25,"props":187,"children":188},{},[189],{"type":23,"value":190},"There are two types of comments in Yabal: single-line comments and multi-line comments.",{"type":17,"tag":25,"props":192,"children":193},{},[194,196,202],{"type":23,"value":195},"Single-line comments start with ",{"type":17,"tag":197,"props":198,"children":199},"code",{"className":7},[200],{"type":23,"value":201},"//",{"type":23,"value":203}," and end at the end of the line:",{"type":17,"tag":205,"props":206,"children":209},"pre",{"className":207,"code":208,"language":120,"meta":7,"style":7},"language-yabal shiki shiki-themes github-light github-dark","// This is a single-line comment\n",[210],{"type":17,"tag":197,"props":211,"children":212},{"__ignoreMap":7},[213],{"type":17,"tag":214,"props":215,"children":218},"span",{"class":216,"line":217},"line",1,[219],{"type":17,"tag":214,"props":220,"children":222},{"style":221},"--shiki-default:#6A737D;--shiki-dark:#6A737D",[223],{"type":23,"value":208},{"type":17,"tag":25,"props":225,"children":226},{},[227,229,234,236,241],{"type":23,"value":228},"Multi-line comments start with ",{"type":17,"tag":197,"props":230,"children":231},{"className":7},[232],{"type":23,"value":233},"/*",{"type":23,"value":235}," and end with ",{"type":17,"tag":197,"props":237,"children":238},{"className":7},[239],{"type":23,"value":240},"*/",{"type":23,"value":242},":",{"type":17,"tag":205,"props":244,"children":246},{"className":207,"code":245,"language":120,"meta":7,"style":7},"/*\nThis is a multi-line comment\n*/\n",[247],{"type":17,"tag":197,"props":248,"children":249},{"__ignoreMap":7},[250,258,266],{"type":17,"tag":214,"props":251,"children":252},{"class":216,"line":217},[253],{"type":17,"tag":214,"props":254,"children":255},{"style":221},[256],{"type":23,"value":257},"/*\n",{"type":17,"tag":214,"props":259,"children":260},{"class":216,"line":47},[261],{"type":17,"tag":214,"props":262,"children":263},{"style":221},[264],{"type":23,"value":265},"This is a multi-line comment\n",{"type":17,"tag":214,"props":267,"children":269},{"class":216,"line":268},3,[270],{"type":17,"tag":214,"props":271,"children":272},{"style":221},[273],{"type":23,"value":274},"*/\n",{"type":17,"tag":118,"props":276,"children":278},{"id":277},"types",[279],{"type":23,"value":280},"Types",{"type":17,"tag":25,"props":282,"children":283},{},[284],{"type":23,"value":285},"Yabal is a statically typed language. An statically typed language means that the type of a variable is known at compile time. This is in contrast to a dynamically typed language (like JavaScript), where the type of a variable is only known at runtime.",{"type":17,"tag":25,"props":287,"children":288},{},[289],{"type":23,"value":290},"Yabal has the following types:",{"type":17,"tag":292,"props":293,"children":294},"table",{},[295,314],{"type":17,"tag":296,"props":297,"children":298},"thead",{},[299],{"type":17,"tag":300,"props":301,"children":302},"tr",{},[303,309],{"type":17,"tag":304,"props":305,"children":306},"th",{},[307],{"type":23,"value":308},"Type",{"type":17,"tag":304,"props":310,"children":311},{},[312],{"type":23,"value":313},"Description",{"type":17,"tag":315,"props":316,"children":317},"tbody",{},[318,335,365,395],{"type":17,"tag":300,"props":319,"children":320},{},[321,330],{"type":17,"tag":322,"props":323,"children":324},"td",{},[325],{"type":17,"tag":197,"props":326,"children":327},{"className":7},[328],{"type":23,"value":329},"int",{"type":17,"tag":322,"props":331,"children":332},{},[333],{"type":23,"value":334},"A 16-bit unsigned integer",{"type":17,"tag":300,"props":336,"children":337},{},[338,346],{"type":17,"tag":322,"props":339,"children":340},{},[341],{"type":17,"tag":197,"props":342,"children":343},{"className":7},[344],{"type":23,"value":345},"bool",{"type":17,"tag":322,"props":347,"children":348},{},[349,351,356,358,363],{"type":23,"value":350},"A boolean value (",{"type":17,"tag":197,"props":352,"children":353},{"className":7},[354],{"type":23,"value":355},"true",{"type":23,"value":357}," or ",{"type":17,"tag":197,"props":359,"children":360},{"className":7},[361],{"type":23,"value":362},"false",{"type":23,"value":364},") stored as a 16-bit integer",{"type":17,"tag":300,"props":366,"children":367},{},[368,382],{"type":17,"tag":322,"props":369,"children":370},{},[371,377],{"type":17,"tag":372,"props":373,"children":374},"em",{},[375],{"type":23,"value":376},"type",{"type":17,"tag":197,"props":378,"children":379},{"className":7},[380],{"type":23,"value":381},"[]",{"type":17,"tag":322,"props":383,"children":384},{},[385,387,393],{"type":23,"value":386},"An ",{"type":17,"tag":31,"props":388,"children":390},{"href":389},"#arrays",[391],{"type":23,"value":392},"array",{"type":23,"value":394}," of values of the specified type",{"type":17,"tag":300,"props":396,"children":397},{},[398,406],{"type":17,"tag":322,"props":399,"children":400},{},[401],{"type":17,"tag":372,"props":402,"children":403},{},[404],{"type":23,"value":405},"UserDefined",{"type":17,"tag":322,"props":407,"children":408},{},[409,411],{"type":23,"value":410},"An user-defined ",{"type":17,"tag":31,"props":412,"children":414},{"href":413},"#structs",[415],{"type":23,"value":416},"struct",{"type":17,"tag":418,"props":419,"children":421},"h3",{"id":420},"structs",[422],{"type":23,"value":78},{"type":17,"tag":25,"props":424,"children":425},{},[426,428,433],{"type":23,"value":427},"A struct is a user-defined type. It contains a number of fields, which can be of any ",{"type":17,"tag":31,"props":429,"children":431},{"href":430},"#types",[432],{"type":23,"value":376},{"type":23,"value":434},".",{"type":17,"tag":25,"props":436,"children":437},{},[438,440,444,446,451,453,458,460,464],{"type":23,"value":439},"Structs are declared using the ",{"type":17,"tag":197,"props":441,"children":442},{"className":7},[443],{"type":23,"value":416},{"type":23,"value":445}," keyword, followed by the name of the struct, and then a block of code surrounded by curly braces (",{"type":17,"tag":197,"props":447,"children":448},{"className":7},[449],{"type":23,"value":450},"{",{"type":23,"value":452}," and ",{"type":17,"tag":197,"props":454,"children":455},{"className":7},[456],{"type":23,"value":457},"}",{"type":23,"value":459},").\nWithin the block of code, you can declare fields by specifying the ",{"type":17,"tag":31,"props":461,"children":462},{"href":430},[463],{"type":23,"value":376},{"type":23,"value":465}," and name of the field.",{"type":17,"tag":25,"props":467,"children":468},{},[469,471,476,478,483,484,489],{"type":23,"value":470},"For example, we declare a struct called ",{"type":17,"tag":197,"props":472,"children":473},{"className":7},[474],{"type":23,"value":475},"Position",{"type":23,"value":477}," with two fields, ",{"type":17,"tag":197,"props":479,"children":480},{"className":7},[481],{"type":23,"value":482},"x",{"type":23,"value":452},{"type":17,"tag":197,"props":485,"children":486},{"className":7},[487],{"type":23,"value":488},"y",{"type":23,"value":242},{"type":17,"tag":205,"props":491,"children":493},{"className":207,"code":492,"language":120,"meta":7,"style":7},"struct Position {\n    int x\n    int y\n}\n",[494],{"type":17,"tag":197,"props":495,"children":496},{"__ignoreMap":7},[497,517,530,542],{"type":17,"tag":214,"props":498,"children":499},{"class":216,"line":217},[500,505,511],{"type":17,"tag":214,"props":501,"children":503},{"style":502},"--shiki-default:#D73A49;--shiki-dark:#F97583",[504],{"type":23,"value":416},{"type":17,"tag":214,"props":506,"children":508},{"style":507},"--shiki-default:#6F42C1;--shiki-dark:#B392F0",[509],{"type":23,"value":510}," Position",{"type":17,"tag":214,"props":512,"children":514},{"style":513},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[515],{"type":23,"value":516}," {\n",{"type":17,"tag":214,"props":518,"children":519},{"class":216,"line":47},[520,525],{"type":17,"tag":214,"props":521,"children":522},{"style":502},[523],{"type":23,"value":524},"    int",{"type":17,"tag":214,"props":526,"children":527},{"style":513},[528],{"type":23,"value":529}," x\n",{"type":17,"tag":214,"props":531,"children":532},{"class":216,"line":268},[533,537],{"type":17,"tag":214,"props":534,"children":535},{"style":502},[536],{"type":23,"value":524},{"type":17,"tag":214,"props":538,"children":539},{"style":513},[540],{"type":23,"value":541}," y\n",{"type":17,"tag":214,"props":543,"children":545},{"class":216,"line":544},4,[546],{"type":17,"tag":214,"props":547,"children":548},{"style":513},[549],{"type":23,"value":550},"}\n",{"type":17,"tag":418,"props":552,"children":554},{"id":553},"arrays",[555],{"type":23,"value":556},"Arrays",{"type":17,"tag":25,"props":558,"children":559},{},[560,562,566],{"type":23,"value":561},"An array is a collection of values of the same type. Arrays are declared using the ",{"type":17,"tag":197,"props":563,"children":564},{"className":7},[565],{"type":23,"value":381},{"type":23,"value":567}," operator:",{"type":17,"tag":205,"props":569,"children":571},{"className":207,"code":570,"language":120,"meta":7,"style":7},"int[] numbers // An array of integers\n",[572],{"type":17,"tag":197,"props":573,"children":574},{"__ignoreMap":7},[575],{"type":17,"tag":214,"props":576,"children":577},{"class":216,"line":217},[578,582,587],{"type":17,"tag":214,"props":579,"children":580},{"style":502},[581],{"type":23,"value":329},{"type":17,"tag":214,"props":583,"children":584},{"style":513},[585],{"type":23,"value":586},"[] numbers ",{"type":17,"tag":214,"props":588,"children":589},{"style":221},[590],{"type":23,"value":591},"// An array of integers\n",{"type":17,"tag":118,"props":593,"children":595},{"id":594},"statements",[596],{"type":23,"value":597},"Statements",{"type":17,"tag":25,"props":599,"children":600},{},[601],{"type":23,"value":602},"The actual code in a Yabal program is made up of statements. Common statements are variable declarations, declaring functions, calling functions and control flow statements.",{"type":17,"tag":25,"props":604,"children":605},{},[606,608,614,616,620,621,625],{"type":23,"value":607},"A statement can be a single line of code that ends with a new-line or ",{"type":17,"tag":31,"props":609,"children":611},{"href":610},"#semi-colons",[612],{"type":23,"value":613},"semi-colon",{"type":23,"value":615},". A statement can also be multiple lines of code surrounded by curly braces (",{"type":17,"tag":197,"props":617,"children":618},{"className":7},[619],{"type":23,"value":450},{"type":23,"value":452},{"type":17,"tag":197,"props":622,"children":623},{"className":7},[624],{"type":23,"value":457},{"type":23,"value":626},").",{"type":17,"tag":25,"props":628,"children":629},{},[630],{"type":23,"value":631},"The following code shows an example of a block of code:",{"type":17,"tag":205,"props":633,"children":635},{"className":207,"code":634,"language":120,"meta":7,"style":7},"// Variable declaration statement\nint variable\n\n// Assignment statement\nvariable = 0\n\n// If statement that contains multiple statements\nif (variable == 0) {\n    // Assignment statement\n    variable = 1\n\n    // Expression statement (postfix increment)\n    variable++\n}\n",[636],{"type":17,"tag":197,"props":637,"children":638},{"__ignoreMap":7},[639,647,659,667,675,695,703,712,736,745,763,771,780,794],{"type":17,"tag":214,"props":640,"children":641},{"class":216,"line":217},[642],{"type":17,"tag":214,"props":643,"children":644},{"style":221},[645],{"type":23,"value":646},"// Variable declaration statement\n",{"type":17,"tag":214,"props":648,"children":649},{"class":216,"line":47},[650,654],{"type":17,"tag":214,"props":651,"children":652},{"style":502},[653],{"type":23,"value":329},{"type":17,"tag":214,"props":655,"children":656},{"style":513},[657],{"type":23,"value":658}," variable\n",{"type":17,"tag":214,"props":660,"children":661},{"class":216,"line":268},[662],{"type":17,"tag":214,"props":663,"children":664},{"emptyLinePlaceholder":65},[665],{"type":23,"value":666},"\n",{"type":17,"tag":214,"props":668,"children":669},{"class":216,"line":544},[670],{"type":17,"tag":214,"props":671,"children":672},{"style":221},[673],{"type":23,"value":674},"// Assignment statement\n",{"type":17,"tag":214,"props":676,"children":678},{"class":216,"line":677},5,[679,684,689],{"type":17,"tag":214,"props":680,"children":681},{"style":513},[682],{"type":23,"value":683},"variable ",{"type":17,"tag":214,"props":685,"children":686},{"style":502},[687],{"type":23,"value":688},"=",{"type":17,"tag":214,"props":690,"children":692},{"style":691},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[693],{"type":23,"value":694}," 0\n",{"type":17,"tag":214,"props":696,"children":698},{"class":216,"line":697},6,[699],{"type":17,"tag":214,"props":700,"children":701},{"emptyLinePlaceholder":65},[702],{"type":23,"value":666},{"type":17,"tag":214,"props":704,"children":706},{"class":216,"line":705},7,[707],{"type":17,"tag":214,"props":708,"children":709},{"style":221},[710],{"type":23,"value":711},"// If statement that contains multiple statements\n",{"type":17,"tag":214,"props":713,"children":715},{"class":216,"line":714},8,[716,721,726,731],{"type":17,"tag":214,"props":717,"children":718},{"style":502},[719],{"type":23,"value":720},"if",{"type":17,"tag":214,"props":722,"children":723},{"style":513},[724],{"type":23,"value":725}," (variable == ",{"type":17,"tag":214,"props":727,"children":728},{"style":691},[729],{"type":23,"value":730},"0",{"type":17,"tag":214,"props":732,"children":733},{"style":513},[734],{"type":23,"value":735},") {\n",{"type":17,"tag":214,"props":737,"children":739},{"class":216,"line":738},9,[740],{"type":17,"tag":214,"props":741,"children":742},{"style":221},[743],{"type":23,"value":744},"    // Assignment statement\n",{"type":17,"tag":214,"props":746,"children":748},{"class":216,"line":747},10,[749,754,758],{"type":17,"tag":214,"props":750,"children":751},{"style":513},[752],{"type":23,"value":753},"    variable ",{"type":17,"tag":214,"props":755,"children":756},{"style":502},[757],{"type":23,"value":688},{"type":17,"tag":214,"props":759,"children":760},{"style":691},[761],{"type":23,"value":762}," 1\n",{"type":17,"tag":214,"props":764,"children":766},{"class":216,"line":765},11,[767],{"type":17,"tag":214,"props":768,"children":769},{"emptyLinePlaceholder":65},[770],{"type":23,"value":666},{"type":17,"tag":214,"props":772,"children":774},{"class":216,"line":773},12,[775],{"type":17,"tag":214,"props":776,"children":777},{"style":221},[778],{"type":23,"value":779},"    // Expression statement (postfix increment)\n",{"type":17,"tag":214,"props":781,"children":783},{"class":216,"line":782},13,[784,789],{"type":17,"tag":214,"props":785,"children":786},{"style":513},[787],{"type":23,"value":788},"    variable",{"type":17,"tag":214,"props":790,"children":791},{"style":502},[792],{"type":23,"value":793},"++\n",{"type":17,"tag":214,"props":795,"children":797},{"class":216,"line":796},14,[798],{"type":17,"tag":214,"props":799,"children":800},{"style":513},[801],{"type":23,"value":550},{"type":17,"tag":118,"props":803,"children":805},{"id":804},"expressions",[806],{"type":23,"value":807},"Expressions",{"type":17,"tag":25,"props":809,"children":810},{},[811,813,818,820,825],{"type":23,"value":812},"An expression is a statement that evaluates to a value. For example, ",{"type":17,"tag":197,"props":814,"children":815},{"className":7},[816],{"type":23,"value":817},"1 + 2",{"type":23,"value":819}," is an expression that evaluates to ",{"type":17,"tag":197,"props":821,"children":822},{"className":7},[823],{"type":23,"value":824},"3",{"type":23,"value":434},{"type":17,"tag":25,"props":827,"children":828},{},[829],{"type":23,"value":830},"Expressions can be used in many places, such as in assignment statements, function calls, and control flow statements.",{"type":17,"tag":118,"props":832,"children":834},{"id":833},"variables",[835],{"type":23,"value":836},"Variables",{"type":17,"tag":25,"props":838,"children":839},{},[840],{"type":23,"value":841},"Variables are used to store values in memory.",{"type":17,"tag":25,"props":843,"children":844},{},[845,847,851],{"type":23,"value":846},"You can declare variable specifying the ",{"type":17,"tag":31,"props":848,"children":849},{"href":430},[850],{"type":23,"value":376},{"type":23,"value":852}," and name of the variable:",{"type":17,"tag":205,"props":854,"children":856},{"className":207,"code":855,"language":120,"meta":7,"style":7},"// Create an integer variable called \"variable\"\nint variable\n",[857],{"type":17,"tag":197,"props":858,"children":859},{"__ignoreMap":7},[860,868],{"type":17,"tag":214,"props":861,"children":862},{"class":216,"line":217},[863],{"type":17,"tag":214,"props":864,"children":865},{"style":221},[866],{"type":23,"value":867},"// Create an integer variable called \"variable\"\n",{"type":17,"tag":214,"props":869,"children":870},{"class":216,"line":47},[871,875],{"type":17,"tag":214,"props":872,"children":873},{"style":502},[874],{"type":23,"value":329},{"type":17,"tag":214,"props":876,"children":877},{"style":513},[878],{"type":23,"value":658},{"type":17,"tag":25,"props":880,"children":881},{},[882,884,888],{"type":23,"value":883},"You can also assign a value to a variable when declaring it by using the ",{"type":17,"tag":197,"props":885,"children":886},{"className":7},[887],{"type":23,"value":688},{"type":23,"value":567},{"type":17,"tag":205,"props":890,"children":892},{"className":207,"code":891,"language":120,"meta":7,"style":7},"// Create an integer variable called \"variable\" and assign it the value 1\nint variable = 1\n",[893],{"type":17,"tag":197,"props":894,"children":895},{"__ignoreMap":7},[896,904],{"type":17,"tag":214,"props":897,"children":898},{"class":216,"line":217},[899],{"type":17,"tag":214,"props":900,"children":901},{"style":221},[902],{"type":23,"value":903},"// Create an integer variable called \"variable\" and assign it the value 1\n",{"type":17,"tag":214,"props":905,"children":906},{"class":216,"line":47},[907,911,916,920],{"type":17,"tag":214,"props":908,"children":909},{"style":502},[910],{"type":23,"value":329},{"type":17,"tag":214,"props":912,"children":913},{"style":513},[914],{"type":23,"value":915}," variable ",{"type":17,"tag":214,"props":917,"children":918},{"style":502},[919],{"type":23,"value":688},{"type":17,"tag":214,"props":921,"children":922},{"style":691},[923],{"type":23,"value":762},{"type":17,"tag":25,"props":925,"children":926},{},[927,929,934],{"type":23,"value":928},"It is also possible to let the compiler infer the type of the variable. This is done by using the ",{"type":17,"tag":197,"props":930,"children":931},{"className":7},[932],{"type":23,"value":933},"var",{"type":23,"value":935}," keyword.\nThe compiler will look at the value that is assigned to the variable, and infer the type from that:",{"type":17,"tag":205,"props":937,"children":939},{"className":207,"code":938,"language":120,"meta":7,"style":7},"// Create an integer variable called \"variable\" and assign it the value 1\nvar variable = 1\n",[940],{"type":17,"tag":197,"props":941,"children":942},{"__ignoreMap":7},[943,950],{"type":17,"tag":214,"props":944,"children":945},{"class":216,"line":217},[946],{"type":17,"tag":214,"props":947,"children":948},{"style":221},[949],{"type":23,"value":903},{"type":17,"tag":214,"props":951,"children":952},{"class":216,"line":47},[953,957,961,965],{"type":17,"tag":214,"props":954,"children":955},{"style":502},[956],{"type":23,"value":933},{"type":17,"tag":214,"props":958,"children":959},{"style":513},[960],{"type":23,"value":915},{"type":17,"tag":214,"props":962,"children":963},{"style":502},[964],{"type":23,"value":688},{"type":17,"tag":214,"props":966,"children":967},{"style":691},[968],{"type":23,"value":762},{"type":17,"tag":118,"props":970,"children":972},{"id":971},"semi-colons",[973],{"type":23,"value":974},"Semi-colons",{"type":17,"tag":25,"props":976,"children":977},{},[978],{"type":23,"value":979},"Semi-colons can be used to separate statements. They are optional, but are required if you want to put multiple statements on the same line.",{"type":17,"tag":25,"props":981,"children":982},{},[983],{"type":23,"value":984},"For example, this is valid:",{"type":17,"tag":205,"props":986,"children":988},{"className":207,"code":987,"language":120,"meta":7,"style":7},"int a = 1\n",[989],{"type":17,"tag":197,"props":990,"children":991},{"__ignoreMap":7},[992],{"type":17,"tag":214,"props":993,"children":994},{"class":216,"line":217},[995,999,1004,1008],{"type":17,"tag":214,"props":996,"children":997},{"style":502},[998],{"type":23,"value":329},{"type":17,"tag":214,"props":1000,"children":1001},{"style":513},[1002],{"type":23,"value":1003}," a ",{"type":17,"tag":214,"props":1005,"children":1006},{"style":502},[1007],{"type":23,"value":688},{"type":17,"tag":214,"props":1009,"children":1010},{"style":691},[1011],{"type":23,"value":762},{"type":17,"tag":25,"props":1013,"children":1014},{},[1015],{"type":23,"value":1016},"But this is not, since there are multiple statements on the same line:",{"type":17,"tag":205,"props":1018,"children":1020},{"className":207,"code":1019,"language":120,"meta":7,"style":7},"int a = 1 int b = 2\n",[1021],{"type":17,"tag":197,"props":1022,"children":1023},{"__ignoreMap":7},[1024],{"type":17,"tag":214,"props":1025,"children":1026},{"class":216,"line":217},[1027,1031,1035,1039,1044,1049,1054,1058],{"type":17,"tag":214,"props":1028,"children":1029},{"style":502},[1030],{"type":23,"value":329},{"type":17,"tag":214,"props":1032,"children":1033},{"style":513},[1034],{"type":23,"value":1003},{"type":17,"tag":214,"props":1036,"children":1037},{"style":502},[1038],{"type":23,"value":688},{"type":17,"tag":214,"props":1040,"children":1041},{"style":691},[1042],{"type":23,"value":1043}," 1",{"type":17,"tag":214,"props":1045,"children":1046},{"style":502},[1047],{"type":23,"value":1048}," int",{"type":17,"tag":214,"props":1050,"children":1051},{"style":513},[1052],{"type":23,"value":1053}," b ",{"type":17,"tag":214,"props":1055,"children":1056},{"style":502},[1057],{"type":23,"value":688},{"type":17,"tag":214,"props":1059,"children":1060},{"style":691},[1061],{"type":23,"value":1062}," 2\n",{"type":17,"tag":25,"props":1064,"children":1065},{},[1066],{"type":23,"value":1067},"If you want to put multiple statements on the same line, you can use semi-colons to separate them:",{"type":17,"tag":205,"props":1069,"children":1071},{"className":207,"code":1070,"language":120,"meta":7,"style":7},"int a = 1; int b = 2\n",[1072],{"type":17,"tag":197,"props":1073,"children":1074},{"__ignoreMap":7},[1075],{"type":17,"tag":214,"props":1076,"children":1077},{"class":216,"line":217},[1078,1082,1086,1090,1094,1099,1103,1107,1111],{"type":17,"tag":214,"props":1079,"children":1080},{"style":502},[1081],{"type":23,"value":329},{"type":17,"tag":214,"props":1083,"children":1084},{"style":513},[1085],{"type":23,"value":1003},{"type":17,"tag":214,"props":1087,"children":1088},{"style":502},[1089],{"type":23,"value":688},{"type":17,"tag":214,"props":1091,"children":1092},{"style":691},[1093],{"type":23,"value":1043},{"type":17,"tag":214,"props":1095,"children":1096},{"style":513},[1097],{"type":23,"value":1098},"; ",{"type":17,"tag":214,"props":1100,"children":1101},{"style":502},[1102],{"type":23,"value":329},{"type":17,"tag":214,"props":1104,"children":1105},{"style":513},[1106],{"type":23,"value":1053},{"type":17,"tag":214,"props":1108,"children":1109},{"style":502},[1110],{"type":23,"value":688},{"type":17,"tag":214,"props":1112,"children":1113},{"style":691},[1114],{"type":23,"value":1062},{"type":17,"tag":118,"props":1116,"children":1118},{"id":1117},"functions",[1119],{"type":23,"value":1120},"Functions",{"type":17,"tag":25,"props":1122,"children":1123},{},[1124],{"type":23,"value":1125},"Functions are used to reuse code. When you declare a function with code, you can call it from other places in your code.",{"type":17,"tag":25,"props":1127,"children":1128},{},[1129,1131,1135,1137,1142,1143,1148,1150,1154,1155,1159],{"type":23,"value":1130},"Functions are specified the return ",{"type":17,"tag":31,"props":1132,"children":1133},{"href":430},[1134],{"type":23,"value":376},{"type":23,"value":1136}," and name of the function, followed by the parameters of the function in parentheses (",{"type":17,"tag":197,"props":1138,"children":1139},{"className":7},[1140],{"type":23,"value":1141},"(",{"type":23,"value":452},{"type":17,"tag":197,"props":1144,"children":1145},{"className":7},[1146],{"type":23,"value":1147},")",{"type":23,"value":1149},"), and then a block of code surrounded by curly braces (",{"type":17,"tag":197,"props":1151,"children":1152},{"className":7},[1153],{"type":23,"value":450},{"type":23,"value":452},{"type":17,"tag":197,"props":1156,"children":1157},{"className":7},[1158],{"type":23,"value":457},{"type":23,"value":626},{"type":17,"tag":25,"props":1161,"children":1162},{},[1163,1165,1170],{"type":23,"value":1164},"To return a value from a function, use the ",{"type":17,"tag":197,"props":1166,"children":1167},{"className":7},[1168],{"type":23,"value":1169},"return",{"type":23,"value":1171}," keyword followed by the value to return.",{"type":17,"tag":25,"props":1173,"children":1174},{},[1175,1177,1182],{"type":23,"value":1176},"For example, the following code declares a function called ",{"type":17,"tag":197,"props":1178,"children":1179},{"className":7},[1180],{"type":23,"value":1181},"add",{"type":23,"value":1183}," that takes two integers as parameters and returns an integer:",{"type":17,"tag":205,"props":1185,"children":1187},{"className":207,"code":1186,"language":120,"meta":7,"style":7},"// Declare the add function\n// The function takes two integers (a and b) as parameters and returns an integer\nint add(int a, int b) {\n    return a + b\n}\n",[1188],{"type":17,"tag":197,"props":1189,"children":1190},{"__ignoreMap":7},[1191,1199,1207,1237,1259],{"type":17,"tag":214,"props":1192,"children":1193},{"class":216,"line":217},[1194],{"type":17,"tag":214,"props":1195,"children":1196},{"style":221},[1197],{"type":23,"value":1198},"// Declare the add function\n",{"type":17,"tag":214,"props":1200,"children":1201},{"class":216,"line":47},[1202],{"type":17,"tag":214,"props":1203,"children":1204},{"style":221},[1205],{"type":23,"value":1206},"// The function takes two integers (a and b) as parameters and returns an integer\n",{"type":17,"tag":214,"props":1208,"children":1209},{"class":216,"line":268},[1210,1214,1219,1223,1228,1232],{"type":17,"tag":214,"props":1211,"children":1212},{"style":502},[1213],{"type":23,"value":329},{"type":17,"tag":214,"props":1215,"children":1216},{"style":513},[1217],{"type":23,"value":1218}," add(",{"type":17,"tag":214,"props":1220,"children":1221},{"style":502},[1222],{"type":23,"value":329},{"type":17,"tag":214,"props":1224,"children":1225},{"style":513},[1226],{"type":23,"value":1227}," a, ",{"type":17,"tag":214,"props":1229,"children":1230},{"style":502},[1231],{"type":23,"value":329},{"type":17,"tag":214,"props":1233,"children":1234},{"style":513},[1235],{"type":23,"value":1236}," b) {\n",{"type":17,"tag":214,"props":1238,"children":1239},{"class":216,"line":544},[1240,1245,1249,1254],{"type":17,"tag":214,"props":1241,"children":1242},{"style":502},[1243],{"type":23,"value":1244},"    return",{"type":17,"tag":214,"props":1246,"children":1247},{"style":513},[1248],{"type":23,"value":1003},{"type":17,"tag":214,"props":1250,"children":1251},{"style":502},[1252],{"type":23,"value":1253},"+",{"type":17,"tag":214,"props":1255,"children":1256},{"style":513},[1257],{"type":23,"value":1258}," b\n",{"type":17,"tag":214,"props":1260,"children":1261},{"class":216,"line":677},[1262],{"type":17,"tag":214,"props":1263,"children":1264},{"style":513},[1265],{"type":23,"value":550},{"type":17,"tag":25,"props":1267,"children":1268},{},[1269,1271,1276,1278,1282],{"type":23,"value":1270},"Functions can also be declared without a return type by specifying ",{"type":17,"tag":197,"props":1272,"children":1273},{"className":7},[1274],{"type":23,"value":1275},"void",{"type":23,"value":1277}," as the return type. A function with a return type of ",{"type":17,"tag":197,"props":1279,"children":1280},{"className":7},[1281],{"type":23,"value":1275},{"type":23,"value":1283}," cannot return a value.",{"type":17,"tag":25,"props":1285,"children":1286},{},[1287,1288,1293],{"type":23,"value":1176},{"type":17,"tag":197,"props":1289,"children":1290},{"className":7},[1291],{"type":23,"value":1292},"print",{"type":23,"value":1294}," that takes a int array as a parameter and returns nothing:",{"type":17,"tag":205,"props":1296,"children":1298},{"className":207,"code":1297,"language":120,"meta":7,"style":7},"void print(int[] data) {\n    // Print the value to the screen\n}\n",[1299],{"type":17,"tag":197,"props":1300,"children":1301},{"__ignoreMap":7},[1302,1323,1331],{"type":17,"tag":214,"props":1303,"children":1304},{"class":216,"line":217},[1305,1309,1314,1318],{"type":17,"tag":214,"props":1306,"children":1307},{"style":507},[1308],{"type":23,"value":1275},{"type":17,"tag":214,"props":1310,"children":1311},{"style":513},[1312],{"type":23,"value":1313}," print(",{"type":17,"tag":214,"props":1315,"children":1316},{"style":502},[1317],{"type":23,"value":329},{"type":17,"tag":214,"props":1319,"children":1320},{"style":513},[1321],{"type":23,"value":1322},"[] data) {\n",{"type":17,"tag":214,"props":1324,"children":1325},{"class":216,"line":47},[1326],{"type":17,"tag":214,"props":1327,"children":1328},{"style":221},[1329],{"type":23,"value":1330},"    // Print the value to the screen\n",{"type":17,"tag":214,"props":1332,"children":1333},{"class":216,"line":268},[1334],{"type":17,"tag":214,"props":1335,"children":1336},{"style":513},[1337],{"type":23,"value":550},{"type":17,"tag":418,"props":1339,"children":1341},{"id":1340},"calling-functions",[1342],{"type":23,"value":1343},"Calling functions",{"type":17,"tag":25,"props":1345,"children":1346},{},[1347,1349,1353,1354,1358],{"type":23,"value":1348},"To call a function, use the name of the function followed by the arguments of the function in parentheses (",{"type":17,"tag":197,"props":1350,"children":1351},{"className":7},[1352],{"type":23,"value":1141},{"type":23,"value":452},{"type":17,"tag":197,"props":1355,"children":1356},{"className":7},[1357],{"type":23,"value":1147},{"type":23,"value":626},{"type":17,"tag":25,"props":1360,"children":1361},{},[1362,1364,1368],{"type":23,"value":1363},"For example, the following code calls the ",{"type":17,"tag":197,"props":1365,"children":1366},{"className":7},[1367],{"type":23,"value":1181},{"type":23,"value":1369}," function that we declared earlier:",{"type":17,"tag":205,"props":1371,"children":1373},{"className":207,"code":1372,"language":120,"meta":7,"style":7},"// Call the add function and store the result in the \"result\" variable\nint result = add(1, 2)\n",[1374],{"type":17,"tag":197,"props":1375,"children":1376},{"__ignoreMap":7},[1377,1385],{"type":17,"tag":214,"props":1378,"children":1379},{"class":216,"line":217},[1380],{"type":17,"tag":214,"props":1381,"children":1382},{"style":221},[1383],{"type":23,"value":1384},"// Call the add function and store the result in the \"result\" variable\n",{"type":17,"tag":214,"props":1386,"children":1387},{"class":216,"line":47},[1388,1392,1397,1401,1405,1410,1415,1420],{"type":17,"tag":214,"props":1389,"children":1390},{"style":502},[1391],{"type":23,"value":329},{"type":17,"tag":214,"props":1393,"children":1394},{"style":513},[1395],{"type":23,"value":1396}," result ",{"type":17,"tag":214,"props":1398,"children":1399},{"style":502},[1400],{"type":23,"value":688},{"type":17,"tag":214,"props":1402,"children":1403},{"style":513},[1404],{"type":23,"value":1218},{"type":17,"tag":214,"props":1406,"children":1407},{"style":691},[1408],{"type":23,"value":1409},"1",{"type":17,"tag":214,"props":1411,"children":1412},{"style":513},[1413],{"type":23,"value":1414},", ",{"type":17,"tag":214,"props":1416,"children":1417},{"style":691},[1418],{"type":23,"value":1419},"2",{"type":17,"tag":214,"props":1421,"children":1422},{"style":513},[1423],{"type":23,"value":1424},")\n",{"type":17,"tag":1426,"props":1427,"children":1428},"style",{},[1429],{"type":23,"value":1430},"html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":47,"depth":47,"links":1432},[1433,1434,1438,1439,1440,1441,1442],{"id":177,"depth":47,"text":180},{"id":277,"depth":47,"text":280,"children":1435},[1436,1437],{"id":420,"depth":268,"text":78},{"id":553,"depth":268,"text":556},{"id":594,"depth":47,"text":597},{"id":804,"depth":47,"text":807},{"id":833,"depth":47,"text":836},{"id":971,"depth":47,"text":974},{"id":1117,"depth":47,"text":1120,"children":1443},[1444],{"id":1340,"depth":268,"text":1343},"content:docs:2.get-started:3.basics-of-yabal.md","docs/2.get-started/3.basics-of-yabal.md",{"_path":68,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":67,"description":1448,"tags":1449,"navigation":1450,"body":1451,"_type":49,"_id":1650,"_source":51,"_file":1651,"_extension":53},"Learn how to run your Yabal programs.",[44],{"sidebar":65},{"type":14,"children":1452,"toc":1646},[1453,1458,1463,1469,1492,1504,1536,1548,1590,1603,1609,1614,1619,1642],{"type":17,"tag":18,"props":1454,"children":1456},{"id":1455},"emulator",[1457],{"type":23,"value":67},{"type":17,"tag":25,"props":1459,"children":1460},{},[1461],{"type":23,"value":1462},"To run your Yabal programs, you need to install the Astro-8 emulator. The Astro-8 emulator is a virtual machine that runs Astro-8 assembly code. Yabal compiles your code to Astro-8 assembly code, which is then run by the emulator.",{"type":17,"tag":118,"props":1464,"children":1466},{"id":1465},"native-emulator",[1467],{"type":23,"value":1468},"Native emulator",{"type":17,"tag":25,"props":1470,"children":1471},{},[1472,1474,1481,1483,1490],{"type":23,"value":1473},"It is recommended to install the ",{"type":17,"tag":31,"props":1475,"children":1478},{"href":1476,"rel":1477},"https://github.com/sam-astro/Astro8-Computer/releases",[35],[1479],{"type":23,"value":1480},"Astro-8 emulator",{"type":23,"value":1482}," by ",{"type":17,"tag":31,"props":1484,"children":1487},{"href":1485,"rel":1486},"https://github.com/sam-astro",[35],[1488],{"type":23,"value":1489},"sam-astro",{"type":23,"value":1491}," to run your programs, since the emulator contains all the latest features like audio and file system support.",{"type":17,"tag":25,"props":1493,"children":1494},{},[1495,1497,1502],{"type":23,"value":1496},"To start your script with the native Astro-8 emulator, add the ",{"type":17,"tag":197,"props":1498,"children":1499},{"className":7},[1500],{"type":23,"value":1501},"-n",{"type":23,"value":1503}," flag in the run command:",{"type":17,"tag":205,"props":1505,"children":1509},{"className":1506,"code":1507,"language":1508,"meta":7,"style":7},"language-bash shiki shiki-themes github-light github-dark","yabal run program.yabal -n\n","bash",[1510],{"type":17,"tag":197,"props":1511,"children":1512},{"__ignoreMap":7},[1513],{"type":17,"tag":214,"props":1514,"children":1515},{"class":216,"line":217},[1516,1520,1526,1531],{"type":17,"tag":214,"props":1517,"children":1518},{"style":507},[1519],{"type":23,"value":120},{"type":17,"tag":214,"props":1521,"children":1523},{"style":1522},"--shiki-default:#032F62;--shiki-dark:#9ECBFF",[1524],{"type":23,"value":1525}," run",{"type":17,"tag":214,"props":1527,"children":1528},{"style":1522},[1529],{"type":23,"value":1530}," program.yabal",{"type":17,"tag":214,"props":1532,"children":1533},{"style":691},[1534],{"type":23,"value":1535}," -n\n",{"type":17,"tag":25,"props":1537,"children":1538},{},[1539,1541,1546],{"type":23,"value":1540},"If you want to pass arguments to the native emulator, add ",{"type":17,"tag":197,"props":1542,"children":1543},{"className":7},[1544],{"type":23,"value":1545},"--",{"type":23,"value":1547}," and move the file name to the end of the command. After that, you can pass arguments to the emulator:",{"type":17,"tag":205,"props":1549,"children":1551},{"className":1506,"code":1550,"language":1508,"meta":7,"style":7},"yabal run -n -- program.yabal -f 1000\n",[1552],{"type":17,"tag":197,"props":1553,"children":1554},{"__ignoreMap":7},[1555],{"type":17,"tag":214,"props":1556,"children":1557},{"class":216,"line":217},[1558,1562,1566,1571,1576,1580,1585],{"type":17,"tag":214,"props":1559,"children":1560},{"style":507},[1561],{"type":23,"value":120},{"type":17,"tag":214,"props":1563,"children":1564},{"style":1522},[1565],{"type":23,"value":1525},{"type":17,"tag":214,"props":1567,"children":1568},{"style":691},[1569],{"type":23,"value":1570}," -n",{"type":17,"tag":214,"props":1572,"children":1573},{"style":691},[1574],{"type":23,"value":1575}," --",{"type":17,"tag":214,"props":1577,"children":1578},{"style":1522},[1579],{"type":23,"value":1530},{"type":17,"tag":214,"props":1581,"children":1582},{"style":691},[1583],{"type":23,"value":1584}," -f",{"type":17,"tag":214,"props":1586,"children":1587},{"style":691},[1588],{"type":23,"value":1589}," 1000\n",{"type":17,"tag":25,"props":1591,"children":1592},{},[1593,1595,1602],{"type":23,"value":1594},"For all the options of the native emulator, ",{"type":17,"tag":31,"props":1596,"children":1599},{"href":1597,"rel":1598},"https://sam-astro.github.io/Astro8-Computer/docs/Usage.html#emulator",[35],[1600],{"type":23,"value":1601},"see the documentation",{"type":23,"value":434},{"type":17,"tag":118,"props":1604,"children":1606},{"id":1605},"built-in-emulator",[1607],{"type":23,"value":1608},"Built-in emulator",{"type":17,"tag":25,"props":1610,"children":1611},{},[1612],{"type":23,"value":1613},"If you don't want to install the Astro-8 emulator, you can use the built-in emulator instead. However, the built-in emulator is not as feature-rich as the native emulator.",{"type":17,"tag":25,"props":1615,"children":1616},{},[1617],{"type":23,"value":1618},"To start your program with the built-in emulator, run the following command:",{"type":17,"tag":205,"props":1620,"children":1622},{"className":1506,"code":1621,"language":1508,"meta":7,"style":7},"yabal run program.yabal\n",[1623],{"type":17,"tag":197,"props":1624,"children":1625},{"__ignoreMap":7},[1626],{"type":17,"tag":214,"props":1627,"children":1628},{"class":216,"line":217},[1629,1633,1637],{"type":17,"tag":214,"props":1630,"children":1631},{"style":507},[1632],{"type":23,"value":120},{"type":17,"tag":214,"props":1634,"children":1635},{"style":1522},[1636],{"type":23,"value":1525},{"type":17,"tag":214,"props":1638,"children":1639},{"style":1522},[1640],{"type":23,"value":1641}," program.yabal\n",{"type":17,"tag":1426,"props":1643,"children":1644},{},[1645],{"type":23,"value":1430},{"title":7,"searchDepth":47,"depth":47,"links":1647},[1648,1649],{"id":1465,"depth":47,"text":1468},{"id":1605,"depth":47,"text":1608},"content:docs:2.get-started:2.emulator.md","docs/2.get-started/2.emulator.md",1698257243155]