[{"data":1,"prerenderedAt":1715},["Reactive",2],{"content-query-AcJ52JYVSR":3,"content-navigation-8C37fagqQL":54,"content-navigation-AUvUjo7VrF":92,"content-query-lyMJy2tOYZ":101,"content-query-NKK6OdiaiL":318,"content-query-4SxawDMX1W":374},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"navigation":12,"body":13,"_type":49,"_id":50,"_source":51,"_file":52,"_extension":53},"/docs/get-started","docs",false,"","Getting started","Get started with Yabal.",[11],"index",{"sidebar":6},{"type":14,"children":15,"toc":46},"root",[16,24,41],{"type":17,"tag":18,"props":19,"children":21},"element","h1",{"id":20},"getting-started",[22],{"type":23,"value":8},"text",{"type":17,"tag":25,"props":26,"children":27},"p",{},[28,30,39],{"type":23,"value":29},"Yabal is a programming language for ",{"type":17,"tag":31,"props":32,"children":36},"a",{"href":33,"rel":34},"https://github.com/sam-astro/Astro8-Computer",[35],"nofollow",[37],{"type":23,"value":38},"Astro-8",{"type":23,"value":40},", a custom 16-bit homebrew CPU. Yabal stands for \"Yet Another Basic Astro-8 Language\".\nIt is a simple language that is easy to learn and use, and compiles to Astro-8 assembly.",{"type":17,"tag":42,"props":43,"children":45},"related",{":tags":44},"get-started",[],{"title":7,"searchDepth":47,"depth":47,"links":48},2,[],"markdown","content:docs:2.get-started:index.md","content","docs/2.get-started/index.md","md",[55],{"title":56,"_path":57,"children":58,"root":65},"Documentation","/docs",[59,60,73,81],{"title":56,"_path":57},{"title":8,"_path":4,"children":61,"sidebar":6},[62,66,69,72],{"title":63,"_path":64,"sidebar":65},"Downloads","/docs/get-started/downloads",true,{"title":67,"_path":68,"sidebar":65},"Emulator","/docs/get-started/emulator",{"title":70,"_path":71,"sidebar":65},"Basics of Yabal","/docs/get-started/basics-of-yabal",{"title":8,"_path":4,"sidebar":6},{"title":74,"_path":75,"children":76,"sidebar":6},"Language reference","/docs/language-reference",[77,80],{"title":78,"_path":79,"sidebar":65},"Structs","/docs/language-reference/structs",{"title":74,"_path":75,"sidebar":6},{"title":82,"_path":83,"children":84,"sidebar":6},"Advanced topics","/docs/advanced-topics",[85,88,91],{"title":86,"_path":87,"sidebar":65},"Assembly mode","/docs/advanced-topics/assembly-mode",{"title":89,"_path":90,"sidebar":65},"Optimizing","/docs/advanced-topics/optimizing",{"title":82,"_path":83,"sidebar":6},[93],{"title":56,"_path":57,"children":94,"root":65},[95],{"title":96,"_path":4,"children":97},"Get Started",[98,99,100],{"title":63,"_path":64,"sidebar":65},{"title":67,"_path":68,"sidebar":65},{"title":70,"_path":71,"sidebar":65},{"_path":68,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":67,"description":102,"tags":103,"navigation":104,"body":105,"_type":49,"_id":316,"_source":51,"_file":317,"_extension":53},"Learn how to run your Yabal programs.",[44],{"sidebar":65},{"type":14,"children":106,"toc":312},[107,112,117,124,147,160,199,211,253,267,273,278,283,306],{"type":17,"tag":18,"props":108,"children":110},{"id":109},"emulator",[111],{"type":23,"value":67},{"type":17,"tag":25,"props":113,"children":114},{},[115],{"type":23,"value":116},"To run your Yabal programs, you need to install the Astro-8 emulator. The Astro-8 emulator is a virtual machine that runs Astro-8 assembly code. Yabal compiles your code to Astro-8 assembly code, which is then run by the emulator.",{"type":17,"tag":118,"props":119,"children":121},"h2",{"id":120},"native-emulator",[122],{"type":23,"value":123},"Native emulator",{"type":17,"tag":25,"props":125,"children":126},{},[127,129,136,138,145],{"type":23,"value":128},"It is recommended to install the ",{"type":17,"tag":31,"props":130,"children":133},{"href":131,"rel":132},"https://github.com/sam-astro/Astro8-Computer/releases",[35],[134],{"type":23,"value":135},"Astro-8 emulator",{"type":23,"value":137}," by ",{"type":17,"tag":31,"props":139,"children":142},{"href":140,"rel":141},"https://github.com/sam-astro",[35],[143],{"type":23,"value":144},"sam-astro",{"type":23,"value":146}," to run your programs, since the emulator contains all the latest features like audio and file system support.",{"type":17,"tag":25,"props":148,"children":149},{},[150,152,158],{"type":23,"value":151},"To start your script with the native Astro-8 emulator, add the ",{"type":17,"tag":153,"props":154,"children":155},"code",{"className":7},[156],{"type":23,"value":157},"-n",{"type":23,"value":159}," flag in the run command:",{"type":17,"tag":161,"props":162,"children":166},"pre",{"className":163,"code":164,"language":165,"meta":7,"style":7},"language-bash shiki shiki-themes github-light github-dark","yabal run program.yabal -n\n","bash",[167],{"type":17,"tag":153,"props":168,"children":169},{"__ignoreMap":7},[170],{"type":17,"tag":171,"props":172,"children":175},"span",{"class":173,"line":174},"line",1,[176,182,188,193],{"type":17,"tag":171,"props":177,"children":179},{"style":178},"--shiki-default:#6F42C1;--shiki-dark:#B392F0",[180],{"type":23,"value":181},"yabal",{"type":17,"tag":171,"props":183,"children":185},{"style":184},"--shiki-default:#032F62;--shiki-dark:#9ECBFF",[186],{"type":23,"value":187}," run",{"type":17,"tag":171,"props":189,"children":190},{"style":184},[191],{"type":23,"value":192}," program.yabal",{"type":17,"tag":171,"props":194,"children":196},{"style":195},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[197],{"type":23,"value":198}," -n\n",{"type":17,"tag":25,"props":200,"children":201},{},[202,204,209],{"type":23,"value":203},"If you want to pass arguments to the native emulator, add ",{"type":17,"tag":153,"props":205,"children":206},{"className":7},[207],{"type":23,"value":208},"--",{"type":23,"value":210}," and move the file name to the end of the command. After that, you can pass arguments to the emulator:",{"type":17,"tag":161,"props":212,"children":214},{"className":163,"code":213,"language":165,"meta":7,"style":7},"yabal run -n -- program.yabal -f 1000\n",[215],{"type":17,"tag":153,"props":216,"children":217},{"__ignoreMap":7},[218],{"type":17,"tag":171,"props":219,"children":220},{"class":173,"line":174},[221,225,229,234,239,243,248],{"type":17,"tag":171,"props":222,"children":223},{"style":178},[224],{"type":23,"value":181},{"type":17,"tag":171,"props":226,"children":227},{"style":184},[228],{"type":23,"value":187},{"type":17,"tag":171,"props":230,"children":231},{"style":195},[232],{"type":23,"value":233}," -n",{"type":17,"tag":171,"props":235,"children":236},{"style":195},[237],{"type":23,"value":238}," --",{"type":17,"tag":171,"props":240,"children":241},{"style":184},[242],{"type":23,"value":192},{"type":17,"tag":171,"props":244,"children":245},{"style":195},[246],{"type":23,"value":247}," -f",{"type":17,"tag":171,"props":249,"children":250},{"style":195},[251],{"type":23,"value":252}," 1000\n",{"type":17,"tag":25,"props":254,"children":255},{},[256,258,265],{"type":23,"value":257},"For all the options of the native emulator, ",{"type":17,"tag":31,"props":259,"children":262},{"href":260,"rel":261},"https://sam-astro.github.io/Astro8-Computer/docs/Usage.html#emulator",[35],[263],{"type":23,"value":264},"see the documentation",{"type":23,"value":266},".",{"type":17,"tag":118,"props":268,"children":270},{"id":269},"built-in-emulator",[271],{"type":23,"value":272},"Built-in emulator",{"type":17,"tag":25,"props":274,"children":275},{},[276],{"type":23,"value":277},"If you don't want to install the Astro-8 emulator, you can use the built-in emulator instead. However, the built-in emulator is not as feature-rich as the native emulator.",{"type":17,"tag":25,"props":279,"children":280},{},[281],{"type":23,"value":282},"To start your program with the built-in emulator, run the following command:",{"type":17,"tag":161,"props":284,"children":286},{"className":163,"code":285,"language":165,"meta":7,"style":7},"yabal run program.yabal\n",[287],{"type":17,"tag":153,"props":288,"children":289},{"__ignoreMap":7},[290],{"type":17,"tag":171,"props":291,"children":292},{"class":173,"line":174},[293,297,301],{"type":17,"tag":171,"props":294,"children":295},{"style":178},[296],{"type":23,"value":181},{"type":17,"tag":171,"props":298,"children":299},{"style":184},[300],{"type":23,"value":187},{"type":17,"tag":171,"props":302,"children":303},{"style":184},[304],{"type":23,"value":305}," program.yabal\n",{"type":17,"tag":307,"props":308,"children":309},"style",{},[310],{"type":23,"value":311},"html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":47,"depth":47,"links":313},[314,315],{"id":120,"depth":47,"text":123},{"id":269,"depth":47,"text":272},"content:docs:2.get-started:2.emulator.md","docs/2.get-started/2.emulator.md",{"_path":64,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":63,"description":319,"tags":320,"navigation":321,"body":322,"_type":49,"_id":372,"_source":51,"_file":373,"_extension":53},"Download the Yabal compiler and Astro-8 emulator.",[44],{"sidebar":65},{"type":14,"children":323,"toc":368},[324,329,334,339,344,349,353,359,364],{"type":17,"tag":18,"props":325,"children":327},{"id":326},"downloads",[328],{"type":23,"value":63},{"type":17,"tag":25,"props":330,"children":331},{},[332],{"type":23,"value":333},"On this page you can download the Yabal compiler and the Astro-8 emulator.",{"type":17,"tag":118,"props":335,"children":336},{"id":181},[337],{"type":23,"value":338},"Yabal",{"type":17,"tag":25,"props":340,"children":341},{},[342],{"type":23,"value":343},"Yabal contains the compiler and emulator.",{"type":17,"tag":345,"props":346,"children":348},"download",{":repo":347},"YabalLang/compiler",[],{"type":17,"tag":350,"props":351,"children":352},"hr",{},[],{"type":17,"tag":118,"props":354,"children":356},{"id":355},"astro-8-emulator",[357],{"type":23,"value":358},"Astro-8 Emulator",{"type":17,"tag":25,"props":360,"children":361},{},[362],{"type":23,"value":363},"Astro-8 emulator an emulator for Astro-8. In comparison to the Yabal emulator it supports more features like audio and file I/O.",{"type":17,"tag":345,"props":365,"children":367},{":repo":366},"sam-astro/Astro8-Computer",[],{"title":7,"searchDepth":47,"depth":47,"links":369},[370,371],{"id":181,"depth":47,"text":338},{"id":355,"depth":47,"text":358},"content:docs:2.get-started:1.downloads.md","docs/2.get-started/1.downloads.md",{"_path":71,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":70,"description":375,"tags":376,"navigation":377,"body":378,"_type":49,"_id":1713,"_source":51,"_file":1714,"_extension":53},"Learn about the basics of Yabal.",[44],{"sidebar":65},{"type":14,"children":379,"toc":1699},[380,385,390,396,401,406,418,434,453,485,491,496,501,627,633,644,675,699,759,765,776,800,806,811,835,840,1009,1015,1033,1038,1044,1049,1060,1086,1096,1131,1143,1176,1182,1187,1192,1219,1224,1270,1275,1322,1328,1333,1367,1379,1391,1473,1491,1502,1545,1551,1566,1577,1695],{"type":17,"tag":18,"props":381,"children":383},{"id":382},"basics-of-yabal",[384],{"type":23,"value":70},{"type":17,"tag":25,"props":386,"children":387},{},[388],{"type":23,"value":389},"This page will teach you the basics of Yabal.",{"type":17,"tag":118,"props":391,"children":393},{"id":392},"comments",[394],{"type":23,"value":395},"Comments",{"type":17,"tag":25,"props":397,"children":398},{},[399],{"type":23,"value":400},"Comments are used to add notes to your code. They are ignored by the compiler.",{"type":17,"tag":25,"props":402,"children":403},{},[404],{"type":23,"value":405},"There are two types of comments in Yabal: single-line comments and multi-line comments.",{"type":17,"tag":25,"props":407,"children":408},{},[409,411,416],{"type":23,"value":410},"Single-line comments start with ",{"type":17,"tag":153,"props":412,"children":413},{"className":7},[414],{"type":23,"value":415},"//",{"type":23,"value":417}," and end at the end of the line:",{"type":17,"tag":161,"props":419,"children":422},{"className":420,"code":421,"language":181,"meta":7,"style":7},"language-yabal shiki shiki-themes github-light github-dark","// This is a single-line comment\n",[423],{"type":17,"tag":153,"props":424,"children":425},{"__ignoreMap":7},[426],{"type":17,"tag":171,"props":427,"children":428},{"class":173,"line":174},[429],{"type":17,"tag":171,"props":430,"children":432},{"style":431},"--shiki-default:#6A737D;--shiki-dark:#6A737D",[433],{"type":23,"value":421},{"type":17,"tag":25,"props":435,"children":436},{},[437,439,444,446,451],{"type":23,"value":438},"Multi-line comments start with ",{"type":17,"tag":153,"props":440,"children":441},{"className":7},[442],{"type":23,"value":443},"/*",{"type":23,"value":445}," and end with ",{"type":17,"tag":153,"props":447,"children":448},{"className":7},[449],{"type":23,"value":450},"*/",{"type":23,"value":452},":",{"type":17,"tag":161,"props":454,"children":456},{"className":420,"code":455,"language":181,"meta":7,"style":7},"/*\nThis is a multi-line comment\n*/\n",[457],{"type":17,"tag":153,"props":458,"children":459},{"__ignoreMap":7},[460,468,476],{"type":17,"tag":171,"props":461,"children":462},{"class":173,"line":174},[463],{"type":17,"tag":171,"props":464,"children":465},{"style":431},[466],{"type":23,"value":467},"/*\n",{"type":17,"tag":171,"props":469,"children":470},{"class":173,"line":47},[471],{"type":17,"tag":171,"props":472,"children":473},{"style":431},[474],{"type":23,"value":475},"This is a multi-line comment\n",{"type":17,"tag":171,"props":477,"children":479},{"class":173,"line":478},3,[480],{"type":17,"tag":171,"props":481,"children":482},{"style":431},[483],{"type":23,"value":484},"*/\n",{"type":17,"tag":118,"props":486,"children":488},{"id":487},"types",[489],{"type":23,"value":490},"Types",{"type":17,"tag":25,"props":492,"children":493},{},[494],{"type":23,"value":495},"Yabal is a statically typed language. An statically typed language means that the type of a variable is known at compile time. This is in contrast to a dynamically typed language (like JavaScript), where the type of a variable is only known at runtime.",{"type":17,"tag":25,"props":497,"children":498},{},[499],{"type":23,"value":500},"Yabal has the following types:",{"type":17,"tag":502,"props":503,"children":504},"table",{},[505,524],{"type":17,"tag":506,"props":507,"children":508},"thead",{},[509],{"type":17,"tag":510,"props":511,"children":512},"tr",{},[513,519],{"type":17,"tag":514,"props":515,"children":516},"th",{},[517],{"type":23,"value":518},"Type",{"type":17,"tag":514,"props":520,"children":521},{},[522],{"type":23,"value":523},"Description",{"type":17,"tag":525,"props":526,"children":527},"tbody",{},[528,545,575,605],{"type":17,"tag":510,"props":529,"children":530},{},[531,540],{"type":17,"tag":532,"props":533,"children":534},"td",{},[535],{"type":17,"tag":153,"props":536,"children":537},{"className":7},[538],{"type":23,"value":539},"int",{"type":17,"tag":532,"props":541,"children":542},{},[543],{"type":23,"value":544},"A 16-bit unsigned integer",{"type":17,"tag":510,"props":546,"children":547},{},[548,556],{"type":17,"tag":532,"props":549,"children":550},{},[551],{"type":17,"tag":153,"props":552,"children":553},{"className":7},[554],{"type":23,"value":555},"bool",{"type":17,"tag":532,"props":557,"children":558},{},[559,561,566,568,573],{"type":23,"value":560},"A boolean value (",{"type":17,"tag":153,"props":562,"children":563},{"className":7},[564],{"type":23,"value":565},"true",{"type":23,"value":567}," or ",{"type":17,"tag":153,"props":569,"children":570},{"className":7},[571],{"type":23,"value":572},"false",{"type":23,"value":574},") stored as a 16-bit integer",{"type":17,"tag":510,"props":576,"children":577},{},[578,592],{"type":17,"tag":532,"props":579,"children":580},{},[581,587],{"type":17,"tag":582,"props":583,"children":584},"em",{},[585],{"type":23,"value":586},"type",{"type":17,"tag":153,"props":588,"children":589},{"className":7},[590],{"type":23,"value":591},"[]",{"type":17,"tag":532,"props":593,"children":594},{},[595,597,603],{"type":23,"value":596},"An ",{"type":17,"tag":31,"props":598,"children":600},{"href":599},"#arrays",[601],{"type":23,"value":602},"array",{"type":23,"value":604}," of values of the specified type",{"type":17,"tag":510,"props":606,"children":607},{},[608,616],{"type":17,"tag":532,"props":609,"children":610},{},[611],{"type":17,"tag":582,"props":612,"children":613},{},[614],{"type":23,"value":615},"UserDefined",{"type":17,"tag":532,"props":617,"children":618},{},[619,621],{"type":23,"value":620},"An user-defined ",{"type":17,"tag":31,"props":622,"children":624},{"href":623},"#structs",[625],{"type":23,"value":626},"struct",{"type":17,"tag":628,"props":629,"children":631},"h3",{"id":630},"structs",[632],{"type":23,"value":78},{"type":17,"tag":25,"props":634,"children":635},{},[636,638,643],{"type":23,"value":637},"A struct is a user-defined type. It contains a number of fields, which can be of any ",{"type":17,"tag":31,"props":639,"children":641},{"href":640},"#types",[642],{"type":23,"value":586},{"type":23,"value":266},{"type":17,"tag":25,"props":645,"children":646},{},[647,649,653,655,660,662,667,669,673],{"type":23,"value":648},"Structs are declared using the ",{"type":17,"tag":153,"props":650,"children":651},{"className":7},[652],{"type":23,"value":626},{"type":23,"value":654}," keyword, followed by the name of the struct, and then a block of code surrounded by curly braces (",{"type":17,"tag":153,"props":656,"children":657},{"className":7},[658],{"type":23,"value":659},"{",{"type":23,"value":661}," and ",{"type":17,"tag":153,"props":663,"children":664},{"className":7},[665],{"type":23,"value":666},"}",{"type":23,"value":668},").\nWithin the block of code, you can declare fields by specifying the ",{"type":17,"tag":31,"props":670,"children":671},{"href":640},[672],{"type":23,"value":586},{"type":23,"value":674}," and name of the field.",{"type":17,"tag":25,"props":676,"children":677},{},[678,680,685,687,692,693,698],{"type":23,"value":679},"For example, we declare a struct called ",{"type":17,"tag":153,"props":681,"children":682},{"className":7},[683],{"type":23,"value":684},"Position",{"type":23,"value":686}," with two fields, ",{"type":17,"tag":153,"props":688,"children":689},{"className":7},[690],{"type":23,"value":691},"x",{"type":23,"value":661},{"type":17,"tag":153,"props":694,"children":695},{"className":7},[696],{"type":23,"value":697},"y",{"type":23,"value":452},{"type":17,"tag":161,"props":700,"children":702},{"className":420,"code":701,"language":181,"meta":7,"style":7},"struct Position {\n    int x\n    int y\n}\n",[703],{"type":17,"tag":153,"props":704,"children":705},{"__ignoreMap":7},[706,725,738,750],{"type":17,"tag":171,"props":707,"children":708},{"class":173,"line":174},[709,714,719],{"type":17,"tag":171,"props":710,"children":712},{"style":711},"--shiki-default:#D73A49;--shiki-dark:#F97583",[713],{"type":23,"value":626},{"type":17,"tag":171,"props":715,"children":716},{"style":178},[717],{"type":23,"value":718}," Position",{"type":17,"tag":171,"props":720,"children":722},{"style":721},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[723],{"type":23,"value":724}," {\n",{"type":17,"tag":171,"props":726,"children":727},{"class":173,"line":47},[728,733],{"type":17,"tag":171,"props":729,"children":730},{"style":711},[731],{"type":23,"value":732},"    int",{"type":17,"tag":171,"props":734,"children":735},{"style":721},[736],{"type":23,"value":737}," x\n",{"type":17,"tag":171,"props":739,"children":740},{"class":173,"line":478},[741,745],{"type":17,"tag":171,"props":742,"children":743},{"style":711},[744],{"type":23,"value":732},{"type":17,"tag":171,"props":746,"children":747},{"style":721},[748],{"type":23,"value":749}," y\n",{"type":17,"tag":171,"props":751,"children":753},{"class":173,"line":752},4,[754],{"type":17,"tag":171,"props":755,"children":756},{"style":721},[757],{"type":23,"value":758},"}\n",{"type":17,"tag":628,"props":760,"children":762},{"id":761},"arrays",[763],{"type":23,"value":764},"Arrays",{"type":17,"tag":25,"props":766,"children":767},{},[768,770,774],{"type":23,"value":769},"An array is a collection of values of the same type. Arrays are declared using the ",{"type":17,"tag":153,"props":771,"children":772},{"className":7},[773],{"type":23,"value":591},{"type":23,"value":775}," operator:",{"type":17,"tag":161,"props":777,"children":779},{"className":420,"code":778,"language":181,"meta":7,"style":7},"int[] numbers // An array of integers\n",[780],{"type":17,"tag":153,"props":781,"children":782},{"__ignoreMap":7},[783],{"type":17,"tag":171,"props":784,"children":785},{"class":173,"line":174},[786,790,795],{"type":17,"tag":171,"props":787,"children":788},{"style":711},[789],{"type":23,"value":539},{"type":17,"tag":171,"props":791,"children":792},{"style":721},[793],{"type":23,"value":794},"[] numbers ",{"type":17,"tag":171,"props":796,"children":797},{"style":431},[798],{"type":23,"value":799},"// An array of integers\n",{"type":17,"tag":118,"props":801,"children":803},{"id":802},"statements",[804],{"type":23,"value":805},"Statements",{"type":17,"tag":25,"props":807,"children":808},{},[809],{"type":23,"value":810},"The actual code in a Yabal program is made up of statements. Common statements are variable declarations, declaring functions, calling functions and control flow statements.",{"type":17,"tag":25,"props":812,"children":813},{},[814,816,822,824,828,829,833],{"type":23,"value":815},"A statement can be a single line of code that ends with a new-line or ",{"type":17,"tag":31,"props":817,"children":819},{"href":818},"#semi-colons",[820],{"type":23,"value":821},"semi-colon",{"type":23,"value":823},". A statement can also be multiple lines of code surrounded by curly braces (",{"type":17,"tag":153,"props":825,"children":826},{"className":7},[827],{"type":23,"value":659},{"type":23,"value":661},{"type":17,"tag":153,"props":830,"children":831},{"className":7},[832],{"type":23,"value":666},{"type":23,"value":834},").",{"type":17,"tag":25,"props":836,"children":837},{},[838],{"type":23,"value":839},"The following code shows an example of a block of code:",{"type":17,"tag":161,"props":841,"children":843},{"className":420,"code":842,"language":181,"meta":7,"style":7},"// Variable declaration statement\nint variable\n\n// Assignment statement\nvariable = 0\n\n// If statement that contains multiple statements\nif (variable == 0) {\n    // Assignment statement\n    variable = 1\n\n    // Expression statement (postfix increment)\n    variable++\n}\n",[844],{"type":17,"tag":153,"props":845,"children":846},{"__ignoreMap":7},[847,855,867,875,883,902,910,919,943,952,970,978,987,1001],{"type":17,"tag":171,"props":848,"children":849},{"class":173,"line":174},[850],{"type":17,"tag":171,"props":851,"children":852},{"style":431},[853],{"type":23,"value":854},"// Variable declaration statement\n",{"type":17,"tag":171,"props":856,"children":857},{"class":173,"line":47},[858,862],{"type":17,"tag":171,"props":859,"children":860},{"style":711},[861],{"type":23,"value":539},{"type":17,"tag":171,"props":863,"children":864},{"style":721},[865],{"type":23,"value":866}," variable\n",{"type":17,"tag":171,"props":868,"children":869},{"class":173,"line":478},[870],{"type":17,"tag":171,"props":871,"children":872},{"emptyLinePlaceholder":65},[873],{"type":23,"value":874},"\n",{"type":17,"tag":171,"props":876,"children":877},{"class":173,"line":752},[878],{"type":17,"tag":171,"props":879,"children":880},{"style":431},[881],{"type":23,"value":882},"// Assignment statement\n",{"type":17,"tag":171,"props":884,"children":886},{"class":173,"line":885},5,[887,892,897],{"type":17,"tag":171,"props":888,"children":889},{"style":721},[890],{"type":23,"value":891},"variable ",{"type":17,"tag":171,"props":893,"children":894},{"style":711},[895],{"type":23,"value":896},"=",{"type":17,"tag":171,"props":898,"children":899},{"style":195},[900],{"type":23,"value":901}," 0\n",{"type":17,"tag":171,"props":903,"children":905},{"class":173,"line":904},6,[906],{"type":17,"tag":171,"props":907,"children":908},{"emptyLinePlaceholder":65},[909],{"type":23,"value":874},{"type":17,"tag":171,"props":911,"children":913},{"class":173,"line":912},7,[914],{"type":17,"tag":171,"props":915,"children":916},{"style":431},[917],{"type":23,"value":918},"// If statement that contains multiple statements\n",{"type":17,"tag":171,"props":920,"children":922},{"class":173,"line":921},8,[923,928,933,938],{"type":17,"tag":171,"props":924,"children":925},{"style":711},[926],{"type":23,"value":927},"if",{"type":17,"tag":171,"props":929,"children":930},{"style":721},[931],{"type":23,"value":932}," (variable == ",{"type":17,"tag":171,"props":934,"children":935},{"style":195},[936],{"type":23,"value":937},"0",{"type":17,"tag":171,"props":939,"children":940},{"style":721},[941],{"type":23,"value":942},") {\n",{"type":17,"tag":171,"props":944,"children":946},{"class":173,"line":945},9,[947],{"type":17,"tag":171,"props":948,"children":949},{"style":431},[950],{"type":23,"value":951},"    // Assignment statement\n",{"type":17,"tag":171,"props":953,"children":955},{"class":173,"line":954},10,[956,961,965],{"type":17,"tag":171,"props":957,"children":958},{"style":721},[959],{"type":23,"value":960},"    variable ",{"type":17,"tag":171,"props":962,"children":963},{"style":711},[964],{"type":23,"value":896},{"type":17,"tag":171,"props":966,"children":967},{"style":195},[968],{"type":23,"value":969}," 1\n",{"type":17,"tag":171,"props":971,"children":973},{"class":173,"line":972},11,[974],{"type":17,"tag":171,"props":975,"children":976},{"emptyLinePlaceholder":65},[977],{"type":23,"value":874},{"type":17,"tag":171,"props":979,"children":981},{"class":173,"line":980},12,[982],{"type":17,"tag":171,"props":983,"children":984},{"style":431},[985],{"type":23,"value":986},"    // Expression statement (postfix increment)\n",{"type":17,"tag":171,"props":988,"children":990},{"class":173,"line":989},13,[991,996],{"type":17,"tag":171,"props":992,"children":993},{"style":721},[994],{"type":23,"value":995},"    variable",{"type":17,"tag":171,"props":997,"children":998},{"style":711},[999],{"type":23,"value":1000},"++\n",{"type":17,"tag":171,"props":1002,"children":1004},{"class":173,"line":1003},14,[1005],{"type":17,"tag":171,"props":1006,"children":1007},{"style":721},[1008],{"type":23,"value":758},{"type":17,"tag":118,"props":1010,"children":1012},{"id":1011},"expressions",[1013],{"type":23,"value":1014},"Expressions",{"type":17,"tag":25,"props":1016,"children":1017},{},[1018,1020,1025,1027,1032],{"type":23,"value":1019},"An expression is a statement that evaluates to a value. For example, ",{"type":17,"tag":153,"props":1021,"children":1022},{"className":7},[1023],{"type":23,"value":1024},"1 + 2",{"type":23,"value":1026}," is an expression that evaluates to ",{"type":17,"tag":153,"props":1028,"children":1029},{"className":7},[1030],{"type":23,"value":1031},"3",{"type":23,"value":266},{"type":17,"tag":25,"props":1034,"children":1035},{},[1036],{"type":23,"value":1037},"Expressions can be used in many places, such as in assignment statements, function calls, and control flow statements.",{"type":17,"tag":118,"props":1039,"children":1041},{"id":1040},"variables",[1042],{"type":23,"value":1043},"Variables",{"type":17,"tag":25,"props":1045,"children":1046},{},[1047],{"type":23,"value":1048},"Variables are used to store values in memory.",{"type":17,"tag":25,"props":1050,"children":1051},{},[1052,1054,1058],{"type":23,"value":1053},"You can declare variable specifying the ",{"type":17,"tag":31,"props":1055,"children":1056},{"href":640},[1057],{"type":23,"value":586},{"type":23,"value":1059}," and name of the variable:",{"type":17,"tag":161,"props":1061,"children":1063},{"className":420,"code":1062,"language":181,"meta":7,"style":7},"// Create an integer variable called \"variable\"\nint variable\n",[1064],{"type":17,"tag":153,"props":1065,"children":1066},{"__ignoreMap":7},[1067,1075],{"type":17,"tag":171,"props":1068,"children":1069},{"class":173,"line":174},[1070],{"type":17,"tag":171,"props":1071,"children":1072},{"style":431},[1073],{"type":23,"value":1074},"// Create an integer variable called \"variable\"\n",{"type":17,"tag":171,"props":1076,"children":1077},{"class":173,"line":47},[1078,1082],{"type":17,"tag":171,"props":1079,"children":1080},{"style":711},[1081],{"type":23,"value":539},{"type":17,"tag":171,"props":1083,"children":1084},{"style":721},[1085],{"type":23,"value":866},{"type":17,"tag":25,"props":1087,"children":1088},{},[1089,1091,1095],{"type":23,"value":1090},"You can also assign a value to a variable when declaring it by using the ",{"type":17,"tag":153,"props":1092,"children":1093},{"className":7},[1094],{"type":23,"value":896},{"type":23,"value":775},{"type":17,"tag":161,"props":1097,"children":1099},{"className":420,"code":1098,"language":181,"meta":7,"style":7},"// Create an integer variable called \"variable\" and assign it the value 1\nint variable = 1\n",[1100],{"type":17,"tag":153,"props":1101,"children":1102},{"__ignoreMap":7},[1103,1111],{"type":17,"tag":171,"props":1104,"children":1105},{"class":173,"line":174},[1106],{"type":17,"tag":171,"props":1107,"children":1108},{"style":431},[1109],{"type":23,"value":1110},"// Create an integer variable called \"variable\" and assign it the value 1\n",{"type":17,"tag":171,"props":1112,"children":1113},{"class":173,"line":47},[1114,1118,1123,1127],{"type":17,"tag":171,"props":1115,"children":1116},{"style":711},[1117],{"type":23,"value":539},{"type":17,"tag":171,"props":1119,"children":1120},{"style":721},[1121],{"type":23,"value":1122}," variable ",{"type":17,"tag":171,"props":1124,"children":1125},{"style":711},[1126],{"type":23,"value":896},{"type":17,"tag":171,"props":1128,"children":1129},{"style":195},[1130],{"type":23,"value":969},{"type":17,"tag":25,"props":1132,"children":1133},{},[1134,1136,1141],{"type":23,"value":1135},"It is also possible to let the compiler infer the type of the variable. This is done by using the ",{"type":17,"tag":153,"props":1137,"children":1138},{"className":7},[1139],{"type":23,"value":1140},"var",{"type":23,"value":1142}," keyword.\nThe compiler will look at the value that is assigned to the variable, and infer the type from that:",{"type":17,"tag":161,"props":1144,"children":1146},{"className":420,"code":1145,"language":181,"meta":7,"style":7},"// Create an integer variable called \"variable\" and assign it the value 1\nvar variable = 1\n",[1147],{"type":17,"tag":153,"props":1148,"children":1149},{"__ignoreMap":7},[1150,1157],{"type":17,"tag":171,"props":1151,"children":1152},{"class":173,"line":174},[1153],{"type":17,"tag":171,"props":1154,"children":1155},{"style":431},[1156],{"type":23,"value":1110},{"type":17,"tag":171,"props":1158,"children":1159},{"class":173,"line":47},[1160,1164,1168,1172],{"type":17,"tag":171,"props":1161,"children":1162},{"style":711},[1163],{"type":23,"value":1140},{"type":17,"tag":171,"props":1165,"children":1166},{"style":721},[1167],{"type":23,"value":1122},{"type":17,"tag":171,"props":1169,"children":1170},{"style":711},[1171],{"type":23,"value":896},{"type":17,"tag":171,"props":1173,"children":1174},{"style":195},[1175],{"type":23,"value":969},{"type":17,"tag":118,"props":1177,"children":1179},{"id":1178},"semi-colons",[1180],{"type":23,"value":1181},"Semi-colons",{"type":17,"tag":25,"props":1183,"children":1184},{},[1185],{"type":23,"value":1186},"Semi-colons can be used to separate statements. They are optional, but are required if you want to put multiple statements on the same line.",{"type":17,"tag":25,"props":1188,"children":1189},{},[1190],{"type":23,"value":1191},"For example, this is valid:",{"type":17,"tag":161,"props":1193,"children":1195},{"className":420,"code":1194,"language":181,"meta":7,"style":7},"int a = 1\n",[1196],{"type":17,"tag":153,"props":1197,"children":1198},{"__ignoreMap":7},[1199],{"type":17,"tag":171,"props":1200,"children":1201},{"class":173,"line":174},[1202,1206,1211,1215],{"type":17,"tag":171,"props":1203,"children":1204},{"style":711},[1205],{"type":23,"value":539},{"type":17,"tag":171,"props":1207,"children":1208},{"style":721},[1209],{"type":23,"value":1210}," a ",{"type":17,"tag":171,"props":1212,"children":1213},{"style":711},[1214],{"type":23,"value":896},{"type":17,"tag":171,"props":1216,"children":1217},{"style":195},[1218],{"type":23,"value":969},{"type":17,"tag":25,"props":1220,"children":1221},{},[1222],{"type":23,"value":1223},"But this is not, since there are multiple statements on the same line:",{"type":17,"tag":161,"props":1225,"children":1227},{"className":420,"code":1226,"language":181,"meta":7,"style":7},"int a = 1 int b = 2\n",[1228],{"type":17,"tag":153,"props":1229,"children":1230},{"__ignoreMap":7},[1231],{"type":17,"tag":171,"props":1232,"children":1233},{"class":173,"line":174},[1234,1238,1242,1246,1251,1256,1261,1265],{"type":17,"tag":171,"props":1235,"children":1236},{"style":711},[1237],{"type":23,"value":539},{"type":17,"tag":171,"props":1239,"children":1240},{"style":721},[1241],{"type":23,"value":1210},{"type":17,"tag":171,"props":1243,"children":1244},{"style":711},[1245],{"type":23,"value":896},{"type":17,"tag":171,"props":1247,"children":1248},{"style":195},[1249],{"type":23,"value":1250}," 1",{"type":17,"tag":171,"props":1252,"children":1253},{"style":711},[1254],{"type":23,"value":1255}," int",{"type":17,"tag":171,"props":1257,"children":1258},{"style":721},[1259],{"type":23,"value":1260}," b ",{"type":17,"tag":171,"props":1262,"children":1263},{"style":711},[1264],{"type":23,"value":896},{"type":17,"tag":171,"props":1266,"children":1267},{"style":195},[1268],{"type":23,"value":1269}," 2\n",{"type":17,"tag":25,"props":1271,"children":1272},{},[1273],{"type":23,"value":1274},"If you want to put multiple statements on the same line, you can use semi-colons to separate them:",{"type":17,"tag":161,"props":1276,"children":1278},{"className":420,"code":1277,"language":181,"meta":7,"style":7},"int a = 1; int b = 2\n",[1279],{"type":17,"tag":153,"props":1280,"children":1281},{"__ignoreMap":7},[1282],{"type":17,"tag":171,"props":1283,"children":1284},{"class":173,"line":174},[1285,1289,1293,1297,1301,1306,1310,1314,1318],{"type":17,"tag":171,"props":1286,"children":1287},{"style":711},[1288],{"type":23,"value":539},{"type":17,"tag":171,"props":1290,"children":1291},{"style":721},[1292],{"type":23,"value":1210},{"type":17,"tag":171,"props":1294,"children":1295},{"style":711},[1296],{"type":23,"value":896},{"type":17,"tag":171,"props":1298,"children":1299},{"style":195},[1300],{"type":23,"value":1250},{"type":17,"tag":171,"props":1302,"children":1303},{"style":721},[1304],{"type":23,"value":1305},"; ",{"type":17,"tag":171,"props":1307,"children":1308},{"style":711},[1309],{"type":23,"value":539},{"type":17,"tag":171,"props":1311,"children":1312},{"style":721},[1313],{"type":23,"value":1260},{"type":17,"tag":171,"props":1315,"children":1316},{"style":711},[1317],{"type":23,"value":896},{"type":17,"tag":171,"props":1319,"children":1320},{"style":195},[1321],{"type":23,"value":1269},{"type":17,"tag":118,"props":1323,"children":1325},{"id":1324},"functions",[1326],{"type":23,"value":1327},"Functions",{"type":17,"tag":25,"props":1329,"children":1330},{},[1331],{"type":23,"value":1332},"Functions are used to reuse code. When you declare a function with code, you can call it from other places in your code.",{"type":17,"tag":25,"props":1334,"children":1335},{},[1336,1338,1342,1344,1349,1350,1355,1357,1361,1362,1366],{"type":23,"value":1337},"Functions are specified the return ",{"type":17,"tag":31,"props":1339,"children":1340},{"href":640},[1341],{"type":23,"value":586},{"type":23,"value":1343}," and name of the function, followed by the parameters of the function in parentheses (",{"type":17,"tag":153,"props":1345,"children":1346},{"className":7},[1347],{"type":23,"value":1348},"(",{"type":23,"value":661},{"type":17,"tag":153,"props":1351,"children":1352},{"className":7},[1353],{"type":23,"value":1354},")",{"type":23,"value":1356},"), and then a block of code surrounded by curly braces (",{"type":17,"tag":153,"props":1358,"children":1359},{"className":7},[1360],{"type":23,"value":659},{"type":23,"value":661},{"type":17,"tag":153,"props":1363,"children":1364},{"className":7},[1365],{"type":23,"value":666},{"type":23,"value":834},{"type":17,"tag":25,"props":1368,"children":1369},{},[1370,1372,1377],{"type":23,"value":1371},"To return a value from a function, use the ",{"type":17,"tag":153,"props":1373,"children":1374},{"className":7},[1375],{"type":23,"value":1376},"return",{"type":23,"value":1378}," keyword followed by the value to return.",{"type":17,"tag":25,"props":1380,"children":1381},{},[1382,1384,1389],{"type":23,"value":1383},"For example, the following code declares a function called ",{"type":17,"tag":153,"props":1385,"children":1386},{"className":7},[1387],{"type":23,"value":1388},"add",{"type":23,"value":1390}," that takes two integers as parameters and returns an integer:",{"type":17,"tag":161,"props":1392,"children":1394},{"className":420,"code":1393,"language":181,"meta":7,"style":7},"// Declare the add function\n// The function takes two integers (a and b) as parameters and returns an integer\nint add(int a, int b) {\n    return a + b\n}\n",[1395],{"type":17,"tag":153,"props":1396,"children":1397},{"__ignoreMap":7},[1398,1406,1414,1444,1466],{"type":17,"tag":171,"props":1399,"children":1400},{"class":173,"line":174},[1401],{"type":17,"tag":171,"props":1402,"children":1403},{"style":431},[1404],{"type":23,"value":1405},"// Declare the add function\n",{"type":17,"tag":171,"props":1407,"children":1408},{"class":173,"line":47},[1409],{"type":17,"tag":171,"props":1410,"children":1411},{"style":431},[1412],{"type":23,"value":1413},"// The function takes two integers (a and b) as parameters and returns an integer\n",{"type":17,"tag":171,"props":1415,"children":1416},{"class":173,"line":478},[1417,1421,1426,1430,1435,1439],{"type":17,"tag":171,"props":1418,"children":1419},{"style":711},[1420],{"type":23,"value":539},{"type":17,"tag":171,"props":1422,"children":1423},{"style":721},[1424],{"type":23,"value":1425}," add(",{"type":17,"tag":171,"props":1427,"children":1428},{"style":711},[1429],{"type":23,"value":539},{"type":17,"tag":171,"props":1431,"children":1432},{"style":721},[1433],{"type":23,"value":1434}," a, ",{"type":17,"tag":171,"props":1436,"children":1437},{"style":711},[1438],{"type":23,"value":539},{"type":17,"tag":171,"props":1440,"children":1441},{"style":721},[1442],{"type":23,"value":1443}," b) {\n",{"type":17,"tag":171,"props":1445,"children":1446},{"class":173,"line":752},[1447,1452,1456,1461],{"type":17,"tag":171,"props":1448,"children":1449},{"style":711},[1450],{"type":23,"value":1451},"    return",{"type":17,"tag":171,"props":1453,"children":1454},{"style":721},[1455],{"type":23,"value":1210},{"type":17,"tag":171,"props":1457,"children":1458},{"style":711},[1459],{"type":23,"value":1460},"+",{"type":17,"tag":171,"props":1462,"children":1463},{"style":721},[1464],{"type":23,"value":1465}," b\n",{"type":17,"tag":171,"props":1467,"children":1468},{"class":173,"line":885},[1469],{"type":17,"tag":171,"props":1470,"children":1471},{"style":721},[1472],{"type":23,"value":758},{"type":17,"tag":25,"props":1474,"children":1475},{},[1476,1478,1483,1485,1489],{"type":23,"value":1477},"Functions can also be declared without a return type by specifying ",{"type":17,"tag":153,"props":1479,"children":1480},{"className":7},[1481],{"type":23,"value":1482},"void",{"type":23,"value":1484}," as the return type. A function with a return type of ",{"type":17,"tag":153,"props":1486,"children":1487},{"className":7},[1488],{"type":23,"value":1482},{"type":23,"value":1490}," cannot return a value.",{"type":17,"tag":25,"props":1492,"children":1493},{},[1494,1495,1500],{"type":23,"value":1383},{"type":17,"tag":153,"props":1496,"children":1497},{"className":7},[1498],{"type":23,"value":1499},"print",{"type":23,"value":1501}," that takes a int array as a parameter and returns nothing:",{"type":17,"tag":161,"props":1503,"children":1505},{"className":420,"code":1504,"language":181,"meta":7,"style":7},"void print(int[] data) {\n    // Print the value to the screen\n}\n",[1506],{"type":17,"tag":153,"props":1507,"children":1508},{"__ignoreMap":7},[1509,1530,1538],{"type":17,"tag":171,"props":1510,"children":1511},{"class":173,"line":174},[1512,1516,1521,1525],{"type":17,"tag":171,"props":1513,"children":1514},{"style":178},[1515],{"type":23,"value":1482},{"type":17,"tag":171,"props":1517,"children":1518},{"style":721},[1519],{"type":23,"value":1520}," print(",{"type":17,"tag":171,"props":1522,"children":1523},{"style":711},[1524],{"type":23,"value":539},{"type":17,"tag":171,"props":1526,"children":1527},{"style":721},[1528],{"type":23,"value":1529},"[] data) {\n",{"type":17,"tag":171,"props":1531,"children":1532},{"class":173,"line":47},[1533],{"type":17,"tag":171,"props":1534,"children":1535},{"style":431},[1536],{"type":23,"value":1537},"    // Print the value to the screen\n",{"type":17,"tag":171,"props":1539,"children":1540},{"class":173,"line":478},[1541],{"type":17,"tag":171,"props":1542,"children":1543},{"style":721},[1544],{"type":23,"value":758},{"type":17,"tag":628,"props":1546,"children":1548},{"id":1547},"calling-functions",[1549],{"type":23,"value":1550},"Calling functions",{"type":17,"tag":25,"props":1552,"children":1553},{},[1554,1556,1560,1561,1565],{"type":23,"value":1555},"To call a function, use the name of the function followed by the arguments of the function in parentheses (",{"type":17,"tag":153,"props":1557,"children":1558},{"className":7},[1559],{"type":23,"value":1348},{"type":23,"value":661},{"type":17,"tag":153,"props":1562,"children":1563},{"className":7},[1564],{"type":23,"value":1354},{"type":23,"value":834},{"type":17,"tag":25,"props":1567,"children":1568},{},[1569,1571,1575],{"type":23,"value":1570},"For example, the following code calls the ",{"type":17,"tag":153,"props":1572,"children":1573},{"className":7},[1574],{"type":23,"value":1388},{"type":23,"value":1576}," function that we declared earlier:",{"type":17,"tag":161,"props":1578,"children":1582},{"className":420,"code":1579,"filename":1580,"highlights":1581,"language":181,"meta":7,"style":7},"// Call the add function and store the result in the \"result\" variable\nint result = add(1, 2)\n\nint add(int a, int b) {\n    return a + b\n}\n","run",[47],[1583],{"type":17,"tag":153,"props":1584,"children":1585},{"__ignoreMap":7},[1586,1594,1635,1642,1669,1688],{"type":17,"tag":171,"props":1587,"children":1588},{"class":173,"line":174},[1589],{"type":17,"tag":171,"props":1590,"children":1591},{"style":431},[1592],{"type":23,"value":1593},"// Call the add function and store the result in the \"result\" variable\n",{"type":17,"tag":171,"props":1595,"children":1597},{"class":1596,"line":47},"line highlight",[1598,1602,1607,1611,1615,1620,1625,1630],{"type":17,"tag":171,"props":1599,"children":1600},{"style":711},[1601],{"type":23,"value":539},{"type":17,"tag":171,"props":1603,"children":1604},{"style":721},[1605],{"type":23,"value":1606}," result ",{"type":17,"tag":171,"props":1608,"children":1609},{"style":711},[1610],{"type":23,"value":896},{"type":17,"tag":171,"props":1612,"children":1613},{"style":721},[1614],{"type":23,"value":1425},{"type":17,"tag":171,"props":1616,"children":1617},{"style":195},[1618],{"type":23,"value":1619},"1",{"type":17,"tag":171,"props":1621,"children":1622},{"style":721},[1623],{"type":23,"value":1624},", ",{"type":17,"tag":171,"props":1626,"children":1627},{"style":195},[1628],{"type":23,"value":1629},"2",{"type":17,"tag":171,"props":1631,"children":1632},{"style":721},[1633],{"type":23,"value":1634},")\n",{"type":17,"tag":171,"props":1636,"children":1637},{"class":173,"line":478},[1638],{"type":17,"tag":171,"props":1639,"children":1640},{"emptyLinePlaceholder":65},[1641],{"type":23,"value":874},{"type":17,"tag":171,"props":1643,"children":1644},{"class":173,"line":752},[1645,1649,1653,1657,1661,1665],{"type":17,"tag":171,"props":1646,"children":1647},{"style":711},[1648],{"type":23,"value":539},{"type":17,"tag":171,"props":1650,"children":1651},{"style":721},[1652],{"type":23,"value":1425},{"type":17,"tag":171,"props":1654,"children":1655},{"style":711},[1656],{"type":23,"value":539},{"type":17,"tag":171,"props":1658,"children":1659},{"style":721},[1660],{"type":23,"value":1434},{"type":17,"tag":171,"props":1662,"children":1663},{"style":711},[1664],{"type":23,"value":539},{"type":17,"tag":171,"props":1666,"children":1667},{"style":721},[1668],{"type":23,"value":1443},{"type":17,"tag":171,"props":1670,"children":1671},{"class":173,"line":885},[1672,1676,1680,1684],{"type":17,"tag":171,"props":1673,"children":1674},{"style":711},[1675],{"type":23,"value":1451},{"type":17,"tag":171,"props":1677,"children":1678},{"style":721},[1679],{"type":23,"value":1210},{"type":17,"tag":171,"props":1681,"children":1682},{"style":711},[1683],{"type":23,"value":1460},{"type":17,"tag":171,"props":1685,"children":1686},{"style":721},[1687],{"type":23,"value":1465},{"type":17,"tag":171,"props":1689,"children":1690},{"class":173,"line":904},[1691],{"type":17,"tag":171,"props":1692,"children":1693},{"style":721},[1694],{"type":23,"value":758},{"type":17,"tag":307,"props":1696,"children":1697},{},[1698],{"type":23,"value":311},{"title":7,"searchDepth":47,"depth":47,"links":1700},[1701,1702,1706,1707,1708,1709,1710],{"id":392,"depth":47,"text":395},{"id":487,"depth":47,"text":490,"children":1703},[1704,1705],{"id":630,"depth":478,"text":78},{"id":761,"depth":478,"text":764},{"id":802,"depth":47,"text":805},{"id":1011,"depth":47,"text":1014},{"id":1040,"depth":47,"text":1043},{"id":1178,"depth":47,"text":1181},{"id":1324,"depth":47,"text":1327,"children":1711},[1712],{"id":1547,"depth":478,"text":1550},"content:docs:2.get-started:3.basics-of-yabal.md","docs/2.get-started/3.basics-of-yabal.md",1698330391290]