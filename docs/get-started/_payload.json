[{"data":1,"prerenderedAt":1755},["Reactive",2],{"content-query-AcJ52JYVSR":3,"content-navigation-8C37fagqQL":54,"content-navigation-AUvUjo7VrF":106,"content-query-NKK6OdiaiL":115,"content-query-lyMJy2tOYZ":173,"content-query-4SxawDMX1W":388},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"navigation":12,"body":13,"_type":49,"_id":50,"_source":51,"_file":52,"_extension":53},"/docs/get-started","docs",false,"","Getting started","Get started with Yabal.",[11],"index",{"sidebar":6},{"type":14,"children":15,"toc":46},"root",[16,24,41],{"type":17,"tag":18,"props":19,"children":21},"element","h1",{"id":20},"getting-started",[22],{"type":23,"value":8},"text",{"type":17,"tag":25,"props":26,"children":27},"p",{},[28,30,39],{"type":23,"value":29},"Yabal is a programming language for ",{"type":17,"tag":31,"props":32,"children":36},"a",{"href":33,"rel":34},"https://github.com/sam-astro/Astro8-Computer",[35],"nofollow",[37],{"type":23,"value":38},"Astro-8",{"type":23,"value":40},", a custom 16-bit homebrew CPU. Yabal stands for \"Yet Another Basic Astro-8 Language\".\nIt is a simple language that is easy to learn and use, and compiles to Astro-8 assembly.",{"type":17,"tag":42,"props":43,"children":45},"related",{":tags":44},"get-started",[],{"title":7,"searchDepth":47,"depth":47,"links":48},2,[],"markdown","content:docs:2.get-started:index.md","content","docs/2.get-started/index.md","md",[55],{"title":56,"_path":57,"children":58,"root":65},"Documentation","/docs",[59,60,73,87,95],{"title":56,"_path":57},{"title":8,"_path":4,"children":61,"sidebar":6},[62,66,69,72],{"title":63,"_path":64,"sidebar":65},"Downloads","/docs/get-started/downloads",true,{"title":67,"_path":68,"sidebar":65},"Emulator","/docs/get-started/emulator",{"title":70,"_path":71,"sidebar":65},"Basics of Yabal","/docs/get-started/basics-of-yabal",{"title":8,"_path":4,"sidebar":6},{"title":74,"_path":75,"children":76,"sidebar":6},"Language reference","/docs/language-reference",[77,80,83,86],{"title":78,"_path":79,"sidebar":65},"Structs","/docs/language-reference/structs",{"title":81,"_path":82,"sidebar":65},"Function pointers","/docs/language-reference/function-pointer",{"title":84,"_path":85,"sidebar":65},"Stack allocations","/docs/language-reference/stack-allocations",{"title":74,"_path":75,"sidebar":6},{"title":88,"_path":89,"children":90,"sidebar":6},"Perhipherals","/docs/peripherals",[91,94],{"title":92,"_path":93,"sidebar":65},"Screen","/docs/peripherals/screen",{"title":88,"_path":89,"sidebar":6},{"title":96,"_path":97,"children":98,"sidebar":6},"Advanced topics","/docs/advanced-topics",[99,102,105],{"title":100,"_path":101,"sidebar":65},"Assembly mode","/docs/advanced-topics/assembly-mode",{"title":103,"_path":104,"sidebar":65},"Optimizing","/docs/advanced-topics/optimizing",{"title":96,"_path":97,"sidebar":6},[107],{"title":56,"_path":57,"children":108,"root":65},[109],{"title":110,"_path":4,"children":111},"Get Started",[112,113,114],{"title":63,"_path":64,"sidebar":65},{"title":67,"_path":68,"sidebar":65},{"title":70,"_path":71,"sidebar":65},{"_path":64,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":63,"description":116,"tags":117,"navigation":118,"body":119,"_type":49,"_id":171,"_source":51,"_file":172,"_extension":53},"Download the Yabal compiler and Astro-8 emulator.",[44],{"sidebar":65},{"type":14,"children":120,"toc":167},[121,126,131,138,143,148,152,158,163],{"type":17,"tag":18,"props":122,"children":124},{"id":123},"downloads",[125],{"type":23,"value":63},{"type":17,"tag":25,"props":127,"children":128},{},[129],{"type":23,"value":130},"On this page you can download the Yabal compiler and the Astro-8 emulator.",{"type":17,"tag":132,"props":133,"children":135},"h2",{"id":134},"yabal",[136],{"type":23,"value":137},"Yabal",{"type":17,"tag":25,"props":139,"children":140},{},[141],{"type":23,"value":142},"Yabal contains the compiler and emulator.",{"type":17,"tag":144,"props":145,"children":147},"download",{":repo":146},"YabalLang/compiler",[],{"type":17,"tag":149,"props":150,"children":151},"hr",{},[],{"type":17,"tag":132,"props":153,"children":155},{"id":154},"astro-8-emulator",[156],{"type":23,"value":157},"Astro-8 Emulator",{"type":17,"tag":25,"props":159,"children":160},{},[161],{"type":23,"value":162},"Astro-8 emulator an emulator for Astro-8. In comparison to the Yabal emulator it supports more features like audio and file I/O.",{"type":17,"tag":144,"props":164,"children":166},{":repo":165},"sam-astro/Astro8-Computer",[],{"title":7,"searchDepth":47,"depth":47,"links":168},[169,170],{"id":134,"depth":47,"text":137},{"id":154,"depth":47,"text":157},"content:docs:2.get-started:1.downloads.md","docs/2.get-started/1.downloads.md",{"_path":68,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":67,"description":174,"tags":175,"navigation":176,"body":177,"_type":49,"_id":386,"_source":51,"_file":387,"_extension":53},"Learn how to run your Yabal programs.",[44],{"sidebar":65},{"type":14,"children":178,"toc":382},[179,184,189,195,218,231,269,281,323,337,343,348,353,376],{"type":17,"tag":18,"props":180,"children":182},{"id":181},"emulator",[183],{"type":23,"value":67},{"type":17,"tag":25,"props":185,"children":186},{},[187],{"type":23,"value":188},"To run your Yabal programs, you need to install the Astro-8 emulator. The Astro-8 emulator is a virtual machine that runs Astro-8 assembly code. Yabal compiles your code to Astro-8 assembly code, which is then run by the emulator.",{"type":17,"tag":132,"props":190,"children":192},{"id":191},"native-emulator",[193],{"type":23,"value":194},"Native emulator",{"type":17,"tag":25,"props":196,"children":197},{},[198,200,207,209,216],{"type":23,"value":199},"It is recommended to install the ",{"type":17,"tag":31,"props":201,"children":204},{"href":202,"rel":203},"https://github.com/sam-astro/Astro8-Computer/releases",[35],[205],{"type":23,"value":206},"Astro-8 emulator",{"type":23,"value":208}," by ",{"type":17,"tag":31,"props":210,"children":213},{"href":211,"rel":212},"https://github.com/sam-astro",[35],[214],{"type":23,"value":215},"sam-astro",{"type":23,"value":217}," to run your programs, since the emulator contains all the latest features like audio and file system support.",{"type":17,"tag":25,"props":219,"children":220},{},[221,223,229],{"type":23,"value":222},"To start your script with the native Astro-8 emulator, add the ",{"type":17,"tag":224,"props":225,"children":226},"code",{"className":7},[227],{"type":23,"value":228},"-n",{"type":23,"value":230}," flag in the run command:",{"type":17,"tag":232,"props":233,"children":237},"pre",{"className":234,"code":235,"language":236,"meta":7,"style":7},"language-bash shiki shiki-themes github-light github-dark","yabal run program.yabal -n\n","bash",[238],{"type":17,"tag":224,"props":239,"children":240},{"__ignoreMap":7},[241],{"type":17,"tag":242,"props":243,"children":246},"span",{"class":244,"line":245},"line",1,[247,252,258,263],{"type":17,"tag":242,"props":248,"children":250},{"style":249},"--shiki-default:#6F42C1;--shiki-dark:#B392F0",[251],{"type":23,"value":134},{"type":17,"tag":242,"props":253,"children":255},{"style":254},"--shiki-default:#032F62;--shiki-dark:#9ECBFF",[256],{"type":23,"value":257}," run",{"type":17,"tag":242,"props":259,"children":260},{"style":254},[261],{"type":23,"value":262}," program.yabal",{"type":17,"tag":242,"props":264,"children":266},{"style":265},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[267],{"type":23,"value":268}," -n\n",{"type":17,"tag":25,"props":270,"children":271},{},[272,274,279],{"type":23,"value":273},"If you want to pass arguments to the native emulator, add ",{"type":17,"tag":224,"props":275,"children":276},{"className":7},[277],{"type":23,"value":278},"--",{"type":23,"value":280}," and move the file name to the end of the command. After that, you can pass arguments to the emulator:",{"type":17,"tag":232,"props":282,"children":284},{"className":234,"code":283,"language":236,"meta":7,"style":7},"yabal run -n -- program.yabal -f 1000\n",[285],{"type":17,"tag":224,"props":286,"children":287},{"__ignoreMap":7},[288],{"type":17,"tag":242,"props":289,"children":290},{"class":244,"line":245},[291,295,299,304,309,313,318],{"type":17,"tag":242,"props":292,"children":293},{"style":249},[294],{"type":23,"value":134},{"type":17,"tag":242,"props":296,"children":297},{"style":254},[298],{"type":23,"value":257},{"type":17,"tag":242,"props":300,"children":301},{"style":265},[302],{"type":23,"value":303}," -n",{"type":17,"tag":242,"props":305,"children":306},{"style":265},[307],{"type":23,"value":308}," --",{"type":17,"tag":242,"props":310,"children":311},{"style":254},[312],{"type":23,"value":262},{"type":17,"tag":242,"props":314,"children":315},{"style":265},[316],{"type":23,"value":317}," -f",{"type":17,"tag":242,"props":319,"children":320},{"style":265},[321],{"type":23,"value":322}," 1000\n",{"type":17,"tag":25,"props":324,"children":325},{},[326,328,335],{"type":23,"value":327},"For all the options of the native emulator, ",{"type":17,"tag":31,"props":329,"children":332},{"href":330,"rel":331},"https://sam-astro.github.io/Astro8-Computer/docs/Usage.html#emulator",[35],[333],{"type":23,"value":334},"see the documentation",{"type":23,"value":336},".",{"type":17,"tag":132,"props":338,"children":340},{"id":339},"built-in-emulator",[341],{"type":23,"value":342},"Built-in emulator",{"type":17,"tag":25,"props":344,"children":345},{},[346],{"type":23,"value":347},"If you don't want to install the Astro-8 emulator, you can use the built-in emulator instead. However, the built-in emulator is not as feature-rich as the native emulator.",{"type":17,"tag":25,"props":349,"children":350},{},[351],{"type":23,"value":352},"To start your program with the built-in emulator, run the following command:",{"type":17,"tag":232,"props":354,"children":356},{"className":234,"code":355,"language":236,"meta":7,"style":7},"yabal run program.yabal\n",[357],{"type":17,"tag":224,"props":358,"children":359},{"__ignoreMap":7},[360],{"type":17,"tag":242,"props":361,"children":362},{"class":244,"line":245},[363,367,371],{"type":17,"tag":242,"props":364,"children":365},{"style":249},[366],{"type":23,"value":134},{"type":17,"tag":242,"props":368,"children":369},{"style":254},[370],{"type":23,"value":257},{"type":17,"tag":242,"props":372,"children":373},{"style":254},[374],{"type":23,"value":375}," program.yabal\n",{"type":17,"tag":377,"props":378,"children":379},"style",{},[380],{"type":23,"value":381},"html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":47,"depth":47,"links":383},[384,385],{"id":191,"depth":47,"text":194},{"id":339,"depth":47,"text":342},"content:docs:2.get-started:2.emulator.md","docs/2.get-started/2.emulator.md",{"_path":71,"_dir":44,"_draft":6,"_partial":6,"_locale":7,"title":70,"description":389,"tags":390,"navigation":391,"body":392,"_type":49,"_id":1753,"_source":51,"_file":1754,"_extension":53},"Learn about the basics of Yabal.",[44],{"sidebar":65},{"type":14,"children":393,"toc":1739},[394,399,404,410,415,420,432,448,467,499,505,510,515,668,674,685,716,740,800,806,817,841,847,852,876,881,1051,1057,1075,1080,1086,1091,1102,1128,1138,1173,1185,1218,1224,1229,1234,1261,1266,1312,1317,1364,1370,1375,1409,1421,1433,1515,1533,1544,1587,1593,1608,1619,1735],{"type":17,"tag":18,"props":395,"children":397},{"id":396},"basics-of-yabal",[398],{"type":23,"value":70},{"type":17,"tag":25,"props":400,"children":401},{},[402],{"type":23,"value":403},"This page will teach you the basics of Yabal.",{"type":17,"tag":132,"props":405,"children":407},{"id":406},"comments",[408],{"type":23,"value":409},"Comments",{"type":17,"tag":25,"props":411,"children":412},{},[413],{"type":23,"value":414},"Comments are used to add notes to your code. They are ignored by the compiler.",{"type":17,"tag":25,"props":416,"children":417},{},[418],{"type":23,"value":419},"There are two types of comments in Yabal: single-line comments and multi-line comments.",{"type":17,"tag":25,"props":421,"children":422},{},[423,425,430],{"type":23,"value":424},"Single-line comments start with ",{"type":17,"tag":224,"props":426,"children":427},{"className":7},[428],{"type":23,"value":429},"//",{"type":23,"value":431}," and end at the end of the line:",{"type":17,"tag":232,"props":433,"children":436},{"className":434,"code":435,"language":134,"meta":7,"style":7},"language-yabal shiki shiki-themes github-light github-dark","// This is a single-line comment\n",[437],{"type":17,"tag":224,"props":438,"children":439},{"__ignoreMap":7},[440],{"type":17,"tag":242,"props":441,"children":442},{"class":244,"line":245},[443],{"type":17,"tag":242,"props":444,"children":446},{"style":445},"--shiki-default:#6A737D;--shiki-dark:#6A737D",[447],{"type":23,"value":435},{"type":17,"tag":25,"props":449,"children":450},{},[451,453,458,460,465],{"type":23,"value":452},"Multi-line comments start with ",{"type":17,"tag":224,"props":454,"children":455},{"className":7},[456],{"type":23,"value":457},"/*",{"type":23,"value":459}," and end with ",{"type":17,"tag":224,"props":461,"children":462},{"className":7},[463],{"type":23,"value":464},"*/",{"type":23,"value":466},":",{"type":17,"tag":232,"props":468,"children":470},{"className":434,"code":469,"language":134,"meta":7,"style":7},"/*\nThis is a multi-line comment\n*/\n",[471],{"type":17,"tag":224,"props":472,"children":473},{"__ignoreMap":7},[474,482,490],{"type":17,"tag":242,"props":475,"children":476},{"class":244,"line":245},[477],{"type":17,"tag":242,"props":478,"children":479},{"style":445},[480],{"type":23,"value":481},"/*\n",{"type":17,"tag":242,"props":483,"children":484},{"class":244,"line":47},[485],{"type":17,"tag":242,"props":486,"children":487},{"style":445},[488],{"type":23,"value":489},"This is a multi-line comment\n",{"type":17,"tag":242,"props":491,"children":493},{"class":244,"line":492},3,[494],{"type":17,"tag":242,"props":495,"children":496},{"style":445},[497],{"type":23,"value":498},"*/\n",{"type":17,"tag":132,"props":500,"children":502},{"id":501},"types",[503],{"type":23,"value":504},"Types",{"type":17,"tag":25,"props":506,"children":507},{},[508],{"type":23,"value":509},"Yabal is a statically typed language. An statically typed language means that the type of a variable is known at compile time. This is in contrast to a dynamically typed language (like JavaScript), where the type of a variable is only known at runtime.",{"type":17,"tag":25,"props":511,"children":512},{},[513],{"type":23,"value":514},"Yabal has the following types:",{"type":17,"tag":516,"props":517,"children":518},"table",{},[519,538],{"type":17,"tag":520,"props":521,"children":522},"thead",{},[523],{"type":17,"tag":524,"props":525,"children":526},"tr",{},[527,533],{"type":17,"tag":528,"props":529,"children":530},"th",{},[531],{"type":23,"value":532},"Type",{"type":17,"tag":528,"props":534,"children":535},{},[536],{"type":23,"value":537},"Description",{"type":17,"tag":539,"props":540,"children":541},"tbody",{},[542,559,589,619,646],{"type":17,"tag":524,"props":543,"children":544},{},[545,554],{"type":17,"tag":546,"props":547,"children":548},"td",{},[549],{"type":17,"tag":224,"props":550,"children":551},{"className":7},[552],{"type":23,"value":553},"int",{"type":17,"tag":546,"props":555,"children":556},{},[557],{"type":23,"value":558},"A 16-bit unsigned integer",{"type":17,"tag":524,"props":560,"children":561},{},[562,570],{"type":17,"tag":546,"props":563,"children":564},{},[565],{"type":17,"tag":224,"props":566,"children":567},{"className":7},[568],{"type":23,"value":569},"bool",{"type":17,"tag":546,"props":571,"children":572},{},[573,575,580,582,587],{"type":23,"value":574},"A boolean value (",{"type":17,"tag":224,"props":576,"children":577},{"className":7},[578],{"type":23,"value":579},"true",{"type":23,"value":581}," or ",{"type":17,"tag":224,"props":583,"children":584},{"className":7},[585],{"type":23,"value":586},"false",{"type":23,"value":588},") stored as a 16-bit integer",{"type":17,"tag":524,"props":590,"children":591},{},[592,606],{"type":17,"tag":546,"props":593,"children":594},{},[595,601],{"type":17,"tag":596,"props":597,"children":598},"em",{},[599],{"type":23,"value":600},"type",{"type":17,"tag":224,"props":602,"children":603},{"className":7},[604],{"type":23,"value":605},"[]",{"type":17,"tag":546,"props":607,"children":608},{},[609,611,617],{"type":23,"value":610},"An ",{"type":17,"tag":31,"props":612,"children":614},{"href":613},"#arrays",[615],{"type":23,"value":616},"array",{"type":23,"value":618}," of values of the specified type",{"type":17,"tag":524,"props":620,"children":621},{},[622,641],{"type":17,"tag":546,"props":623,"children":624},{},[625,627,632,634,639],{"type":23,"value":626},"func\u003C",{"type":17,"tag":596,"props":628,"children":629},{},[630],{"type":23,"value":631},"parameters",{"type":23,"value":633},", ",{"type":17,"tag":596,"props":635,"children":636},{},[637],{"type":23,"value":638},"return type",{"type":23,"value":640},">",{"type":17,"tag":546,"props":642,"children":643},{},[644],{"type":23,"value":645},"A function that takes the specified parameters and returns the specified type",{"type":17,"tag":524,"props":647,"children":648},{},[649,657],{"type":17,"tag":546,"props":650,"children":651},{},[652],{"type":17,"tag":596,"props":653,"children":654},{},[655],{"type":23,"value":656},"UserDefined",{"type":17,"tag":546,"props":658,"children":659},{},[660,662],{"type":23,"value":661},"An user-defined ",{"type":17,"tag":31,"props":663,"children":665},{"href":664},"#structs",[666],{"type":23,"value":667},"struct",{"type":17,"tag":669,"props":670,"children":672},"h3",{"id":671},"structs",[673],{"type":23,"value":78},{"type":17,"tag":25,"props":675,"children":676},{},[677,679,684],{"type":23,"value":678},"A struct is a user-defined type. It contains a number of fields, which can be of any ",{"type":17,"tag":31,"props":680,"children":682},{"href":681},"#types",[683],{"type":23,"value":600},{"type":23,"value":336},{"type":17,"tag":25,"props":686,"children":687},{},[688,690,694,696,701,703,708,710,714],{"type":23,"value":689},"Structs are declared using the ",{"type":17,"tag":224,"props":691,"children":692},{"className":7},[693],{"type":23,"value":667},{"type":23,"value":695}," keyword, followed by the name of the struct, and then a block of code surrounded by curly braces (",{"type":17,"tag":224,"props":697,"children":698},{"className":7},[699],{"type":23,"value":700},"{",{"type":23,"value":702}," and ",{"type":17,"tag":224,"props":704,"children":705},{"className":7},[706],{"type":23,"value":707},"}",{"type":23,"value":709},").\nWithin the block of code, you can declare fields by specifying the ",{"type":17,"tag":31,"props":711,"children":712},{"href":681},[713],{"type":23,"value":600},{"type":23,"value":715}," and name of the field.",{"type":17,"tag":25,"props":717,"children":718},{},[719,721,726,728,733,734,739],{"type":23,"value":720},"For example, we declare a struct called ",{"type":17,"tag":224,"props":722,"children":723},{"className":7},[724],{"type":23,"value":725},"Position",{"type":23,"value":727}," with two fields, ",{"type":17,"tag":224,"props":729,"children":730},{"className":7},[731],{"type":23,"value":732},"x",{"type":23,"value":702},{"type":17,"tag":224,"props":735,"children":736},{"className":7},[737],{"type":23,"value":738},"y",{"type":23,"value":466},{"type":17,"tag":232,"props":741,"children":743},{"className":434,"code":742,"language":134,"meta":7,"style":7},"struct Position {\n    int x\n    int y\n}\n",[744],{"type":17,"tag":224,"props":745,"children":746},{"__ignoreMap":7},[747,766,779,791],{"type":17,"tag":242,"props":748,"children":749},{"class":244,"line":245},[750,755,760],{"type":17,"tag":242,"props":751,"children":753},{"style":752},"--shiki-default:#D73A49;--shiki-dark:#F97583",[754],{"type":23,"value":667},{"type":17,"tag":242,"props":756,"children":757},{"style":249},[758],{"type":23,"value":759}," Position",{"type":17,"tag":242,"props":761,"children":763},{"style":762},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[764],{"type":23,"value":765}," {\n",{"type":17,"tag":242,"props":767,"children":768},{"class":244,"line":47},[769,774],{"type":17,"tag":242,"props":770,"children":771},{"style":752},[772],{"type":23,"value":773},"    int",{"type":17,"tag":242,"props":775,"children":776},{"style":762},[777],{"type":23,"value":778}," x\n",{"type":17,"tag":242,"props":780,"children":781},{"class":244,"line":492},[782,786],{"type":17,"tag":242,"props":783,"children":784},{"style":752},[785],{"type":23,"value":773},{"type":17,"tag":242,"props":787,"children":788},{"style":762},[789],{"type":23,"value":790}," y\n",{"type":17,"tag":242,"props":792,"children":794},{"class":244,"line":793},4,[795],{"type":17,"tag":242,"props":796,"children":797},{"style":762},[798],{"type":23,"value":799},"}\n",{"type":17,"tag":669,"props":801,"children":803},{"id":802},"arrays",[804],{"type":23,"value":805},"Arrays",{"type":17,"tag":25,"props":807,"children":808},{},[809,811,815],{"type":23,"value":810},"An array is a collection of values of the same type. Arrays are declared using the ",{"type":17,"tag":224,"props":812,"children":813},{"className":7},[814],{"type":23,"value":605},{"type":23,"value":816}," operator:",{"type":17,"tag":232,"props":818,"children":820},{"className":434,"code":819,"language":134,"meta":7,"style":7},"int[] numbers // An array of integers\n",[821],{"type":17,"tag":224,"props":822,"children":823},{"__ignoreMap":7},[824],{"type":17,"tag":242,"props":825,"children":826},{"class":244,"line":245},[827,831,836],{"type":17,"tag":242,"props":828,"children":829},{"style":752},[830],{"type":23,"value":553},{"type":17,"tag":242,"props":832,"children":833},{"style":762},[834],{"type":23,"value":835},"[] numbers ",{"type":17,"tag":242,"props":837,"children":838},{"style":445},[839],{"type":23,"value":840},"// An array of integers\n",{"type":17,"tag":132,"props":842,"children":844},{"id":843},"statements",[845],{"type":23,"value":846},"Statements",{"type":17,"tag":25,"props":848,"children":849},{},[850],{"type":23,"value":851},"The actual code in a Yabal program is made up of statements. Common statements are variable declarations, declaring functions, calling functions and control flow statements.",{"type":17,"tag":25,"props":853,"children":854},{},[855,857,863,865,869,870,874],{"type":23,"value":856},"A statement can be a single line of code that ends with a new-line or ",{"type":17,"tag":31,"props":858,"children":860},{"href":859},"#semi-colons",[861],{"type":23,"value":862},"semi-colon",{"type":23,"value":864},". A statement can also be multiple lines of code surrounded by curly braces (",{"type":17,"tag":224,"props":866,"children":867},{"className":7},[868],{"type":23,"value":700},{"type":23,"value":702},{"type":17,"tag":224,"props":871,"children":872},{"className":7},[873],{"type":23,"value":707},{"type":23,"value":875},").",{"type":17,"tag":25,"props":877,"children":878},{},[879],{"type":23,"value":880},"The following code shows an example of a block of code:",{"type":17,"tag":232,"props":882,"children":885},{"className":434,"code":883,"filename":884,"language":134,"meta":7,"style":7},"// Variable declaration statement\nint variable\n\n// Assignment statement\nvariable = 0\n\n// If statement that contains multiple statements\nif (variable == 0) {\n    // Assignment statement\n    variable = 1\n\n    // Expression statement (postfix increment)\n    variable++\n}\n","run",[886],{"type":17,"tag":224,"props":887,"children":888},{"__ignoreMap":7},[889,897,909,917,925,944,952,961,985,994,1012,1020,1029,1043],{"type":17,"tag":242,"props":890,"children":891},{"class":244,"line":245},[892],{"type":17,"tag":242,"props":893,"children":894},{"style":445},[895],{"type":23,"value":896},"// Variable declaration statement\n",{"type":17,"tag":242,"props":898,"children":899},{"class":244,"line":47},[900,904],{"type":17,"tag":242,"props":901,"children":902},{"style":752},[903],{"type":23,"value":553},{"type":17,"tag":242,"props":905,"children":906},{"style":762},[907],{"type":23,"value":908}," variable\n",{"type":17,"tag":242,"props":910,"children":911},{"class":244,"line":492},[912],{"type":17,"tag":242,"props":913,"children":914},{"emptyLinePlaceholder":65},[915],{"type":23,"value":916},"\n",{"type":17,"tag":242,"props":918,"children":919},{"class":244,"line":793},[920],{"type":17,"tag":242,"props":921,"children":922},{"style":445},[923],{"type":23,"value":924},"// Assignment statement\n",{"type":17,"tag":242,"props":926,"children":928},{"class":244,"line":927},5,[929,934,939],{"type":17,"tag":242,"props":930,"children":931},{"style":762},[932],{"type":23,"value":933},"variable ",{"type":17,"tag":242,"props":935,"children":936},{"style":752},[937],{"type":23,"value":938},"=",{"type":17,"tag":242,"props":940,"children":941},{"style":265},[942],{"type":23,"value":943}," 0\n",{"type":17,"tag":242,"props":945,"children":947},{"class":244,"line":946},6,[948],{"type":17,"tag":242,"props":949,"children":950},{"emptyLinePlaceholder":65},[951],{"type":23,"value":916},{"type":17,"tag":242,"props":953,"children":955},{"class":244,"line":954},7,[956],{"type":17,"tag":242,"props":957,"children":958},{"style":445},[959],{"type":23,"value":960},"// If statement that contains multiple statements\n",{"type":17,"tag":242,"props":962,"children":964},{"class":244,"line":963},8,[965,970,975,980],{"type":17,"tag":242,"props":966,"children":967},{"style":752},[968],{"type":23,"value":969},"if",{"type":17,"tag":242,"props":971,"children":972},{"style":762},[973],{"type":23,"value":974}," (variable == ",{"type":17,"tag":242,"props":976,"children":977},{"style":265},[978],{"type":23,"value":979},"0",{"type":17,"tag":242,"props":981,"children":982},{"style":762},[983],{"type":23,"value":984},") {\n",{"type":17,"tag":242,"props":986,"children":988},{"class":244,"line":987},9,[989],{"type":17,"tag":242,"props":990,"children":991},{"style":445},[992],{"type":23,"value":993},"    // Assignment statement\n",{"type":17,"tag":242,"props":995,"children":997},{"class":244,"line":996},10,[998,1003,1007],{"type":17,"tag":242,"props":999,"children":1000},{"style":762},[1001],{"type":23,"value":1002},"    variable ",{"type":17,"tag":242,"props":1004,"children":1005},{"style":752},[1006],{"type":23,"value":938},{"type":17,"tag":242,"props":1008,"children":1009},{"style":265},[1010],{"type":23,"value":1011}," 1\n",{"type":17,"tag":242,"props":1013,"children":1015},{"class":244,"line":1014},11,[1016],{"type":17,"tag":242,"props":1017,"children":1018},{"emptyLinePlaceholder":65},[1019],{"type":23,"value":916},{"type":17,"tag":242,"props":1021,"children":1023},{"class":244,"line":1022},12,[1024],{"type":17,"tag":242,"props":1025,"children":1026},{"style":445},[1027],{"type":23,"value":1028},"    // Expression statement (postfix increment)\n",{"type":17,"tag":242,"props":1030,"children":1032},{"class":244,"line":1031},13,[1033,1038],{"type":17,"tag":242,"props":1034,"children":1035},{"style":762},[1036],{"type":23,"value":1037},"    variable",{"type":17,"tag":242,"props":1039,"children":1040},{"style":752},[1041],{"type":23,"value":1042},"++\n",{"type":17,"tag":242,"props":1044,"children":1046},{"class":244,"line":1045},14,[1047],{"type":17,"tag":242,"props":1048,"children":1049},{"style":762},[1050],{"type":23,"value":799},{"type":17,"tag":132,"props":1052,"children":1054},{"id":1053},"expressions",[1055],{"type":23,"value":1056},"Expressions",{"type":17,"tag":25,"props":1058,"children":1059},{},[1060,1062,1067,1069,1074],{"type":23,"value":1061},"An expression is a statement that evaluates to a value. For example, ",{"type":17,"tag":224,"props":1063,"children":1064},{"className":7},[1065],{"type":23,"value":1066},"1 + 2",{"type":23,"value":1068}," is an expression that evaluates to ",{"type":17,"tag":224,"props":1070,"children":1071},{"className":7},[1072],{"type":23,"value":1073},"3",{"type":23,"value":336},{"type":17,"tag":25,"props":1076,"children":1077},{},[1078],{"type":23,"value":1079},"Expressions can be used in many places, such as in assignment statements, function calls, and control flow statements.",{"type":17,"tag":132,"props":1081,"children":1083},{"id":1082},"variables",[1084],{"type":23,"value":1085},"Variables",{"type":17,"tag":25,"props":1087,"children":1088},{},[1089],{"type":23,"value":1090},"Variables are used to store values in memory.",{"type":17,"tag":25,"props":1092,"children":1093},{},[1094,1096,1100],{"type":23,"value":1095},"You can declare variable specifying the ",{"type":17,"tag":31,"props":1097,"children":1098},{"href":681},[1099],{"type":23,"value":600},{"type":23,"value":1101}," and name of the variable:",{"type":17,"tag":232,"props":1103,"children":1105},{"className":434,"code":1104,"language":134,"meta":7,"style":7},"// Create an integer variable called \"variable\"\nint variable\n",[1106],{"type":17,"tag":224,"props":1107,"children":1108},{"__ignoreMap":7},[1109,1117],{"type":17,"tag":242,"props":1110,"children":1111},{"class":244,"line":245},[1112],{"type":17,"tag":242,"props":1113,"children":1114},{"style":445},[1115],{"type":23,"value":1116},"// Create an integer variable called \"variable\"\n",{"type":17,"tag":242,"props":1118,"children":1119},{"class":244,"line":47},[1120,1124],{"type":17,"tag":242,"props":1121,"children":1122},{"style":752},[1123],{"type":23,"value":553},{"type":17,"tag":242,"props":1125,"children":1126},{"style":762},[1127],{"type":23,"value":908},{"type":17,"tag":25,"props":1129,"children":1130},{},[1131,1133,1137],{"type":23,"value":1132},"You can also assign a value to a variable when declaring it by using the ",{"type":17,"tag":224,"props":1134,"children":1135},{"className":7},[1136],{"type":23,"value":938},{"type":23,"value":816},{"type":17,"tag":232,"props":1139,"children":1141},{"className":434,"code":1140,"language":134,"meta":7,"style":7},"// Create an integer variable called \"variable\" and assign it the value 1\nint variable = 1\n",[1142],{"type":17,"tag":224,"props":1143,"children":1144},{"__ignoreMap":7},[1145,1153],{"type":17,"tag":242,"props":1146,"children":1147},{"class":244,"line":245},[1148],{"type":17,"tag":242,"props":1149,"children":1150},{"style":445},[1151],{"type":23,"value":1152},"// Create an integer variable called \"variable\" and assign it the value 1\n",{"type":17,"tag":242,"props":1154,"children":1155},{"class":244,"line":47},[1156,1160,1165,1169],{"type":17,"tag":242,"props":1157,"children":1158},{"style":752},[1159],{"type":23,"value":553},{"type":17,"tag":242,"props":1161,"children":1162},{"style":762},[1163],{"type":23,"value":1164}," variable ",{"type":17,"tag":242,"props":1166,"children":1167},{"style":752},[1168],{"type":23,"value":938},{"type":17,"tag":242,"props":1170,"children":1171},{"style":265},[1172],{"type":23,"value":1011},{"type":17,"tag":25,"props":1174,"children":1175},{},[1176,1178,1183],{"type":23,"value":1177},"It is also possible to let the compiler infer the type of the variable. This is done by using the ",{"type":17,"tag":224,"props":1179,"children":1180},{"className":7},[1181],{"type":23,"value":1182},"var",{"type":23,"value":1184}," keyword.\nThe compiler will look at the value that is assigned to the variable, and infer the type from that:",{"type":17,"tag":232,"props":1186,"children":1188},{"className":434,"code":1187,"language":134,"meta":7,"style":7},"// Create an integer variable called \"variable\" and assign it the value 1\nvar variable = 1\n",[1189],{"type":17,"tag":224,"props":1190,"children":1191},{"__ignoreMap":7},[1192,1199],{"type":17,"tag":242,"props":1193,"children":1194},{"class":244,"line":245},[1195],{"type":17,"tag":242,"props":1196,"children":1197},{"style":445},[1198],{"type":23,"value":1152},{"type":17,"tag":242,"props":1200,"children":1201},{"class":244,"line":47},[1202,1206,1210,1214],{"type":17,"tag":242,"props":1203,"children":1204},{"style":752},[1205],{"type":23,"value":1182},{"type":17,"tag":242,"props":1207,"children":1208},{"style":762},[1209],{"type":23,"value":1164},{"type":17,"tag":242,"props":1211,"children":1212},{"style":752},[1213],{"type":23,"value":938},{"type":17,"tag":242,"props":1215,"children":1216},{"style":265},[1217],{"type":23,"value":1011},{"type":17,"tag":132,"props":1219,"children":1221},{"id":1220},"semi-colons",[1222],{"type":23,"value":1223},"Semi-colons",{"type":17,"tag":25,"props":1225,"children":1226},{},[1227],{"type":23,"value":1228},"Semi-colons can be used to separate statements. They are optional, but are required if you want to put multiple statements on the same line.",{"type":17,"tag":25,"props":1230,"children":1231},{},[1232],{"type":23,"value":1233},"For example, this is valid:",{"type":17,"tag":232,"props":1235,"children":1237},{"className":434,"code":1236,"language":134,"meta":7,"style":7},"int a = 1\n",[1238],{"type":17,"tag":224,"props":1239,"children":1240},{"__ignoreMap":7},[1241],{"type":17,"tag":242,"props":1242,"children":1243},{"class":244,"line":245},[1244,1248,1253,1257],{"type":17,"tag":242,"props":1245,"children":1246},{"style":752},[1247],{"type":23,"value":553},{"type":17,"tag":242,"props":1249,"children":1250},{"style":762},[1251],{"type":23,"value":1252}," a ",{"type":17,"tag":242,"props":1254,"children":1255},{"style":752},[1256],{"type":23,"value":938},{"type":17,"tag":242,"props":1258,"children":1259},{"style":265},[1260],{"type":23,"value":1011},{"type":17,"tag":25,"props":1262,"children":1263},{},[1264],{"type":23,"value":1265},"But this is not, since there are multiple statements on the same line:",{"type":17,"tag":232,"props":1267,"children":1269},{"className":434,"code":1268,"language":134,"meta":7,"style":7},"int a = 1 int b = 2\n",[1270],{"type":17,"tag":224,"props":1271,"children":1272},{"__ignoreMap":7},[1273],{"type":17,"tag":242,"props":1274,"children":1275},{"class":244,"line":245},[1276,1280,1284,1288,1293,1298,1303,1307],{"type":17,"tag":242,"props":1277,"children":1278},{"style":752},[1279],{"type":23,"value":553},{"type":17,"tag":242,"props":1281,"children":1282},{"style":762},[1283],{"type":23,"value":1252},{"type":17,"tag":242,"props":1285,"children":1286},{"style":752},[1287],{"type":23,"value":938},{"type":17,"tag":242,"props":1289,"children":1290},{"style":265},[1291],{"type":23,"value":1292}," 1",{"type":17,"tag":242,"props":1294,"children":1295},{"style":752},[1296],{"type":23,"value":1297}," int",{"type":17,"tag":242,"props":1299,"children":1300},{"style":762},[1301],{"type":23,"value":1302}," b ",{"type":17,"tag":242,"props":1304,"children":1305},{"style":752},[1306],{"type":23,"value":938},{"type":17,"tag":242,"props":1308,"children":1309},{"style":265},[1310],{"type":23,"value":1311}," 2\n",{"type":17,"tag":25,"props":1313,"children":1314},{},[1315],{"type":23,"value":1316},"If you want to put multiple statements on the same line, you can use semi-colons to separate them:",{"type":17,"tag":232,"props":1318,"children":1320},{"className":434,"code":1319,"language":134,"meta":7,"style":7},"int a = 1; int b = 2\n",[1321],{"type":17,"tag":224,"props":1322,"children":1323},{"__ignoreMap":7},[1324],{"type":17,"tag":242,"props":1325,"children":1326},{"class":244,"line":245},[1327,1331,1335,1339,1343,1348,1352,1356,1360],{"type":17,"tag":242,"props":1328,"children":1329},{"style":752},[1330],{"type":23,"value":553},{"type":17,"tag":242,"props":1332,"children":1333},{"style":762},[1334],{"type":23,"value":1252},{"type":17,"tag":242,"props":1336,"children":1337},{"style":752},[1338],{"type":23,"value":938},{"type":17,"tag":242,"props":1340,"children":1341},{"style":265},[1342],{"type":23,"value":1292},{"type":17,"tag":242,"props":1344,"children":1345},{"style":762},[1346],{"type":23,"value":1347},"; ",{"type":17,"tag":242,"props":1349,"children":1350},{"style":752},[1351],{"type":23,"value":553},{"type":17,"tag":242,"props":1353,"children":1354},{"style":762},[1355],{"type":23,"value":1302},{"type":17,"tag":242,"props":1357,"children":1358},{"style":752},[1359],{"type":23,"value":938},{"type":17,"tag":242,"props":1361,"children":1362},{"style":265},[1363],{"type":23,"value":1311},{"type":17,"tag":132,"props":1365,"children":1367},{"id":1366},"functions",[1368],{"type":23,"value":1369},"Functions",{"type":17,"tag":25,"props":1371,"children":1372},{},[1373],{"type":23,"value":1374},"Functions are used to reuse code. When you declare a function with code, you can call it from other places in your code.",{"type":17,"tag":25,"props":1376,"children":1377},{},[1378,1380,1384,1386,1391,1392,1397,1399,1403,1404,1408],{"type":23,"value":1379},"Functions are specified the return ",{"type":17,"tag":31,"props":1381,"children":1382},{"href":681},[1383],{"type":23,"value":600},{"type":23,"value":1385}," and name of the function, followed by the parameters of the function in parentheses (",{"type":17,"tag":224,"props":1387,"children":1388},{"className":7},[1389],{"type":23,"value":1390},"(",{"type":23,"value":702},{"type":17,"tag":224,"props":1393,"children":1394},{"className":7},[1395],{"type":23,"value":1396},")",{"type":23,"value":1398},"), and then a block of code surrounded by curly braces (",{"type":17,"tag":224,"props":1400,"children":1401},{"className":7},[1402],{"type":23,"value":700},{"type":23,"value":702},{"type":17,"tag":224,"props":1405,"children":1406},{"className":7},[1407],{"type":23,"value":707},{"type":23,"value":875},{"type":17,"tag":25,"props":1410,"children":1411},{},[1412,1414,1419],{"type":23,"value":1413},"To return a value from a function, use the ",{"type":17,"tag":224,"props":1415,"children":1416},{"className":7},[1417],{"type":23,"value":1418},"return",{"type":23,"value":1420}," keyword followed by the value to return.",{"type":17,"tag":25,"props":1422,"children":1423},{},[1424,1426,1431],{"type":23,"value":1425},"For example, the following code declares a function called ",{"type":17,"tag":224,"props":1427,"children":1428},{"className":7},[1429],{"type":23,"value":1430},"add",{"type":23,"value":1432}," that takes two integers as parameters and returns an integer:",{"type":17,"tag":232,"props":1434,"children":1436},{"className":434,"code":1435,"language":134,"meta":7,"style":7},"// Declare the add function\n// The function takes two integers (a and b) as parameters and returns an integer\nint add(int a, int b) {\n    return a + b\n}\n",[1437],{"type":17,"tag":224,"props":1438,"children":1439},{"__ignoreMap":7},[1440,1448,1456,1486,1508],{"type":17,"tag":242,"props":1441,"children":1442},{"class":244,"line":245},[1443],{"type":17,"tag":242,"props":1444,"children":1445},{"style":445},[1446],{"type":23,"value":1447},"// Declare the add function\n",{"type":17,"tag":242,"props":1449,"children":1450},{"class":244,"line":47},[1451],{"type":17,"tag":242,"props":1452,"children":1453},{"style":445},[1454],{"type":23,"value":1455},"// The function takes two integers (a and b) as parameters and returns an integer\n",{"type":17,"tag":242,"props":1457,"children":1458},{"class":244,"line":492},[1459,1463,1468,1472,1477,1481],{"type":17,"tag":242,"props":1460,"children":1461},{"style":752},[1462],{"type":23,"value":553},{"type":17,"tag":242,"props":1464,"children":1465},{"style":762},[1466],{"type":23,"value":1467}," add(",{"type":17,"tag":242,"props":1469,"children":1470},{"style":752},[1471],{"type":23,"value":553},{"type":17,"tag":242,"props":1473,"children":1474},{"style":762},[1475],{"type":23,"value":1476}," a, ",{"type":17,"tag":242,"props":1478,"children":1479},{"style":752},[1480],{"type":23,"value":553},{"type":17,"tag":242,"props":1482,"children":1483},{"style":762},[1484],{"type":23,"value":1485}," b) {\n",{"type":17,"tag":242,"props":1487,"children":1488},{"class":244,"line":793},[1489,1494,1498,1503],{"type":17,"tag":242,"props":1490,"children":1491},{"style":752},[1492],{"type":23,"value":1493},"    return",{"type":17,"tag":242,"props":1495,"children":1496},{"style":762},[1497],{"type":23,"value":1252},{"type":17,"tag":242,"props":1499,"children":1500},{"style":752},[1501],{"type":23,"value":1502},"+",{"type":17,"tag":242,"props":1504,"children":1505},{"style":762},[1506],{"type":23,"value":1507}," b\n",{"type":17,"tag":242,"props":1509,"children":1510},{"class":244,"line":927},[1511],{"type":17,"tag":242,"props":1512,"children":1513},{"style":762},[1514],{"type":23,"value":799},{"type":17,"tag":25,"props":1516,"children":1517},{},[1518,1520,1525,1527,1531],{"type":23,"value":1519},"Functions can also be declared without a return type by specifying ",{"type":17,"tag":224,"props":1521,"children":1522},{"className":7},[1523],{"type":23,"value":1524},"void",{"type":23,"value":1526}," as the return type. A function with a return type of ",{"type":17,"tag":224,"props":1528,"children":1529},{"className":7},[1530],{"type":23,"value":1524},{"type":23,"value":1532}," cannot return a value.",{"type":17,"tag":25,"props":1534,"children":1535},{},[1536,1537,1542],{"type":23,"value":1425},{"type":17,"tag":224,"props":1538,"children":1539},{"className":7},[1540],{"type":23,"value":1541},"print",{"type":23,"value":1543}," that takes a int array as a parameter and returns nothing:",{"type":17,"tag":232,"props":1545,"children":1547},{"className":434,"code":1546,"language":134,"meta":7,"style":7},"void print(int[] data) {\n    // Print the value to the screen\n}\n",[1548],{"type":17,"tag":224,"props":1549,"children":1550},{"__ignoreMap":7},[1551,1572,1580],{"type":17,"tag":242,"props":1552,"children":1553},{"class":244,"line":245},[1554,1558,1563,1567],{"type":17,"tag":242,"props":1555,"children":1556},{"style":752},[1557],{"type":23,"value":1524},{"type":17,"tag":242,"props":1559,"children":1560},{"style":762},[1561],{"type":23,"value":1562}," print(",{"type":17,"tag":242,"props":1564,"children":1565},{"style":752},[1566],{"type":23,"value":553},{"type":17,"tag":242,"props":1568,"children":1569},{"style":762},[1570],{"type":23,"value":1571},"[] data) {\n",{"type":17,"tag":242,"props":1573,"children":1574},{"class":244,"line":47},[1575],{"type":17,"tag":242,"props":1576,"children":1577},{"style":445},[1578],{"type":23,"value":1579},"    // Print the value to the screen\n",{"type":17,"tag":242,"props":1581,"children":1582},{"class":244,"line":492},[1583],{"type":17,"tag":242,"props":1584,"children":1585},{"style":762},[1586],{"type":23,"value":799},{"type":17,"tag":669,"props":1588,"children":1590},{"id":1589},"calling-functions",[1591],{"type":23,"value":1592},"Calling functions",{"type":17,"tag":25,"props":1594,"children":1595},{},[1596,1598,1602,1603,1607],{"type":23,"value":1597},"To call a function, use the name of the function followed by the arguments of the function in parentheses (",{"type":17,"tag":224,"props":1599,"children":1600},{"className":7},[1601],{"type":23,"value":1390},{"type":23,"value":702},{"type":17,"tag":224,"props":1604,"children":1605},{"className":7},[1606],{"type":23,"value":1396},{"type":23,"value":875},{"type":17,"tag":25,"props":1609,"children":1610},{},[1611,1613,1617],{"type":23,"value":1612},"For example, the following code calls the ",{"type":17,"tag":224,"props":1614,"children":1615},{"className":7},[1616],{"type":23,"value":1430},{"type":23,"value":1618}," function that we declared earlier:",{"type":17,"tag":232,"props":1620,"children":1623},{"className":434,"code":1621,"filename":884,"highlights":1622,"language":134,"meta":7,"style":7},"// Call the add function and store the result in the \"result\" variable\nint result = add(1, 2)\n\nint add(int a, int b) {\n    return a + b\n}\n",[47],[1624],{"type":17,"tag":224,"props":1625,"children":1626},{"__ignoreMap":7},[1627,1635,1675,1682,1709,1728],{"type":17,"tag":242,"props":1628,"children":1629},{"class":244,"line":245},[1630],{"type":17,"tag":242,"props":1631,"children":1632},{"style":445},[1633],{"type":23,"value":1634},"// Call the add function and store the result in the \"result\" variable\n",{"type":17,"tag":242,"props":1636,"children":1638},{"class":1637,"line":47},"line highlight",[1639,1643,1648,1652,1656,1661,1665,1670],{"type":17,"tag":242,"props":1640,"children":1641},{"style":752},[1642],{"type":23,"value":553},{"type":17,"tag":242,"props":1644,"children":1645},{"style":762},[1646],{"type":23,"value":1647}," result ",{"type":17,"tag":242,"props":1649,"children":1650},{"style":752},[1651],{"type":23,"value":938},{"type":17,"tag":242,"props":1653,"children":1654},{"style":762},[1655],{"type":23,"value":1467},{"type":17,"tag":242,"props":1657,"children":1658},{"style":265},[1659],{"type":23,"value":1660},"1",{"type":17,"tag":242,"props":1662,"children":1663},{"style":762},[1664],{"type":23,"value":633},{"type":17,"tag":242,"props":1666,"children":1667},{"style":265},[1668],{"type":23,"value":1669},"2",{"type":17,"tag":242,"props":1671,"children":1672},{"style":762},[1673],{"type":23,"value":1674},")\n",{"type":17,"tag":242,"props":1676,"children":1677},{"class":244,"line":492},[1678],{"type":17,"tag":242,"props":1679,"children":1680},{"emptyLinePlaceholder":65},[1681],{"type":23,"value":916},{"type":17,"tag":242,"props":1683,"children":1684},{"class":244,"line":793},[1685,1689,1693,1697,1701,1705],{"type":17,"tag":242,"props":1686,"children":1687},{"style":752},[1688],{"type":23,"value":553},{"type":17,"tag":242,"props":1690,"children":1691},{"style":762},[1692],{"type":23,"value":1467},{"type":17,"tag":242,"props":1694,"children":1695},{"style":752},[1696],{"type":23,"value":553},{"type":17,"tag":242,"props":1698,"children":1699},{"style":762},[1700],{"type":23,"value":1476},{"type":17,"tag":242,"props":1702,"children":1703},{"style":752},[1704],{"type":23,"value":553},{"type":17,"tag":242,"props":1706,"children":1707},{"style":762},[1708],{"type":23,"value":1485},{"type":17,"tag":242,"props":1710,"children":1711},{"class":244,"line":927},[1712,1716,1720,1724],{"type":17,"tag":242,"props":1713,"children":1714},{"style":752},[1715],{"type":23,"value":1493},{"type":17,"tag":242,"props":1717,"children":1718},{"style":762},[1719],{"type":23,"value":1252},{"type":17,"tag":242,"props":1721,"children":1722},{"style":752},[1723],{"type":23,"value":1502},{"type":17,"tag":242,"props":1725,"children":1726},{"style":762},[1727],{"type":23,"value":1507},{"type":17,"tag":242,"props":1729,"children":1730},{"class":244,"line":946},[1731],{"type":17,"tag":242,"props":1732,"children":1733},{"style":762},[1734],{"type":23,"value":799},{"type":17,"tag":377,"props":1736,"children":1737},{},[1738],{"type":23,"value":381},{"title":7,"searchDepth":47,"depth":47,"links":1740},[1741,1742,1746,1747,1748,1749,1750],{"id":406,"depth":47,"text":409},{"id":501,"depth":47,"text":504,"children":1743},[1744,1745],{"id":671,"depth":492,"text":78},{"id":802,"depth":492,"text":805},{"id":843,"depth":47,"text":846},{"id":1053,"depth":47,"text":1056},{"id":1082,"depth":47,"text":1085},{"id":1220,"depth":47,"text":1223},{"id":1366,"depth":47,"text":1369,"children":1751},[1752],{"id":1589,"depth":492,"text":1592},"content:docs:2.get-started:3.basics-of-yabal.md","docs/2.get-started/3.basics-of-yabal.md",1698440057301]