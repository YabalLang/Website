[{"data":1,"prerenderedAt":955},["Reactive",2],{"content-query-eMZ1yhdhvd":3,"content-navigation-8C37fagqQL":43,"content-navigation-77HZoA6oTt":95,"content-query-om0GVgs79m":102},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"navigation":12,"body":13,"_type":38,"_id":39,"_source":40,"_file":41,"_extension":42},"/docs/peripherals","docs",false,"","Perhipherals","Learn how to interact with the Astro-8 peripherals.",[11],"index",{"sidebar":6},{"type":14,"children":15,"toc":35},"root",[16,24,30],{"type":17,"tag":18,"props":19,"children":21},"element","h1",{"id":20},"perhipherals",[22],{"type":23,"value":8},"text",{"type":17,"tag":25,"props":26,"children":27},"p",{},[28],{"type":23,"value":29},"This section contains information on how to interact with the Astro-8 peripherals.",{"type":17,"tag":31,"props":32,"children":34},"related",{":tags":33},"peripherals",[],{"title":7,"searchDepth":36,"depth":36,"links":37},2,[],"markdown","content:docs:4.peripherals:index.md","content","docs/4.peripherals/index.md","md",[44],{"title":45,"_path":46,"children":47,"root":56},"Documentation","/docs",[48,49,64,78,84],{"title":45,"_path":46},{"title":50,"_path":51,"children":52,"sidebar":6},"Getting started","/docs/get-started",[53,57,60,63],{"title":54,"_path":55,"sidebar":56},"Downloads","/docs/get-started/downloads",true,{"title":58,"_path":59,"sidebar":56},"Emulator","/docs/get-started/emulator",{"title":61,"_path":62,"sidebar":56},"Basics of Yabal","/docs/get-started/basics-of-yabal",{"title":50,"_path":51,"sidebar":6},{"title":65,"_path":66,"children":67,"sidebar":6},"Language reference","/docs/language-reference",[68,71,74,77],{"title":69,"_path":70,"sidebar":56},"Structs","/docs/language-reference/structs",{"title":72,"_path":73,"sidebar":56},"Function pointers","/docs/language-reference/function-pointer",{"title":75,"_path":76,"sidebar":56},"Stack allocations","/docs/language-reference/stack-allocations",{"title":65,"_path":66,"sidebar":6},{"title":8,"_path":4,"children":79,"sidebar":6},[80,83],{"title":81,"_path":82,"sidebar":56},"Screen","/docs/peripherals/screen",{"title":8,"_path":4,"sidebar":6},{"title":85,"_path":86,"children":87,"sidebar":6},"Advanced topics","/docs/advanced-topics",[88,91,94],{"title":89,"_path":90,"sidebar":56},"Assembly mode","/docs/advanced-topics/assembly-mode",{"title":92,"_path":93,"sidebar":56},"Optimizing","/docs/advanced-topics/optimizing",{"title":85,"_path":86,"sidebar":6},[96],{"title":45,"_path":46,"children":97,"root":56},[98],{"title":99,"_path":4,"children":100},"Peripherals",[101],{"title":81,"_path":82,"sidebar":56},{"_path":82,"_dir":33,"_draft":6,"_partial":6,"_locale":7,"title":81,"description":103,"tags":104,"navigation":105,"body":106,"_type":38,"_id":953,"_source":40,"_file":954,"_extension":42},"Learn how to interact with the screen.",[33],{"sidebar":56},{"type":14,"children":107,"toc":947},[108,113,118,138,164,171,176,183,188,325,330,550,562,568,573,670,675,733,738,941],{"type":17,"tag":18,"props":109,"children":111},{"id":110},"screen",[112],{"type":23,"value":81},{"type":17,"tag":25,"props":114,"children":115},{},[116],{"type":23,"value":117},"The screen in Astro-8 is a 108x108 BGR555 display. This means that each pixel is represented by 15 bits, with 5 bits for each color channel (blue, green, and red).",{"type":17,"tag":25,"props":119,"children":120},{},[121,123,129,131,136],{"type":23,"value":122},"Since the bit width of each color channel is 5 bits, the maximum value of each color channel is 31. This means that the maximum color value is ",{"type":17,"tag":124,"props":125,"children":126},"code",{"className":7},[127],{"type":23,"value":128},"31, 31, 31",{"type":23,"value":130}," (white), and the minimum color value is ",{"type":17,"tag":124,"props":132,"children":133},{"className":7},[134],{"type":23,"value":135},"0, 0, 0",{"type":23,"value":137}," (black).",{"type":17,"tag":25,"props":139,"children":140},{},[141,143,148,150,155,157,162],{"type":23,"value":142},"Every pixel is 1 uint16 in size, so the total size of the screen is 108 * 108 * 1 = 11664 uint16s.\nThe default position of the screen is at address ",{"type":17,"tag":124,"props":144,"children":145},{"className":7},[146],{"type":23,"value":147},"53870",{"type":23,"value":149}," at bank ",{"type":17,"tag":124,"props":151,"children":152},{"className":7},[153],{"type":23,"value":154},"1",{"type":23,"value":156}," in memory, and ends at address ",{"type":17,"tag":124,"props":158,"children":159},{"className":7},[160],{"type":23,"value":161},"65534",{"type":23,"value":163},".",{"type":17,"tag":165,"props":166,"children":168},"h2",{"id":167},"changing-the-color-of-a-pixel",[169],{"type":23,"value":170},"Changing the color of a pixel",{"type":17,"tag":25,"props":172,"children":173},{},[174],{"type":23,"value":175},"There are multiple ways to change the color of a pixel. In this section, we will go over 2 ways to change the color of a pixel: using a function that converts RGB values to BGR555 values, and using a struct.",{"type":17,"tag":177,"props":178,"children":180},"h3",{"id":179},"using-a-function",[181],{"type":23,"value":182},"Using a function",{"type":17,"tag":25,"props":184,"children":185},{},[186],{"type":23,"value":187},"In today standards, we're used to RGB values ranging from 0 to 255. To convert an RGB value to a BGR555 value, we can create a function that divides each color channel by 8 and shifts them to the correct position:",{"type":17,"tag":189,"props":190,"children":194},"pre",{"className":191,"code":192,"language":193,"meta":7,"style":7},"language-yabal shiki shiki-themes github-light github-dark","inline int get_color(int r, int g, int b) => (r / 8 \u003C\u003C 10) + (g / 8 \u003C\u003C 5) + (b / 8);\n","yabal",[195],{"type":17,"tag":124,"props":196,"children":197},{"__ignoreMap":7},[198],{"type":17,"tag":199,"props":200,"children":203},"span",{"class":201,"line":202},"line",1,[204,210,215,221,226,231,235,240,244,249,254,259,265,270,275,280,285,290,294,298,303,307,311,316,320],{"type":17,"tag":199,"props":205,"children":207},{"style":206},"--shiki-default:#D73A49;--shiki-dark:#F97583",[208],{"type":23,"value":209},"inline",{"type":17,"tag":199,"props":211,"children":212},{"style":206},[213],{"type":23,"value":214}," int",{"type":17,"tag":199,"props":216,"children":218},{"style":217},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[219],{"type":23,"value":220}," get_color(",{"type":17,"tag":199,"props":222,"children":223},{"style":206},[224],{"type":23,"value":225},"int",{"type":17,"tag":199,"props":227,"children":228},{"style":217},[229],{"type":23,"value":230}," r, ",{"type":17,"tag":199,"props":232,"children":233},{"style":206},[234],{"type":23,"value":225},{"type":17,"tag":199,"props":236,"children":237},{"style":217},[238],{"type":23,"value":239}," g, ",{"type":17,"tag":199,"props":241,"children":242},{"style":206},[243],{"type":23,"value":225},{"type":17,"tag":199,"props":245,"children":246},{"style":217},[247],{"type":23,"value":248}," b) ",{"type":17,"tag":199,"props":250,"children":251},{"style":206},[252],{"type":23,"value":253},"=",{"type":17,"tag":199,"props":255,"children":256},{"style":217},[257],{"type":23,"value":258},"> (r / ",{"type":17,"tag":199,"props":260,"children":262},{"style":261},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[263],{"type":23,"value":264},"8",{"type":17,"tag":199,"props":266,"children":267},{"style":217},[268],{"type":23,"value":269}," \u003C\u003C ",{"type":17,"tag":199,"props":271,"children":272},{"style":261},[273],{"type":23,"value":274},"10",{"type":17,"tag":199,"props":276,"children":277},{"style":217},[278],{"type":23,"value":279},") ",{"type":17,"tag":199,"props":281,"children":282},{"style":206},[283],{"type":23,"value":284},"+",{"type":17,"tag":199,"props":286,"children":287},{"style":217},[288],{"type":23,"value":289}," (g / ",{"type":17,"tag":199,"props":291,"children":292},{"style":261},[293],{"type":23,"value":264},{"type":17,"tag":199,"props":295,"children":296},{"style":217},[297],{"type":23,"value":269},{"type":17,"tag":199,"props":299,"children":300},{"style":261},[301],{"type":23,"value":302},"5",{"type":17,"tag":199,"props":304,"children":305},{"style":217},[306],{"type":23,"value":279},{"type":17,"tag":199,"props":308,"children":309},{"style":206},[310],{"type":23,"value":284},{"type":17,"tag":199,"props":312,"children":313},{"style":217},[314],{"type":23,"value":315}," (b / ",{"type":17,"tag":199,"props":317,"children":318},{"style":261},[319],{"type":23,"value":264},{"type":17,"tag":199,"props":321,"children":322},{"style":217},[323],{"type":23,"value":324},");\n",{"type":17,"tag":25,"props":326,"children":327},{},[328],{"type":23,"value":329},"Then you can create a pointer to the screen and change the color of a pixel. The following example will set the first pixel to red:",{"type":17,"tag":189,"props":331,"children":334},{"className":191,"code":332,"filename":333,"language":193,"meta":7,"style":7},"var screen = create_pointer(53870, 1)\n\nscreen[0] = get_color(255, 0, 0)\n\ninline int get_color(int r, int g, int b) => (r / 8 \u003C\u003C 10) + (g / 8 \u003C\u003C 5) + (b / 8);\n","run",[335],{"type":17,"tag":124,"props":336,"children":337},{"__ignoreMap":7},[338,378,386,438,446],{"type":17,"tag":199,"props":339,"children":340},{"class":201,"line":202},[341,346,351,355,360,364,369,373],{"type":17,"tag":199,"props":342,"children":343},{"style":206},[344],{"type":23,"value":345},"var",{"type":17,"tag":199,"props":347,"children":348},{"style":217},[349],{"type":23,"value":350}," screen ",{"type":17,"tag":199,"props":352,"children":353},{"style":206},[354],{"type":23,"value":253},{"type":17,"tag":199,"props":356,"children":357},{"style":217},[358],{"type":23,"value":359}," create_pointer(",{"type":17,"tag":199,"props":361,"children":362},{"style":261},[363],{"type":23,"value":147},{"type":17,"tag":199,"props":365,"children":366},{"style":217},[367],{"type":23,"value":368},", ",{"type":17,"tag":199,"props":370,"children":371},{"style":261},[372],{"type":23,"value":154},{"type":17,"tag":199,"props":374,"children":375},{"style":217},[376],{"type":23,"value":377},")\n",{"type":17,"tag":199,"props":379,"children":380},{"class":201,"line":36},[381],{"type":17,"tag":199,"props":382,"children":383},{"emptyLinePlaceholder":56},[384],{"type":23,"value":385},"\n",{"type":17,"tag":199,"props":387,"children":389},{"class":201,"line":388},3,[390,395,400,405,409,413,418,422,426,430,434],{"type":17,"tag":199,"props":391,"children":392},{"style":217},[393],{"type":23,"value":394},"screen[",{"type":17,"tag":199,"props":396,"children":397},{"style":261},[398],{"type":23,"value":399},"0",{"type":17,"tag":199,"props":401,"children":402},{"style":217},[403],{"type":23,"value":404},"] ",{"type":17,"tag":199,"props":406,"children":407},{"style":206},[408],{"type":23,"value":253},{"type":17,"tag":199,"props":410,"children":411},{"style":217},[412],{"type":23,"value":220},{"type":17,"tag":199,"props":414,"children":415},{"style":261},[416],{"type":23,"value":417},"255",{"type":17,"tag":199,"props":419,"children":420},{"style":217},[421],{"type":23,"value":368},{"type":17,"tag":199,"props":423,"children":424},{"style":261},[425],{"type":23,"value":399},{"type":17,"tag":199,"props":427,"children":428},{"style":217},[429],{"type":23,"value":368},{"type":17,"tag":199,"props":431,"children":432},{"style":261},[433],{"type":23,"value":399},{"type":17,"tag":199,"props":435,"children":436},{"style":217},[437],{"type":23,"value":377},{"type":17,"tag":199,"props":439,"children":441},{"class":201,"line":440},4,[442],{"type":17,"tag":199,"props":443,"children":444},{"emptyLinePlaceholder":56},[445],{"type":23,"value":385},{"type":17,"tag":199,"props":447,"children":449},{"class":201,"line":448},5,[450,454,458,462,466,470,474,478,482,486,490,494,498,502,506,510,514,518,522,526,530,534,538,542,546],{"type":17,"tag":199,"props":451,"children":452},{"style":206},[453],{"type":23,"value":209},{"type":17,"tag":199,"props":455,"children":456},{"style":206},[457],{"type":23,"value":214},{"type":17,"tag":199,"props":459,"children":460},{"style":217},[461],{"type":23,"value":220},{"type":17,"tag":199,"props":463,"children":464},{"style":206},[465],{"type":23,"value":225},{"type":17,"tag":199,"props":467,"children":468},{"style":217},[469],{"type":23,"value":230},{"type":17,"tag":199,"props":471,"children":472},{"style":206},[473],{"type":23,"value":225},{"type":17,"tag":199,"props":475,"children":476},{"style":217},[477],{"type":23,"value":239},{"type":17,"tag":199,"props":479,"children":480},{"style":206},[481],{"type":23,"value":225},{"type":17,"tag":199,"props":483,"children":484},{"style":217},[485],{"type":23,"value":248},{"type":17,"tag":199,"props":487,"children":488},{"style":206},[489],{"type":23,"value":253},{"type":17,"tag":199,"props":491,"children":492},{"style":217},[493],{"type":23,"value":258},{"type":17,"tag":199,"props":495,"children":496},{"style":261},[497],{"type":23,"value":264},{"type":17,"tag":199,"props":499,"children":500},{"style":217},[501],{"type":23,"value":269},{"type":17,"tag":199,"props":503,"children":504},{"style":261},[505],{"type":23,"value":274},{"type":17,"tag":199,"props":507,"children":508},{"style":217},[509],{"type":23,"value":279},{"type":17,"tag":199,"props":511,"children":512},{"style":206},[513],{"type":23,"value":284},{"type":17,"tag":199,"props":515,"children":516},{"style":217},[517],{"type":23,"value":289},{"type":17,"tag":199,"props":519,"children":520},{"style":261},[521],{"type":23,"value":264},{"type":17,"tag":199,"props":523,"children":524},{"style":217},[525],{"type":23,"value":269},{"type":17,"tag":199,"props":527,"children":528},{"style":261},[529],{"type":23,"value":302},{"type":17,"tag":199,"props":531,"children":532},{"style":217},[533],{"type":23,"value":279},{"type":17,"tag":199,"props":535,"children":536},{"style":206},[537],{"type":23,"value":284},{"type":17,"tag":199,"props":539,"children":540},{"style":217},[541],{"type":23,"value":315},{"type":17,"tag":199,"props":543,"children":544},{"style":261},[545],{"type":23,"value":264},{"type":17,"tag":199,"props":547,"children":548},{"style":217},[549],{"type":23,"value":324},{"type":17,"tag":25,"props":551,"children":552},{},[553,555,560],{"type":23,"value":554},"Because we're using constant values, the compiler will optimize the function call to a constant value of ",{"type":17,"tag":124,"props":556,"children":557},{"className":7},[558],{"type":23,"value":559},"31744",{"type":23,"value":561},", which is the BGR555 value of red.\nHowever, if we're not using constant values, the CPU will have to calculate the BGR555 value every time we call the function, which is slower than using using the color range of 0 to 31 directly.",{"type":17,"tag":177,"props":563,"children":565},{"id":564},"using-a-struct",[566],{"type":23,"value":567},"Using a struct",{"type":17,"tag":25,"props":569,"children":570},{},[571],{"type":23,"value":572},"Another way to change the color of a pixel is to use a struct. First, you need to create a struct with 3 fields, one for each color channel:",{"type":17,"tag":189,"props":574,"children":576},{"className":191,"code":575,"language":193,"meta":7,"style":7},"struct Pixel {\n    int b : 5\n    int g : 5\n    int r : 5\n}\n",[577],{"type":17,"tag":124,"props":578,"children":579},{"__ignoreMap":7},[580,599,622,642,662],{"type":17,"tag":199,"props":581,"children":582},{"class":201,"line":202},[583,588,594],{"type":17,"tag":199,"props":584,"children":585},{"style":206},[586],{"type":23,"value":587},"struct",{"type":17,"tag":199,"props":589,"children":591},{"style":590},"--shiki-default:#6F42C1;--shiki-dark:#B392F0",[592],{"type":23,"value":593}," Pixel",{"type":17,"tag":199,"props":595,"children":596},{"style":217},[597],{"type":23,"value":598}," {\n",{"type":17,"tag":199,"props":600,"children":601},{"class":201,"line":36},[602,607,612,617],{"type":17,"tag":199,"props":603,"children":604},{"style":206},[605],{"type":23,"value":606},"    int",{"type":17,"tag":199,"props":608,"children":609},{"style":217},[610],{"type":23,"value":611}," b ",{"type":17,"tag":199,"props":613,"children":614},{"style":206},[615],{"type":23,"value":616},":",{"type":17,"tag":199,"props":618,"children":619},{"style":261},[620],{"type":23,"value":621}," 5\n",{"type":17,"tag":199,"props":623,"children":624},{"class":201,"line":388},[625,629,634,638],{"type":17,"tag":199,"props":626,"children":627},{"style":206},[628],{"type":23,"value":606},{"type":17,"tag":199,"props":630,"children":631},{"style":217},[632],{"type":23,"value":633}," g ",{"type":17,"tag":199,"props":635,"children":636},{"style":206},[637],{"type":23,"value":616},{"type":17,"tag":199,"props":639,"children":640},{"style":261},[641],{"type":23,"value":621},{"type":17,"tag":199,"props":643,"children":644},{"class":201,"line":440},[645,649,654,658],{"type":17,"tag":199,"props":646,"children":647},{"style":206},[648],{"type":23,"value":606},{"type":17,"tag":199,"props":650,"children":651},{"style":217},[652],{"type":23,"value":653}," r ",{"type":17,"tag":199,"props":655,"children":656},{"style":206},[657],{"type":23,"value":616},{"type":17,"tag":199,"props":659,"children":660},{"style":261},[661],{"type":23,"value":621},{"type":17,"tag":199,"props":663,"children":664},{"class":201,"line":448},[665],{"type":17,"tag":199,"props":666,"children":667},{"style":217},[668],{"type":23,"value":669},"}\n",{"type":17,"tag":25,"props":671,"children":672},{},[673],{"type":23,"value":674},"Then you can create a pointer to the screen:",{"type":17,"tag":189,"props":676,"children":678},{"className":191,"code":677,"language":193,"meta":7,"style":7},"var screen = create_pointer\u003CPixel>(53870, 1)\n",[679],{"type":17,"tag":124,"props":680,"children":681},{"__ignoreMap":7},[682],{"type":17,"tag":199,"props":683,"children":684},{"class":201,"line":202},[685,689,693,697,702,707,712,717,721,725,729],{"type":17,"tag":199,"props":686,"children":687},{"style":206},[688],{"type":23,"value":345},{"type":17,"tag":199,"props":690,"children":691},{"style":217},[692],{"type":23,"value":350},{"type":17,"tag":199,"props":694,"children":695},{"style":206},[696],{"type":23,"value":253},{"type":17,"tag":199,"props":698,"children":699},{"style":590},[700],{"type":23,"value":701}," create_pointer",{"type":17,"tag":199,"props":703,"children":704},{"style":217},[705],{"type":23,"value":706},"\u003C",{"type":17,"tag":199,"props":708,"children":709},{"style":590},[710],{"type":23,"value":711},"Pixel",{"type":17,"tag":199,"props":713,"children":714},{"style":217},[715],{"type":23,"value":716},">(",{"type":17,"tag":199,"props":718,"children":719},{"style":261},[720],{"type":23,"value":147},{"type":17,"tag":199,"props":722,"children":723},{"style":217},[724],{"type":23,"value":368},{"type":17,"tag":199,"props":726,"children":727},{"style":261},[728],{"type":23,"value":154},{"type":17,"tag":199,"props":730,"children":731},{"style":217},[732],{"type":23,"value":377},{"type":17,"tag":25,"props":734,"children":735},{},[736],{"type":23,"value":737},"To change the color of a pixel, initialize the struct with the desired color values. The following example will set the first pixel to red:",{"type":17,"tag":189,"props":739,"children":741},{"className":191,"code":740,"filename":333,"language":193,"meta":7,"style":7},"var screen = create_pointer\u003CPixel>(53870, 1)\n\nscreen[0] = { b: 0, g: 0, r: 31 }\n\nstruct Pixel {\n    int b : 5\n    int g : 5\n    int r : 5\n}\n",[742],{"type":17,"tag":124,"props":743,"children":744},{"__ignoreMap":7},[745,792,799,851,858,873,893,913,933],{"type":17,"tag":199,"props":746,"children":747},{"class":201,"line":202},[748,752,756,760,764,768,772,776,780,784,788],{"type":17,"tag":199,"props":749,"children":750},{"style":206},[751],{"type":23,"value":345},{"type":17,"tag":199,"props":753,"children":754},{"style":217},[755],{"type":23,"value":350},{"type":17,"tag":199,"props":757,"children":758},{"style":206},[759],{"type":23,"value":253},{"type":17,"tag":199,"props":761,"children":762},{"style":590},[763],{"type":23,"value":701},{"type":17,"tag":199,"props":765,"children":766},{"style":217},[767],{"type":23,"value":706},{"type":17,"tag":199,"props":769,"children":770},{"style":590},[771],{"type":23,"value":711},{"type":17,"tag":199,"props":773,"children":774},{"style":217},[775],{"type":23,"value":716},{"type":17,"tag":199,"props":777,"children":778},{"style":261},[779],{"type":23,"value":147},{"type":17,"tag":199,"props":781,"children":782},{"style":217},[783],{"type":23,"value":368},{"type":17,"tag":199,"props":785,"children":786},{"style":261},[787],{"type":23,"value":154},{"type":17,"tag":199,"props":789,"children":790},{"style":217},[791],{"type":23,"value":377},{"type":17,"tag":199,"props":793,"children":794},{"class":201,"line":36},[795],{"type":17,"tag":199,"props":796,"children":797},{"emptyLinePlaceholder":56},[798],{"type":23,"value":385},{"type":17,"tag":199,"props":800,"children":801},{"class":201,"line":388},[802,806,810,814,818,823,827,832,836,841,846],{"type":17,"tag":199,"props":803,"children":804},{"style":217},[805],{"type":23,"value":394},{"type":17,"tag":199,"props":807,"children":808},{"style":261},[809],{"type":23,"value":399},{"type":17,"tag":199,"props":811,"children":812},{"style":217},[813],{"type":23,"value":404},{"type":17,"tag":199,"props":815,"children":816},{"style":206},[817],{"type":23,"value":253},{"type":17,"tag":199,"props":819,"children":820},{"style":217},[821],{"type":23,"value":822}," { b: ",{"type":17,"tag":199,"props":824,"children":825},{"style":261},[826],{"type":23,"value":399},{"type":17,"tag":199,"props":828,"children":829},{"style":217},[830],{"type":23,"value":831},", g: ",{"type":17,"tag":199,"props":833,"children":834},{"style":261},[835],{"type":23,"value":399},{"type":17,"tag":199,"props":837,"children":838},{"style":217},[839],{"type":23,"value":840},", r: ",{"type":17,"tag":199,"props":842,"children":843},{"style":261},[844],{"type":23,"value":845},"31",{"type":17,"tag":199,"props":847,"children":848},{"style":217},[849],{"type":23,"value":850}," }\n",{"type":17,"tag":199,"props":852,"children":853},{"class":201,"line":440},[854],{"type":17,"tag":199,"props":855,"children":856},{"emptyLinePlaceholder":56},[857],{"type":23,"value":385},{"type":17,"tag":199,"props":859,"children":860},{"class":201,"line":448},[861,865,869],{"type":17,"tag":199,"props":862,"children":863},{"style":206},[864],{"type":23,"value":587},{"type":17,"tag":199,"props":866,"children":867},{"style":590},[868],{"type":23,"value":593},{"type":17,"tag":199,"props":870,"children":871},{"style":217},[872],{"type":23,"value":598},{"type":17,"tag":199,"props":874,"children":876},{"class":201,"line":875},6,[877,881,885,889],{"type":17,"tag":199,"props":878,"children":879},{"style":206},[880],{"type":23,"value":606},{"type":17,"tag":199,"props":882,"children":883},{"style":217},[884],{"type":23,"value":611},{"type":17,"tag":199,"props":886,"children":887},{"style":206},[888],{"type":23,"value":616},{"type":17,"tag":199,"props":890,"children":891},{"style":261},[892],{"type":23,"value":621},{"type":17,"tag":199,"props":894,"children":896},{"class":201,"line":895},7,[897,901,905,909],{"type":17,"tag":199,"props":898,"children":899},{"style":206},[900],{"type":23,"value":606},{"type":17,"tag":199,"props":902,"children":903},{"style":217},[904],{"type":23,"value":633},{"type":17,"tag":199,"props":906,"children":907},{"style":206},[908],{"type":23,"value":616},{"type":17,"tag":199,"props":910,"children":911},{"style":261},[912],{"type":23,"value":621},{"type":17,"tag":199,"props":914,"children":916},{"class":201,"line":915},8,[917,921,925,929],{"type":17,"tag":199,"props":918,"children":919},{"style":206},[920],{"type":23,"value":606},{"type":17,"tag":199,"props":922,"children":923},{"style":217},[924],{"type":23,"value":653},{"type":17,"tag":199,"props":926,"children":927},{"style":206},[928],{"type":23,"value":616},{"type":17,"tag":199,"props":930,"children":931},{"style":261},[932],{"type":23,"value":621},{"type":17,"tag":199,"props":934,"children":936},{"class":201,"line":935},9,[937],{"type":17,"tag":199,"props":938,"children":939},{"style":217},[940],{"type":23,"value":669},{"type":17,"tag":942,"props":943,"children":944},"style",{},[945],{"type":23,"value":946},"html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":36,"depth":36,"links":948},[949],{"id":167,"depth":36,"text":170,"children":950},[951,952],{"id":179,"depth":388,"text":182},{"id":564,"depth":388,"text":567},"content:docs:4.peripherals:1.screen.md","docs/4.peripherals/1.screen.md",1698440057327]