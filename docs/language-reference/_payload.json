[{"data":1,"prerenderedAt":3123},["Reactive",2],{"content-query-EYabfiwUqJ":3,"content-navigation-8C37fagqQL":42,"content-navigation-Lhv2WviZJC":94,"content-query-x47RLZfWto":103,"content-query-PDtwmMvGbW":1384,"content-query-5fE3YeJItF":2552},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"navigation":12,"body":13,"_type":37,"_id":38,"_source":39,"_file":40,"_extension":41},"/docs/language-reference","docs",false,"","Language reference","All the details about the language.",[11],"index",{"sidebar":6},{"type":14,"children":15,"toc":34},"root",[16,24,30],{"type":17,"tag":18,"props":19,"children":21},"element","h1",{"id":20},"language-reference",[22],{"type":23,"value":8},"text",{"type":17,"tag":25,"props":26,"children":27},"p",{},[28],{"type":23,"value":29},"This section contains all the details about the Yabal language.",{"type":17,"tag":31,"props":32,"children":33},"related",{":tags":20},[],{"title":7,"searchDepth":35,"depth":35,"links":36},2,[],"markdown","content:docs:3.language-reference:index.md","content","docs/3.language-reference/index.md","md",[43],{"title":44,"_path":45,"children":46,"root":55},"Documentation","/docs",[47,48,63,75,83],{"title":44,"_path":45},{"title":49,"_path":50,"children":51,"sidebar":6},"Getting started","/docs/get-started",[52,56,59,62],{"title":53,"_path":54,"sidebar":55},"Downloads","/docs/get-started/downloads",true,{"title":57,"_path":58,"sidebar":55},"Emulator","/docs/get-started/emulator",{"title":60,"_path":61,"sidebar":55},"Basics of Yabal","/docs/get-started/basics-of-yabal",{"title":49,"_path":50,"sidebar":6},{"title":8,"_path":4,"children":64,"sidebar":6},[65,68,71,74],{"title":66,"_path":67,"sidebar":55},"Structs","/docs/language-reference/structs",{"title":69,"_path":70,"sidebar":55},"Function pointers","/docs/language-reference/function-pointer",{"title":72,"_path":73,"sidebar":55},"Stack allocations","/docs/language-reference/stack-allocations",{"title":8,"_path":4,"sidebar":6},{"title":76,"_path":77,"children":78,"sidebar":6},"Perhipherals","/docs/peripherals",[79,82],{"title":80,"_path":81,"sidebar":55},"Screen","/docs/peripherals/screen",{"title":76,"_path":77,"sidebar":6},{"title":84,"_path":85,"children":86,"sidebar":6},"Advanced topics","/docs/advanced-topics",[87,90,93],{"title":88,"_path":89,"sidebar":55},"Assembly mode","/docs/advanced-topics/assembly-mode",{"title":91,"_path":92,"sidebar":55},"Optimizing","/docs/advanced-topics/optimizing",{"title":84,"_path":85,"sidebar":6},[95],{"title":44,"_path":45,"children":96,"root":55},[97],{"title":98,"_path":4,"children":99},"Language Reference",[100,101,102],{"title":66,"_path":67,"sidebar":55},{"title":69,"_path":70,"sidebar":55},{"title":72,"_path":73,"sidebar":55},{"_path":67,"_dir":20,"_draft":6,"_partial":6,"_locale":7,"title":66,"description":104,"tags":105,"navigation":106,"body":107,"_type":37,"_id":1382,"_source":39,"_file":1383,"_extension":41},"Learn more about structs.",[20],{"sidebar":55},{"type":14,"children":108,"toc":1374},[109,114,119,189,196,201,334,355,362,367,474,479,591,596,716,722,741,854,859,972,978,990,1121,1127,1132,1368],{"type":17,"tag":18,"props":110,"children":112},{"id":111},"structs",[113],{"type":23,"value":66},{"type":17,"tag":25,"props":115,"children":116},{},[117],{"type":23,"value":118},"A struct is a data structure that can contain multiple fields. A struct can be used to group related data together. For example, the following struct can be used to represent a 2D point:",{"type":17,"tag":120,"props":121,"children":125},"pre",{"className":122,"code":123,"language":124,"meta":7,"style":7},"language-yabal shiki shiki-themes github-light github-dark","struct Point {\n    int x;\n    int y;\n}\n","yabal",[126],{"type":17,"tag":127,"props":128,"children":129},"code",{"__ignoreMap":7},[130,154,167,180],{"type":17,"tag":131,"props":132,"children":135},"span",{"class":133,"line":134},"line",1,[136,142,148],{"type":17,"tag":131,"props":137,"children":139},{"style":138},"--shiki-default:#D73A49;--shiki-dark:#F97583",[140],{"type":23,"value":141},"struct",{"type":17,"tag":131,"props":143,"children":145},{"style":144},"--shiki-default:#6F42C1;--shiki-dark:#B392F0",[146],{"type":23,"value":147}," Point",{"type":17,"tag":131,"props":149,"children":151},{"style":150},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[152],{"type":23,"value":153}," {\n",{"type":17,"tag":131,"props":155,"children":156},{"class":133,"line":35},[157,162],{"type":17,"tag":131,"props":158,"children":159},{"style":138},[160],{"type":23,"value":161},"    int",{"type":17,"tag":131,"props":163,"children":164},{"style":150},[165],{"type":23,"value":166}," x;\n",{"type":17,"tag":131,"props":168,"children":170},{"class":133,"line":169},3,[171,175],{"type":17,"tag":131,"props":172,"children":173},{"style":138},[174],{"type":23,"value":161},{"type":17,"tag":131,"props":176,"children":177},{"style":150},[178],{"type":23,"value":179}," y;\n",{"type":17,"tag":131,"props":181,"children":183},{"class":133,"line":182},4,[184],{"type":17,"tag":131,"props":185,"children":186},{"style":150},[187],{"type":23,"value":188},"}\n",{"type":17,"tag":190,"props":191,"children":193},"h2",{"id":192},"bit-fields",[194],{"type":23,"value":195},"Bit-fields",{"type":17,"tag":25,"props":197,"children":198},{},[199],{"type":23,"value":200},"It is also possible to declare a field with a bit-width. This is useful if you want to read data from a peripheral, such as a mouse. For example, the following struct can be used to read the position of a mouse, and the state of its left and right buttons:",{"type":17,"tag":120,"props":202,"children":204},{"className":122,"code":203,"language":124,"meta":7,"style":7},"struct MouseInput {\n    int y : 7;\n    int x : 7;\n    int left : 1;\n    int right : 1;\n}\n",[205],{"type":17,"tag":127,"props":206,"children":207},{"__ignoreMap":7},[208,224,252,276,301,326],{"type":17,"tag":131,"props":209,"children":210},{"class":133,"line":134},[211,215,220],{"type":17,"tag":131,"props":212,"children":213},{"style":138},[214],{"type":23,"value":141},{"type":17,"tag":131,"props":216,"children":217},{"style":144},[218],{"type":23,"value":219}," MouseInput",{"type":17,"tag":131,"props":221,"children":222},{"style":150},[223],{"type":23,"value":153},{"type":17,"tag":131,"props":225,"children":226},{"class":133,"line":35},[227,231,236,241,247],{"type":17,"tag":131,"props":228,"children":229},{"style":138},[230],{"type":23,"value":161},{"type":17,"tag":131,"props":232,"children":233},{"style":150},[234],{"type":23,"value":235}," y ",{"type":17,"tag":131,"props":237,"children":238},{"style":138},[239],{"type":23,"value":240},":",{"type":17,"tag":131,"props":242,"children":244},{"style":243},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[245],{"type":23,"value":246}," 7",{"type":17,"tag":131,"props":248,"children":249},{"style":150},[250],{"type":23,"value":251},";\n",{"type":17,"tag":131,"props":253,"children":254},{"class":133,"line":169},[255,259,264,268,272],{"type":17,"tag":131,"props":256,"children":257},{"style":138},[258],{"type":23,"value":161},{"type":17,"tag":131,"props":260,"children":261},{"style":150},[262],{"type":23,"value":263}," x ",{"type":17,"tag":131,"props":265,"children":266},{"style":138},[267],{"type":23,"value":240},{"type":17,"tag":131,"props":269,"children":270},{"style":243},[271],{"type":23,"value":246},{"type":17,"tag":131,"props":273,"children":274},{"style":150},[275],{"type":23,"value":251},{"type":17,"tag":131,"props":277,"children":278},{"class":133,"line":182},[279,283,288,292,297],{"type":17,"tag":131,"props":280,"children":281},{"style":138},[282],{"type":23,"value":161},{"type":17,"tag":131,"props":284,"children":285},{"style":150},[286],{"type":23,"value":287}," left ",{"type":17,"tag":131,"props":289,"children":290},{"style":138},[291],{"type":23,"value":240},{"type":17,"tag":131,"props":293,"children":294},{"style":243},[295],{"type":23,"value":296}," 1",{"type":17,"tag":131,"props":298,"children":299},{"style":150},[300],{"type":23,"value":251},{"type":17,"tag":131,"props":302,"children":304},{"class":133,"line":303},5,[305,309,314,318,322],{"type":17,"tag":131,"props":306,"children":307},{"style":138},[308],{"type":23,"value":161},{"type":17,"tag":131,"props":310,"children":311},{"style":150},[312],{"type":23,"value":313}," right ",{"type":17,"tag":131,"props":315,"children":316},{"style":138},[317],{"type":23,"value":240},{"type":17,"tag":131,"props":319,"children":320},{"style":243},[321],{"type":23,"value":296},{"type":17,"tag":131,"props":323,"children":324},{"style":150},[325],{"type":23,"value":251},{"type":17,"tag":131,"props":327,"children":329},{"class":133,"line":328},6,[330],{"type":17,"tag":131,"props":331,"children":332},{"style":150},[333],{"type":23,"value":188},{"type":17,"tag":335,"props":336,"children":337},"warning",{},[338],{"type":17,"tag":25,"props":339,"children":340},{},[341,347,349,353],{"type":17,"tag":342,"props":343,"children":344},"strong",{},[345],{"type":23,"value":346},"Note:",{"type":23,"value":348}," When declaring a field with a bit-width, the compiler will automatically add bit-wise operations to get and set the value of the field. This means that the field will be slower to access than a normal field.",{"type":17,"tag":350,"props":351,"children":352},"br",{},[],{"type":23,"value":354},"\nIt is not recommended to use bit-fields unless you are reading data from a peripheral.",{"type":17,"tag":356,"props":357,"children":359},"h3",{"id":358},"bit-offsets",[360],{"type":23,"value":361},"Bit offsets",{"type":17,"tag":25,"props":363,"children":364},{},[365],{"type":23,"value":366},"Bit-fields are aligned by 16 bits. When declaring a bit-field, the compiler will automatically calculate the offset of the field. For example:",{"type":17,"tag":120,"props":368,"children":370},{"className":122,"code":369,"language":124,"meta":7,"style":7},"struct Example {\n    int a : 8 // Offset 0 with 8 bits\n    int b : 8 // Offset 8 with 8 bits\n    int c : 8 // Offset 16 with 8 bits\n}\n",[371],{"type":17,"tag":127,"props":372,"children":373},{"__ignoreMap":7},[374,390,417,442,467],{"type":17,"tag":131,"props":375,"children":376},{"class":133,"line":134},[377,381,386],{"type":17,"tag":131,"props":378,"children":379},{"style":138},[380],{"type":23,"value":141},{"type":17,"tag":131,"props":382,"children":383},{"style":144},[384],{"type":23,"value":385}," Example",{"type":17,"tag":131,"props":387,"children":388},{"style":150},[389],{"type":23,"value":153},{"type":17,"tag":131,"props":391,"children":392},{"class":133,"line":35},[393,397,402,406,411],{"type":17,"tag":131,"props":394,"children":395},{"style":138},[396],{"type":23,"value":161},{"type":17,"tag":131,"props":398,"children":399},{"style":150},[400],{"type":23,"value":401}," a ",{"type":17,"tag":131,"props":403,"children":404},{"style":138},[405],{"type":23,"value":240},{"type":17,"tag":131,"props":407,"children":408},{"style":243},[409],{"type":23,"value":410}," 8",{"type":17,"tag":131,"props":412,"children":414},{"style":413},"--shiki-default:#6A737D;--shiki-dark:#6A737D",[415],{"type":23,"value":416}," // Offset 0 with 8 bits\n",{"type":17,"tag":131,"props":418,"children":419},{"class":133,"line":169},[420,424,429,433,437],{"type":17,"tag":131,"props":421,"children":422},{"style":138},[423],{"type":23,"value":161},{"type":17,"tag":131,"props":425,"children":426},{"style":150},[427],{"type":23,"value":428}," b ",{"type":17,"tag":131,"props":430,"children":431},{"style":138},[432],{"type":23,"value":240},{"type":17,"tag":131,"props":434,"children":435},{"style":243},[436],{"type":23,"value":410},{"type":17,"tag":131,"props":438,"children":439},{"style":413},[440],{"type":23,"value":441}," // Offset 8 with 8 bits\n",{"type":17,"tag":131,"props":443,"children":444},{"class":133,"line":182},[445,449,454,458,462],{"type":17,"tag":131,"props":446,"children":447},{"style":138},[448],{"type":23,"value":161},{"type":17,"tag":131,"props":450,"children":451},{"style":150},[452],{"type":23,"value":453}," c ",{"type":17,"tag":131,"props":455,"children":456},{"style":138},[457],{"type":23,"value":240},{"type":17,"tag":131,"props":459,"children":460},{"style":243},[461],{"type":23,"value":410},{"type":17,"tag":131,"props":463,"children":464},{"style":413},[465],{"type":23,"value":466}," // Offset 16 with 8 bits\n",{"type":17,"tag":131,"props":468,"children":469},{"class":133,"line":303},[470],{"type":17,"tag":131,"props":471,"children":472},{"style":150},[473],{"type":23,"value":188},{"type":17,"tag":25,"props":475,"children":476},{},[477],{"type":23,"value":478},"The bit-fields must be aligned by 16 bits. For example, the following struct is invalid because the last field is over the 16 bit boundary:",{"type":17,"tag":120,"props":480,"children":483},{"className":122,"code":481,"highlights":482,"language":124,"meta":7,"style":7},"// Note: the following example will not compile\nstruct InvalidExample {\n    int a : 7 // This is valid, offset 0 with 7 bits\n    int b : 7 // This is valid, offset 7 with 7 bits\n    int c : 7 // This is invalid, offset 14 with 7 bits: [14 + 7 =] 21 > 16\n}\n",[303],[484],{"type":17,"tag":127,"props":485,"children":486},{"__ignoreMap":7},[487,495,511,535,559,584],{"type":17,"tag":131,"props":488,"children":489},{"class":133,"line":134},[490],{"type":17,"tag":131,"props":491,"children":492},{"style":413},[493],{"type":23,"value":494},"// Note: the following example will not compile\n",{"type":17,"tag":131,"props":496,"children":497},{"class":133,"line":35},[498,502,507],{"type":17,"tag":131,"props":499,"children":500},{"style":138},[501],{"type":23,"value":141},{"type":17,"tag":131,"props":503,"children":504},{"style":144},[505],{"type":23,"value":506}," InvalidExample",{"type":17,"tag":131,"props":508,"children":509},{"style":150},[510],{"type":23,"value":153},{"type":17,"tag":131,"props":512,"children":513},{"class":133,"line":169},[514,518,522,526,530],{"type":17,"tag":131,"props":515,"children":516},{"style":138},[517],{"type":23,"value":161},{"type":17,"tag":131,"props":519,"children":520},{"style":150},[521],{"type":23,"value":401},{"type":17,"tag":131,"props":523,"children":524},{"style":138},[525],{"type":23,"value":240},{"type":17,"tag":131,"props":527,"children":528},{"style":243},[529],{"type":23,"value":246},{"type":17,"tag":131,"props":531,"children":532},{"style":413},[533],{"type":23,"value":534}," // This is valid, offset 0 with 7 bits\n",{"type":17,"tag":131,"props":536,"children":537},{"class":133,"line":182},[538,542,546,550,554],{"type":17,"tag":131,"props":539,"children":540},{"style":138},[541],{"type":23,"value":161},{"type":17,"tag":131,"props":543,"children":544},{"style":150},[545],{"type":23,"value":428},{"type":17,"tag":131,"props":547,"children":548},{"style":138},[549],{"type":23,"value":240},{"type":17,"tag":131,"props":551,"children":552},{"style":243},[553],{"type":23,"value":246},{"type":17,"tag":131,"props":555,"children":556},{"style":413},[557],{"type":23,"value":558}," // This is valid, offset 7 with 7 bits\n",{"type":17,"tag":131,"props":560,"children":562},{"class":561,"line":303},"line highlight",[563,567,571,575,579],{"type":17,"tag":131,"props":564,"children":565},{"style":138},[566],{"type":23,"value":161},{"type":17,"tag":131,"props":568,"children":569},{"style":150},[570],{"type":23,"value":453},{"type":17,"tag":131,"props":572,"children":573},{"style":138},[574],{"type":23,"value":240},{"type":17,"tag":131,"props":576,"children":577},{"style":243},[578],{"type":23,"value":246},{"type":17,"tag":131,"props":580,"children":581},{"style":413},[582],{"type":23,"value":583}," // This is invalid, offset 14 with 7 bits: [14 + 7 =] 21 > 16\n",{"type":17,"tag":131,"props":585,"children":586},{"class":133,"line":328},[587],{"type":17,"tag":131,"props":588,"children":589},{"style":150},[590],{"type":23,"value":188},{"type":17,"tag":25,"props":592,"children":593},{},[594],{"type":23,"value":595},"When a normal field is introduced, the offset is reset to the 16 bit boundary. For example:",{"type":17,"tag":120,"props":597,"children":600},{"className":122,"code":598,"highlights":599,"language":124,"meta":7,"style":7},"struct Example {\n    int a : 7   //          Offset 0,    7 bits\n    int b : 7   //          Offset 7,    7 bits\n    int c       // Reset,   Offset 16,   16 bits\n    int d : 7   //          Offset 32,   7 bits\n}\n",[182],[601],{"type":17,"tag":127,"props":602,"children":603},{"__ignoreMap":7},[604,619,643,667,684,709],{"type":17,"tag":131,"props":605,"children":606},{"class":133,"line":134},[607,611,615],{"type":17,"tag":131,"props":608,"children":609},{"style":138},[610],{"type":23,"value":141},{"type":17,"tag":131,"props":612,"children":613},{"style":144},[614],{"type":23,"value":385},{"type":17,"tag":131,"props":616,"children":617},{"style":150},[618],{"type":23,"value":153},{"type":17,"tag":131,"props":620,"children":621},{"class":133,"line":35},[622,626,630,634,638],{"type":17,"tag":131,"props":623,"children":624},{"style":138},[625],{"type":23,"value":161},{"type":17,"tag":131,"props":627,"children":628},{"style":150},[629],{"type":23,"value":401},{"type":17,"tag":131,"props":631,"children":632},{"style":138},[633],{"type":23,"value":240},{"type":17,"tag":131,"props":635,"children":636},{"style":243},[637],{"type":23,"value":246},{"type":17,"tag":131,"props":639,"children":640},{"style":413},[641],{"type":23,"value":642},"   //          Offset 0,    7 bits\n",{"type":17,"tag":131,"props":644,"children":645},{"class":133,"line":169},[646,650,654,658,662],{"type":17,"tag":131,"props":647,"children":648},{"style":138},[649],{"type":23,"value":161},{"type":17,"tag":131,"props":651,"children":652},{"style":150},[653],{"type":23,"value":428},{"type":17,"tag":131,"props":655,"children":656},{"style":138},[657],{"type":23,"value":240},{"type":17,"tag":131,"props":659,"children":660},{"style":243},[661],{"type":23,"value":246},{"type":17,"tag":131,"props":663,"children":664},{"style":413},[665],{"type":23,"value":666},"   //          Offset 7,    7 bits\n",{"type":17,"tag":131,"props":668,"children":669},{"class":561,"line":182},[670,674,679],{"type":17,"tag":131,"props":671,"children":672},{"style":138},[673],{"type":23,"value":161},{"type":17,"tag":131,"props":675,"children":676},{"style":150},[677],{"type":23,"value":678}," c       ",{"type":17,"tag":131,"props":680,"children":681},{"style":413},[682],{"type":23,"value":683},"// Reset,   Offset 16,   16 bits\n",{"type":17,"tag":131,"props":685,"children":686},{"class":133,"line":303},[687,691,696,700,704],{"type":17,"tag":131,"props":688,"children":689},{"style":138},[690],{"type":23,"value":161},{"type":17,"tag":131,"props":692,"children":693},{"style":150},[694],{"type":23,"value":695}," d ",{"type":17,"tag":131,"props":697,"children":698},{"style":138},[699],{"type":23,"value":240},{"type":17,"tag":131,"props":701,"children":702},{"style":243},[703],{"type":23,"value":246},{"type":17,"tag":131,"props":705,"children":706},{"style":413},[707],{"type":23,"value":708},"   //          Offset 32,   7 bits\n",{"type":17,"tag":131,"props":710,"children":711},{"class":133,"line":328},[712],{"type":17,"tag":131,"props":713,"children":714},{"style":150},[715],{"type":23,"value":188},{"type":17,"tag":190,"props":717,"children":719},{"id":718},"initializing-structs",[720],{"type":23,"value":721},"Initializing structs",{"type":17,"tag":25,"props":723,"children":724},{},[725,727,732,734,739],{"type":23,"value":726},"Structs can be initialized by using curly braces (",{"type":17,"tag":127,"props":728,"children":729},{"className":7},[730],{"type":23,"value":731},"{",{"type":23,"value":733}," and ",{"type":17,"tag":127,"props":735,"children":736},{"className":7},[737],{"type":23,"value":738},"}",{"type":23,"value":740},") to specify the values of the fields. For example:",{"type":17,"tag":120,"props":742,"children":747},{"className":122,"code":743,"filename":744,"highlights":745,"language":124,"meta":7,"style":7},"struct Point {\n    int x;\n    int y;\n}\n\n// Create a point with the x value 1 and the y value 2\nPoint point = { 1, 2 }\n","run",[746],7,[748],{"type":17,"tag":127,"props":749,"children":750},{"__ignoreMap":7},[751,766,777,788,795,803,811],{"type":17,"tag":131,"props":752,"children":753},{"class":133,"line":134},[754,758,762],{"type":17,"tag":131,"props":755,"children":756},{"style":138},[757],{"type":23,"value":141},{"type":17,"tag":131,"props":759,"children":760},{"style":144},[761],{"type":23,"value":147},{"type":17,"tag":131,"props":763,"children":764},{"style":150},[765],{"type":23,"value":153},{"type":17,"tag":131,"props":767,"children":768},{"class":133,"line":35},[769,773],{"type":17,"tag":131,"props":770,"children":771},{"style":138},[772],{"type":23,"value":161},{"type":17,"tag":131,"props":774,"children":775},{"style":150},[776],{"type":23,"value":166},{"type":17,"tag":131,"props":778,"children":779},{"class":133,"line":169},[780,784],{"type":17,"tag":131,"props":781,"children":782},{"style":138},[783],{"type":23,"value":161},{"type":17,"tag":131,"props":785,"children":786},{"style":150},[787],{"type":23,"value":179},{"type":17,"tag":131,"props":789,"children":790},{"class":133,"line":182},[791],{"type":17,"tag":131,"props":792,"children":793},{"style":150},[794],{"type":23,"value":188},{"type":17,"tag":131,"props":796,"children":797},{"class":133,"line":303},[798],{"type":17,"tag":131,"props":799,"children":800},{"emptyLinePlaceholder":55},[801],{"type":23,"value":802},"\n",{"type":17,"tag":131,"props":804,"children":805},{"class":133,"line":328},[806],{"type":17,"tag":131,"props":807,"children":808},{"style":413},[809],{"type":23,"value":810},"// Create a point with the x value 1 and the y value 2\n",{"type":17,"tag":131,"props":812,"children":813},{"class":561,"line":746},[814,819,824,829,834,839,844,849],{"type":17,"tag":131,"props":815,"children":816},{"style":144},[817],{"type":23,"value":818},"Point",{"type":17,"tag":131,"props":820,"children":821},{"style":150},[822],{"type":23,"value":823}," point ",{"type":17,"tag":131,"props":825,"children":826},{"style":138},[827],{"type":23,"value":828},"=",{"type":17,"tag":131,"props":830,"children":831},{"style":150},[832],{"type":23,"value":833}," { ",{"type":17,"tag":131,"props":835,"children":836},{"style":243},[837],{"type":23,"value":838},"1",{"type":17,"tag":131,"props":840,"children":841},{"style":150},[842],{"type":23,"value":843},", ",{"type":17,"tag":131,"props":845,"children":846},{"style":243},[847],{"type":23,"value":848},"2",{"type":17,"tag":131,"props":850,"children":851},{"style":150},[852],{"type":23,"value":853}," }\n",{"type":17,"tag":25,"props":855,"children":856},{},[857],{"type":23,"value":858},"It is also possible to initialize structs by specifying the name of the fields. For example:",{"type":17,"tag":120,"props":860,"children":864},{"className":122,"code":861,"filename":744,"highlights":862,"language":124,"meta":7,"style":7},"struct Point {\n    int x;\n    int y;\n}\n\n// Create a point with the y value 2 and the x value 1\n// Note: the order of the fields does not matter when initializing a struct\nPoint point = { y: 2, x: 1 }\n",[863],8,[865],{"type":17,"tag":127,"props":866,"children":867},{"__ignoreMap":7},[868,883,894,905,912,919,927,935],{"type":17,"tag":131,"props":869,"children":870},{"class":133,"line":134},[871,875,879],{"type":17,"tag":131,"props":872,"children":873},{"style":138},[874],{"type":23,"value":141},{"type":17,"tag":131,"props":876,"children":877},{"style":144},[878],{"type":23,"value":147},{"type":17,"tag":131,"props":880,"children":881},{"style":150},[882],{"type":23,"value":153},{"type":17,"tag":131,"props":884,"children":885},{"class":133,"line":35},[886,890],{"type":17,"tag":131,"props":887,"children":888},{"style":138},[889],{"type":23,"value":161},{"type":17,"tag":131,"props":891,"children":892},{"style":150},[893],{"type":23,"value":166},{"type":17,"tag":131,"props":895,"children":896},{"class":133,"line":169},[897,901],{"type":17,"tag":131,"props":898,"children":899},{"style":138},[900],{"type":23,"value":161},{"type":17,"tag":131,"props":902,"children":903},{"style":150},[904],{"type":23,"value":179},{"type":17,"tag":131,"props":906,"children":907},{"class":133,"line":182},[908],{"type":17,"tag":131,"props":909,"children":910},{"style":150},[911],{"type":23,"value":188},{"type":17,"tag":131,"props":913,"children":914},{"class":133,"line":303},[915],{"type":17,"tag":131,"props":916,"children":917},{"emptyLinePlaceholder":55},[918],{"type":23,"value":802},{"type":17,"tag":131,"props":920,"children":921},{"class":133,"line":328},[922],{"type":17,"tag":131,"props":923,"children":924},{"style":413},[925],{"type":23,"value":926},"// Create a point with the y value 2 and the x value 1\n",{"type":17,"tag":131,"props":928,"children":929},{"class":133,"line":746},[930],{"type":17,"tag":131,"props":931,"children":932},{"style":413},[933],{"type":23,"value":934},"// Note: the order of the fields does not matter when initializing a struct\n",{"type":17,"tag":131,"props":936,"children":937},{"class":561,"line":863},[938,942,946,950,955,959,964,968],{"type":17,"tag":131,"props":939,"children":940},{"style":144},[941],{"type":23,"value":818},{"type":17,"tag":131,"props":943,"children":944},{"style":150},[945],{"type":23,"value":823},{"type":17,"tag":131,"props":947,"children":948},{"style":138},[949],{"type":23,"value":828},{"type":17,"tag":131,"props":951,"children":952},{"style":150},[953],{"type":23,"value":954}," { y: ",{"type":17,"tag":131,"props":956,"children":957},{"style":243},[958],{"type":23,"value":848},{"type":17,"tag":131,"props":960,"children":961},{"style":150},[962],{"type":23,"value":963},", x: ",{"type":17,"tag":131,"props":965,"children":966},{"style":243},[967],{"type":23,"value":838},{"type":17,"tag":131,"props":969,"children":970},{"style":150},[971],{"type":23,"value":853},{"type":17,"tag":190,"props":973,"children":975},{"id":974},"accessing-fields",[976],{"type":23,"value":977},"Accessing fields",{"type":17,"tag":25,"props":979,"children":980},{},[981,983,988],{"type":23,"value":982},"The fields of a struct can be accessed by using the dot (",{"type":17,"tag":127,"props":984,"children":985},{"className":7},[986],{"type":23,"value":987},".",{"type":23,"value":989},") operator. For example:",{"type":17,"tag":120,"props":991,"children":995},{"className":122,"code":992,"filename":744,"highlights":993,"language":124,"meta":7,"style":7},"struct Point {\n    int x;\n    int y;\n}\n\nPoint point = { 1, 2 }\n\n// Access the x field of the point\nint x = point.x\n",[994],9,[996],{"type":17,"tag":127,"props":997,"children":998},{"__ignoreMap":7},[999,1014,1025,1036,1043,1050,1085,1092,1100],{"type":17,"tag":131,"props":1000,"children":1001},{"class":133,"line":134},[1002,1006,1010],{"type":17,"tag":131,"props":1003,"children":1004},{"style":138},[1005],{"type":23,"value":141},{"type":17,"tag":131,"props":1007,"children":1008},{"style":144},[1009],{"type":23,"value":147},{"type":17,"tag":131,"props":1011,"children":1012},{"style":150},[1013],{"type":23,"value":153},{"type":17,"tag":131,"props":1015,"children":1016},{"class":133,"line":35},[1017,1021],{"type":17,"tag":131,"props":1018,"children":1019},{"style":138},[1020],{"type":23,"value":161},{"type":17,"tag":131,"props":1022,"children":1023},{"style":150},[1024],{"type":23,"value":166},{"type":17,"tag":131,"props":1026,"children":1027},{"class":133,"line":169},[1028,1032],{"type":17,"tag":131,"props":1029,"children":1030},{"style":138},[1031],{"type":23,"value":161},{"type":17,"tag":131,"props":1033,"children":1034},{"style":150},[1035],{"type":23,"value":179},{"type":17,"tag":131,"props":1037,"children":1038},{"class":133,"line":182},[1039],{"type":17,"tag":131,"props":1040,"children":1041},{"style":150},[1042],{"type":23,"value":188},{"type":17,"tag":131,"props":1044,"children":1045},{"class":133,"line":303},[1046],{"type":17,"tag":131,"props":1047,"children":1048},{"emptyLinePlaceholder":55},[1049],{"type":23,"value":802},{"type":17,"tag":131,"props":1051,"children":1052},{"class":133,"line":328},[1053,1057,1061,1065,1069,1073,1077,1081],{"type":17,"tag":131,"props":1054,"children":1055},{"style":144},[1056],{"type":23,"value":818},{"type":17,"tag":131,"props":1058,"children":1059},{"style":150},[1060],{"type":23,"value":823},{"type":17,"tag":131,"props":1062,"children":1063},{"style":138},[1064],{"type":23,"value":828},{"type":17,"tag":131,"props":1066,"children":1067},{"style":150},[1068],{"type":23,"value":833},{"type":17,"tag":131,"props":1070,"children":1071},{"style":243},[1072],{"type":23,"value":838},{"type":17,"tag":131,"props":1074,"children":1075},{"style":150},[1076],{"type":23,"value":843},{"type":17,"tag":131,"props":1078,"children":1079},{"style":243},[1080],{"type":23,"value":848},{"type":17,"tag":131,"props":1082,"children":1083},{"style":150},[1084],{"type":23,"value":853},{"type":17,"tag":131,"props":1086,"children":1087},{"class":133,"line":746},[1088],{"type":17,"tag":131,"props":1089,"children":1090},{"emptyLinePlaceholder":55},[1091],{"type":23,"value":802},{"type":17,"tag":131,"props":1093,"children":1094},{"class":133,"line":863},[1095],{"type":17,"tag":131,"props":1096,"children":1097},{"style":413},[1098],{"type":23,"value":1099},"// Access the x field of the point\n",{"type":17,"tag":131,"props":1101,"children":1102},{"class":561,"line":994},[1103,1108,1112,1116],{"type":17,"tag":131,"props":1104,"children":1105},{"style":138},[1106],{"type":23,"value":1107},"int",{"type":17,"tag":131,"props":1109,"children":1110},{"style":150},[1111],{"type":23,"value":263},{"type":17,"tag":131,"props":1113,"children":1114},{"style":138},[1115],{"type":23,"value":828},{"type":17,"tag":131,"props":1117,"children":1118},{"style":150},[1119],{"type":23,"value":1120}," point.x\n",{"type":17,"tag":190,"props":1122,"children":1124},{"id":1123},"nested-structs",[1125],{"type":23,"value":1126},"Nested structs",{"type":17,"tag":25,"props":1128,"children":1129},{},[1130],{"type":23,"value":1131},"Structs can be nested inside other structs. For example:",{"type":17,"tag":120,"props":1133,"children":1135},{"className":122,"code":1134,"filename":744,"language":124,"meta":7,"style":7},"struct Point {\n    int x;\n    int y;\n}\n\nstruct Rectangle {\n    Point topLeft;\n    Point bottomRight;\n}\n\nRectangle rectangle = {\n    topLeft: { x: 1, y: 2 },\n    bottomRight: { x: 3, y: 4 }\n}\n\n// Access the x field of the top left point of the rectangle\nint x = rectangle.topLeft.x\n",[1136],{"type":17,"tag":127,"props":1137,"children":1138},{"__ignoreMap":7},[1139,1154,1165,1176,1183,1190,1206,1219,1231,1238,1246,1268,1295,1322,1330,1338,1347],{"type":17,"tag":131,"props":1140,"children":1141},{"class":133,"line":134},[1142,1146,1150],{"type":17,"tag":131,"props":1143,"children":1144},{"style":138},[1145],{"type":23,"value":141},{"type":17,"tag":131,"props":1147,"children":1148},{"style":144},[1149],{"type":23,"value":147},{"type":17,"tag":131,"props":1151,"children":1152},{"style":150},[1153],{"type":23,"value":153},{"type":17,"tag":131,"props":1155,"children":1156},{"class":133,"line":35},[1157,1161],{"type":17,"tag":131,"props":1158,"children":1159},{"style":138},[1160],{"type":23,"value":161},{"type":17,"tag":131,"props":1162,"children":1163},{"style":150},[1164],{"type":23,"value":166},{"type":17,"tag":131,"props":1166,"children":1167},{"class":133,"line":169},[1168,1172],{"type":17,"tag":131,"props":1169,"children":1170},{"style":138},[1171],{"type":23,"value":161},{"type":17,"tag":131,"props":1173,"children":1174},{"style":150},[1175],{"type":23,"value":179},{"type":17,"tag":131,"props":1177,"children":1178},{"class":133,"line":182},[1179],{"type":17,"tag":131,"props":1180,"children":1181},{"style":150},[1182],{"type":23,"value":188},{"type":17,"tag":131,"props":1184,"children":1185},{"class":133,"line":303},[1186],{"type":17,"tag":131,"props":1187,"children":1188},{"emptyLinePlaceholder":55},[1189],{"type":23,"value":802},{"type":17,"tag":131,"props":1191,"children":1192},{"class":133,"line":328},[1193,1197,1202],{"type":17,"tag":131,"props":1194,"children":1195},{"style":138},[1196],{"type":23,"value":141},{"type":17,"tag":131,"props":1198,"children":1199},{"style":144},[1200],{"type":23,"value":1201}," Rectangle",{"type":17,"tag":131,"props":1203,"children":1204},{"style":150},[1205],{"type":23,"value":153},{"type":17,"tag":131,"props":1207,"children":1208},{"class":133,"line":746},[1209,1214],{"type":17,"tag":131,"props":1210,"children":1211},{"style":144},[1212],{"type":23,"value":1213},"    Point",{"type":17,"tag":131,"props":1215,"children":1216},{"style":150},[1217],{"type":23,"value":1218}," topLeft;\n",{"type":17,"tag":131,"props":1220,"children":1221},{"class":133,"line":863},[1222,1226],{"type":17,"tag":131,"props":1223,"children":1224},{"style":144},[1225],{"type":23,"value":1213},{"type":17,"tag":131,"props":1227,"children":1228},{"style":150},[1229],{"type":23,"value":1230}," bottomRight;\n",{"type":17,"tag":131,"props":1232,"children":1233},{"class":133,"line":994},[1234],{"type":17,"tag":131,"props":1235,"children":1236},{"style":150},[1237],{"type":23,"value":188},{"type":17,"tag":131,"props":1239,"children":1241},{"class":133,"line":1240},10,[1242],{"type":17,"tag":131,"props":1243,"children":1244},{"emptyLinePlaceholder":55},[1245],{"type":23,"value":802},{"type":17,"tag":131,"props":1247,"children":1249},{"class":133,"line":1248},11,[1250,1255,1260,1264],{"type":17,"tag":131,"props":1251,"children":1252},{"style":144},[1253],{"type":23,"value":1254},"Rectangle",{"type":17,"tag":131,"props":1256,"children":1257},{"style":150},[1258],{"type":23,"value":1259}," rectangle ",{"type":17,"tag":131,"props":1261,"children":1262},{"style":138},[1263],{"type":23,"value":828},{"type":17,"tag":131,"props":1265,"children":1266},{"style":150},[1267],{"type":23,"value":153},{"type":17,"tag":131,"props":1269,"children":1271},{"class":133,"line":1270},12,[1272,1277,1281,1286,1290],{"type":17,"tag":131,"props":1273,"children":1274},{"style":150},[1275],{"type":23,"value":1276},"    topLeft: { x: ",{"type":17,"tag":131,"props":1278,"children":1279},{"style":243},[1280],{"type":23,"value":838},{"type":17,"tag":131,"props":1282,"children":1283},{"style":150},[1284],{"type":23,"value":1285},", y: ",{"type":17,"tag":131,"props":1287,"children":1288},{"style":243},[1289],{"type":23,"value":848},{"type":17,"tag":131,"props":1291,"children":1292},{"style":150},[1293],{"type":23,"value":1294}," },\n",{"type":17,"tag":131,"props":1296,"children":1298},{"class":133,"line":1297},13,[1299,1304,1309,1313,1318],{"type":17,"tag":131,"props":1300,"children":1301},{"style":150},[1302],{"type":23,"value":1303},"    bottomRight: { x: ",{"type":17,"tag":131,"props":1305,"children":1306},{"style":243},[1307],{"type":23,"value":1308},"3",{"type":17,"tag":131,"props":1310,"children":1311},{"style":150},[1312],{"type":23,"value":1285},{"type":17,"tag":131,"props":1314,"children":1315},{"style":243},[1316],{"type":23,"value":1317},"4",{"type":17,"tag":131,"props":1319,"children":1320},{"style":150},[1321],{"type":23,"value":853},{"type":17,"tag":131,"props":1323,"children":1325},{"class":133,"line":1324},14,[1326],{"type":17,"tag":131,"props":1327,"children":1328},{"style":150},[1329],{"type":23,"value":188},{"type":17,"tag":131,"props":1331,"children":1333},{"class":133,"line":1332},15,[1334],{"type":17,"tag":131,"props":1335,"children":1336},{"emptyLinePlaceholder":55},[1337],{"type":23,"value":802},{"type":17,"tag":131,"props":1339,"children":1341},{"class":133,"line":1340},16,[1342],{"type":17,"tag":131,"props":1343,"children":1344},{"style":413},[1345],{"type":23,"value":1346},"// Access the x field of the top left point of the rectangle\n",{"type":17,"tag":131,"props":1348,"children":1350},{"class":133,"line":1349},17,[1351,1355,1359,1363],{"type":17,"tag":131,"props":1352,"children":1353},{"style":138},[1354],{"type":23,"value":1107},{"type":17,"tag":131,"props":1356,"children":1357},{"style":150},[1358],{"type":23,"value":263},{"type":17,"tag":131,"props":1360,"children":1361},{"style":138},[1362],{"type":23,"value":828},{"type":17,"tag":131,"props":1364,"children":1365},{"style":150},[1366],{"type":23,"value":1367}," rectangle.topLeft.x\n",{"type":17,"tag":1369,"props":1370,"children":1371},"style",{},[1372],{"type":23,"value":1373},"html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":35,"depth":35,"links":1375},[1376,1379,1380,1381],{"id":192,"depth":35,"text":195,"children":1377},[1378],{"id":358,"depth":169,"text":361},{"id":718,"depth":35,"text":721},{"id":974,"depth":35,"text":977},{"id":1123,"depth":35,"text":1126},"content:docs:3.language-reference:1.structs.md","docs/3.language-reference/1.structs.md",{"_path":70,"_dir":20,"_draft":6,"_partial":6,"_locale":7,"title":69,"description":1385,"tags":1386,"navigation":1387,"body":1388,"_type":37,"_id":2550,"_source":39,"_file":2551,"_extension":41},"Learn more about function pointers.",[20],{"sidebar":55},{"type":14,"children":1389,"toc":2544},[1390,1395,1400,1406,1431,1506,1517,1544,1550,1562,1649,1655,1666,1684,1844,1855,1967,1973,1978,2540],{"type":17,"tag":18,"props":1391,"children":1393},{"id":1392},"function-pointers",[1394],{"type":23,"value":69},{"type":17,"tag":25,"props":1396,"children":1397},{},[1398],{"type":23,"value":1399},"A function pointer is a pointer that points to a function. Function pointers are useful for passing functions as arguments to other functions, or for storing functions in a variable.",{"type":17,"tag":190,"props":1401,"children":1403},{"id":1402},"declaring-a-function-pointer",[1404],{"type":23,"value":1405},"Declaring a function pointer",{"type":17,"tag":25,"props":1407,"children":1408},{},[1409,1411,1416,1418,1423,1425,1430],{"type":23,"value":1410},"A function pointer is declared using the ",{"type":17,"tag":127,"props":1412,"children":1413},{"className":7},[1414],{"type":23,"value":1415},"func",{"type":23,"value":1417}," keyword, followed by ",{"type":17,"tag":127,"props":1419,"children":1420},{"className":7},[1421],{"type":23,"value":1422},"\u003C",{"type":23,"value":1424},", the types of the parameters separated by a comma, the return type of the function and ",{"type":17,"tag":127,"props":1426,"children":1427},{"className":7},[1428],{"type":23,"value":1429},">",{"type":23,"value":240},{"type":17,"tag":120,"props":1432,"children":1434},{"className":122,"code":1433,"language":124,"meta":7,"style":7},"func\u003Cint, int, int> add\n//   ^^^  ^^^  ^^^\n//    |    |    Return type\n//    |    Second parameter\n//    First parameter\n",[1435],{"type":17,"tag":127,"props":1436,"children":1437},{"__ignoreMap":7},[1438,1474,1482,1490,1498],{"type":17,"tag":131,"props":1439,"children":1440},{"class":133,"line":134},[1441,1445,1449,1453,1457,1461,1465,1469],{"type":17,"tag":131,"props":1442,"children":1443},{"style":138},[1444],{"type":23,"value":1415},{"type":17,"tag":131,"props":1446,"children":1447},{"style":150},[1448],{"type":23,"value":1422},{"type":17,"tag":131,"props":1450,"children":1451},{"style":138},[1452],{"type":23,"value":1107},{"type":17,"tag":131,"props":1454,"children":1455},{"style":150},[1456],{"type":23,"value":843},{"type":17,"tag":131,"props":1458,"children":1459},{"style":138},[1460],{"type":23,"value":1107},{"type":17,"tag":131,"props":1462,"children":1463},{"style":150},[1464],{"type":23,"value":843},{"type":17,"tag":131,"props":1466,"children":1467},{"style":138},[1468],{"type":23,"value":1107},{"type":17,"tag":131,"props":1470,"children":1471},{"style":150},[1472],{"type":23,"value":1473},"> add\n",{"type":17,"tag":131,"props":1475,"children":1476},{"class":133,"line":35},[1477],{"type":17,"tag":131,"props":1478,"children":1479},{"style":413},[1480],{"type":23,"value":1481},"//   ^^^  ^^^  ^^^\n",{"type":17,"tag":131,"props":1483,"children":1484},{"class":133,"line":169},[1485],{"type":17,"tag":131,"props":1486,"children":1487},{"style":413},[1488],{"type":23,"value":1489},"//    |    |    Return type\n",{"type":17,"tag":131,"props":1491,"children":1492},{"class":133,"line":182},[1493],{"type":17,"tag":131,"props":1494,"children":1495},{"style":413},[1496],{"type":23,"value":1497},"//    |    Second parameter\n",{"type":17,"tag":131,"props":1499,"children":1500},{"class":133,"line":303},[1501],{"type":17,"tag":131,"props":1502,"children":1503},{"style":413},[1504],{"type":23,"value":1505},"//    First parameter\n",{"type":17,"tag":25,"props":1507,"children":1508},{},[1509,1511,1516],{"type":23,"value":1510},"The function pointer should always have a return type, even if the function it points to does not return a value. If the function does not return a value, the return type should be ",{"type":17,"tag":127,"props":1512,"children":1513},{"className":7},[1514],{"type":23,"value":1515},"void",{"type":23,"value":240},{"type":17,"tag":120,"props":1518,"children":1520},{"className":122,"code":1519,"language":124,"meta":7,"style":7},"func\u003Cvoid> callback\n",[1521],{"type":17,"tag":127,"props":1522,"children":1523},{"__ignoreMap":7},[1524],{"type":17,"tag":131,"props":1525,"children":1526},{"class":133,"line":134},[1527,1531,1535,1539],{"type":17,"tag":131,"props":1528,"children":1529},{"style":138},[1530],{"type":23,"value":1415},{"type":17,"tag":131,"props":1532,"children":1533},{"style":150},[1534],{"type":23,"value":1422},{"type":17,"tag":131,"props":1536,"children":1537},{"style":138},[1538],{"type":23,"value":1515},{"type":17,"tag":131,"props":1540,"children":1541},{"style":150},[1542],{"type":23,"value":1543},"> callback\n",{"type":17,"tag":190,"props":1545,"children":1547},{"id":1546},"calling-a-function-pointer",[1548],{"type":23,"value":1549},"Calling a function pointer",{"type":17,"tag":25,"props":1551,"children":1552},{},[1553,1555,1560],{"type":23,"value":1554},"A function pointer is called using the ",{"type":17,"tag":127,"props":1556,"children":1557},{"className":7},[1558],{"type":23,"value":1559},"()",{"type":23,"value":1561}," operator, followed by the arguments of the function:",{"type":17,"tag":120,"props":1563,"children":1565},{"className":122,"code":1564,"language":124,"meta":7,"style":7},"func\u003Cint, int, int> add\n\nint result = add(1, 2)\n",[1566],{"type":17,"tag":127,"props":1567,"children":1568},{"__ignoreMap":7},[1569,1604,1611],{"type":17,"tag":131,"props":1570,"children":1571},{"class":133,"line":134},[1572,1576,1580,1584,1588,1592,1596,1600],{"type":17,"tag":131,"props":1573,"children":1574},{"style":138},[1575],{"type":23,"value":1415},{"type":17,"tag":131,"props":1577,"children":1578},{"style":150},[1579],{"type":23,"value":1422},{"type":17,"tag":131,"props":1581,"children":1582},{"style":138},[1583],{"type":23,"value":1107},{"type":17,"tag":131,"props":1585,"children":1586},{"style":150},[1587],{"type":23,"value":843},{"type":17,"tag":131,"props":1589,"children":1590},{"style":138},[1591],{"type":23,"value":1107},{"type":17,"tag":131,"props":1593,"children":1594},{"style":150},[1595],{"type":23,"value":843},{"type":17,"tag":131,"props":1597,"children":1598},{"style":138},[1599],{"type":23,"value":1107},{"type":17,"tag":131,"props":1601,"children":1602},{"style":150},[1603],{"type":23,"value":1473},{"type":17,"tag":131,"props":1605,"children":1606},{"class":133,"line":35},[1607],{"type":17,"tag":131,"props":1608,"children":1609},{"emptyLinePlaceholder":55},[1610],{"type":23,"value":802},{"type":17,"tag":131,"props":1612,"children":1613},{"class":133,"line":169},[1614,1618,1623,1627,1632,1636,1640,1644],{"type":17,"tag":131,"props":1615,"children":1616},{"style":138},[1617],{"type":23,"value":1107},{"type":17,"tag":131,"props":1619,"children":1620},{"style":150},[1621],{"type":23,"value":1622}," result ",{"type":17,"tag":131,"props":1624,"children":1625},{"style":138},[1626],{"type":23,"value":828},{"type":17,"tag":131,"props":1628,"children":1629},{"style":150},[1630],{"type":23,"value":1631}," add(",{"type":17,"tag":131,"props":1633,"children":1634},{"style":243},[1635],{"type":23,"value":838},{"type":17,"tag":131,"props":1637,"children":1638},{"style":150},[1639],{"type":23,"value":843},{"type":17,"tag":131,"props":1641,"children":1642},{"style":243},[1643],{"type":23,"value":848},{"type":17,"tag":131,"props":1645,"children":1646},{"style":150},[1647],{"type":23,"value":1648},")\n",{"type":17,"tag":190,"props":1650,"children":1652},{"id":1651},"assigning-a-function-pointer",[1653],{"type":23,"value":1654},"Assigning a function pointer",{"type":17,"tag":25,"props":1656,"children":1657},{},[1658,1660,1664],{"type":23,"value":1659},"A function pointer can be assigned to a function using the ",{"type":17,"tag":127,"props":1661,"children":1662},{"className":7},[1663],{"type":23,"value":828},{"type":23,"value":1665}," operator with a existing function or lambda expression.",{"type":17,"tag":25,"props":1667,"children":1668},{},[1669,1671,1676,1678,1683],{"type":23,"value":1670},"In the following example, the function pointer ",{"type":17,"tag":127,"props":1672,"children":1673},{"className":7},[1674],{"type":23,"value":1675},"addPointer",{"type":23,"value":1677}," is assigned to the function ",{"type":17,"tag":127,"props":1679,"children":1680},{"className":7},[1681],{"type":23,"value":1682},"add",{"type":23,"value":240},{"type":17,"tag":120,"props":1685,"children":1687},{"className":122,"code":1686,"filename":744,"language":124,"meta":7,"style":7},"func\u003Cint, int, int> addPointer = add\n\nint result = addPointer(1, 2)\n\nint add(int a, int b) {\n    return a + b\n}\n",[1688],{"type":17,"tag":127,"props":1689,"children":1690},{"__ignoreMap":7},[1691,1736,1743,1779,1786,1815,1837],{"type":17,"tag":131,"props":1692,"children":1693},{"class":133,"line":134},[1694,1698,1702,1706,1710,1714,1718,1722,1727,1731],{"type":17,"tag":131,"props":1695,"children":1696},{"style":138},[1697],{"type":23,"value":1415},{"type":17,"tag":131,"props":1699,"children":1700},{"style":150},[1701],{"type":23,"value":1422},{"type":17,"tag":131,"props":1703,"children":1704},{"style":138},[1705],{"type":23,"value":1107},{"type":17,"tag":131,"props":1707,"children":1708},{"style":150},[1709],{"type":23,"value":843},{"type":17,"tag":131,"props":1711,"children":1712},{"style":138},[1713],{"type":23,"value":1107},{"type":17,"tag":131,"props":1715,"children":1716},{"style":150},[1717],{"type":23,"value":843},{"type":17,"tag":131,"props":1719,"children":1720},{"style":138},[1721],{"type":23,"value":1107},{"type":17,"tag":131,"props":1723,"children":1724},{"style":150},[1725],{"type":23,"value":1726},"> addPointer ",{"type":17,"tag":131,"props":1728,"children":1729},{"style":138},[1730],{"type":23,"value":828},{"type":17,"tag":131,"props":1732,"children":1733},{"style":150},[1734],{"type":23,"value":1735}," add\n",{"type":17,"tag":131,"props":1737,"children":1738},{"class":133,"line":35},[1739],{"type":17,"tag":131,"props":1740,"children":1741},{"emptyLinePlaceholder":55},[1742],{"type":23,"value":802},{"type":17,"tag":131,"props":1744,"children":1745},{"class":133,"line":169},[1746,1750,1754,1758,1763,1767,1771,1775],{"type":17,"tag":131,"props":1747,"children":1748},{"style":138},[1749],{"type":23,"value":1107},{"type":17,"tag":131,"props":1751,"children":1752},{"style":150},[1753],{"type":23,"value":1622},{"type":17,"tag":131,"props":1755,"children":1756},{"style":138},[1757],{"type":23,"value":828},{"type":17,"tag":131,"props":1759,"children":1760},{"style":150},[1761],{"type":23,"value":1762}," addPointer(",{"type":17,"tag":131,"props":1764,"children":1765},{"style":243},[1766],{"type":23,"value":838},{"type":17,"tag":131,"props":1768,"children":1769},{"style":150},[1770],{"type":23,"value":843},{"type":17,"tag":131,"props":1772,"children":1773},{"style":243},[1774],{"type":23,"value":848},{"type":17,"tag":131,"props":1776,"children":1777},{"style":150},[1778],{"type":23,"value":1648},{"type":17,"tag":131,"props":1780,"children":1781},{"class":133,"line":182},[1782],{"type":17,"tag":131,"props":1783,"children":1784},{"emptyLinePlaceholder":55},[1785],{"type":23,"value":802},{"type":17,"tag":131,"props":1787,"children":1788},{"class":133,"line":303},[1789,1793,1797,1801,1806,1810],{"type":17,"tag":131,"props":1790,"children":1791},{"style":138},[1792],{"type":23,"value":1107},{"type":17,"tag":131,"props":1794,"children":1795},{"style":150},[1796],{"type":23,"value":1631},{"type":17,"tag":131,"props":1798,"children":1799},{"style":138},[1800],{"type":23,"value":1107},{"type":17,"tag":131,"props":1802,"children":1803},{"style":150},[1804],{"type":23,"value":1805}," a, ",{"type":17,"tag":131,"props":1807,"children":1808},{"style":138},[1809],{"type":23,"value":1107},{"type":17,"tag":131,"props":1811,"children":1812},{"style":150},[1813],{"type":23,"value":1814}," b) {\n",{"type":17,"tag":131,"props":1816,"children":1817},{"class":133,"line":328},[1818,1823,1827,1832],{"type":17,"tag":131,"props":1819,"children":1820},{"style":138},[1821],{"type":23,"value":1822},"    return",{"type":17,"tag":131,"props":1824,"children":1825},{"style":150},[1826],{"type":23,"value":401},{"type":17,"tag":131,"props":1828,"children":1829},{"style":138},[1830],{"type":23,"value":1831},"+",{"type":17,"tag":131,"props":1833,"children":1834},{"style":150},[1835],{"type":23,"value":1836}," b\n",{"type":17,"tag":131,"props":1838,"children":1839},{"class":133,"line":746},[1840],{"type":17,"tag":131,"props":1841,"children":1842},{"style":150},[1843],{"type":23,"value":188},{"type":17,"tag":25,"props":1845,"children":1846},{},[1847,1848,1853],{"type":23,"value":1670},{"type":17,"tag":127,"props":1849,"children":1850},{"className":7},[1851],{"type":23,"value":1852},"callbackPointer",{"type":23,"value":1854}," is assigned to a lambda expression:",{"type":17,"tag":120,"props":1856,"children":1858},{"className":122,"code":1857,"filename":744,"language":124,"meta":7,"style":7},"func\u003Cint, int, int> callbackPointer = (a, b) => a + b\n\nint result = callbackPointer(1, 2)\n",[1859],{"type":17,"tag":127,"props":1860,"children":1861},{"__ignoreMap":7},[1862,1924,1931],{"type":17,"tag":131,"props":1863,"children":1864},{"class":133,"line":134},[1865,1869,1873,1877,1881,1885,1889,1893,1898,1902,1907,1911,1916,1920],{"type":17,"tag":131,"props":1866,"children":1867},{"style":138},[1868],{"type":23,"value":1415},{"type":17,"tag":131,"props":1870,"children":1871},{"style":150},[1872],{"type":23,"value":1422},{"type":17,"tag":131,"props":1874,"children":1875},{"style":138},[1876],{"type":23,"value":1107},{"type":17,"tag":131,"props":1878,"children":1879},{"style":150},[1880],{"type":23,"value":843},{"type":17,"tag":131,"props":1882,"children":1883},{"style":138},[1884],{"type":23,"value":1107},{"type":17,"tag":131,"props":1886,"children":1887},{"style":150},[1888],{"type":23,"value":843},{"type":17,"tag":131,"props":1890,"children":1891},{"style":138},[1892],{"type":23,"value":1107},{"type":17,"tag":131,"props":1894,"children":1895},{"style":150},[1896],{"type":23,"value":1897},"> callbackPointer ",{"type":17,"tag":131,"props":1899,"children":1900},{"style":138},[1901],{"type":23,"value":828},{"type":17,"tag":131,"props":1903,"children":1904},{"style":150},[1905],{"type":23,"value":1906}," (a, b) ",{"type":17,"tag":131,"props":1908,"children":1909},{"style":138},[1910],{"type":23,"value":828},{"type":17,"tag":131,"props":1912,"children":1913},{"style":150},[1914],{"type":23,"value":1915},"> a ",{"type":17,"tag":131,"props":1917,"children":1918},{"style":138},[1919],{"type":23,"value":1831},{"type":17,"tag":131,"props":1921,"children":1922},{"style":150},[1923],{"type":23,"value":1836},{"type":17,"tag":131,"props":1925,"children":1926},{"class":133,"line":35},[1927],{"type":17,"tag":131,"props":1928,"children":1929},{"emptyLinePlaceholder":55},[1930],{"type":23,"value":802},{"type":17,"tag":131,"props":1932,"children":1933},{"class":133,"line":169},[1934,1938,1942,1946,1951,1955,1959,1963],{"type":17,"tag":131,"props":1935,"children":1936},{"style":138},[1937],{"type":23,"value":1107},{"type":17,"tag":131,"props":1939,"children":1940},{"style":150},[1941],{"type":23,"value":1622},{"type":17,"tag":131,"props":1943,"children":1944},{"style":138},[1945],{"type":23,"value":828},{"type":17,"tag":131,"props":1947,"children":1948},{"style":150},[1949],{"type":23,"value":1950}," callbackPointer(",{"type":17,"tag":131,"props":1952,"children":1953},{"style":243},[1954],{"type":23,"value":838},{"type":17,"tag":131,"props":1956,"children":1957},{"style":150},[1958],{"type":23,"value":843},{"type":17,"tag":131,"props":1960,"children":1961},{"style":243},[1962],{"type":23,"value":848},{"type":17,"tag":131,"props":1964,"children":1965},{"style":150},[1966],{"type":23,"value":1648},{"type":17,"tag":190,"props":1968,"children":1970},{"id":1969},"example",[1971],{"type":23,"value":1972},"Example",{"type":17,"tag":25,"props":1974,"children":1975},{},[1976],{"type":23,"value":1977},"The following example stores function pointers in a array and calls them:",{"type":17,"tag":120,"props":1979,"children":1981},{"className":122,"code":1980,"filename":744,"language":124,"meta":7,"style":7},"var chars = create_pointer(0xD12A, 1)\n\nvar tick_callbacks = stackalloc func\u003Cvoid>[10]\nvar tick_callback_count = 0\n\n// Register a callback\nvoid register_tick_callback(func\u003Cvoid> callback) {\n    tick_callbacks[tick_callback_count++] = callback\n}\n\n// Call all the callbacks\nvoid tick() {\n    for (int i = 0; i \u003C tick_callback_count; i++) {\n        tick_callbacks[i]()\n    }\n}\n\n// Register a callback that clears the screen\nregister_tick_callback(() => {\n    for (int i = 0; i \u003C 17 * 17; i++) {\n        chars[i] = ' '\n    }\n})\n\n// Register a callback that draws a 'x' on the screen\n// and moves it to the right every time it is called\nvar offset = 0\n\nregister_tick_callback(() => {\n    chars[offset++] = 'x'\n})\n\n// Tick 3 times\ntick()\ntick()\ntick()\n\n// The 'x' should be on the 3rd column\n",[1982],{"type":17,"tag":127,"props":1983,"children":1984},{"__ignoreMap":7},[1985,2025,2032,2081,2102,2109,2117,2146,2173,2180,2187,2195,2207,2229,2237,2245,2252,2259,2268,2286,2326,2350,2358,2367,2375,2384,2393,2414,2422,2438,2473,2481,2489,2498,2507,2515,2523,2531],{"type":17,"tag":131,"props":1986,"children":1987},{"class":133,"line":134},[1988,1993,1998,2002,2007,2012,2017,2021],{"type":17,"tag":131,"props":1989,"children":1990},{"style":138},[1991],{"type":23,"value":1992},"var",{"type":17,"tag":131,"props":1994,"children":1995},{"style":150},[1996],{"type":23,"value":1997}," chars ",{"type":17,"tag":131,"props":1999,"children":2000},{"style":138},[2001],{"type":23,"value":828},{"type":17,"tag":131,"props":2003,"children":2004},{"style":150},[2005],{"type":23,"value":2006}," create_pointer(",{"type":17,"tag":131,"props":2008,"children":2009},{"style":243},[2010],{"type":23,"value":2011},"0",{"type":17,"tag":131,"props":2013,"children":2014},{"style":150},[2015],{"type":23,"value":2016},"xD12A, ",{"type":17,"tag":131,"props":2018,"children":2019},{"style":243},[2020],{"type":23,"value":838},{"type":17,"tag":131,"props":2022,"children":2023},{"style":150},[2024],{"type":23,"value":1648},{"type":17,"tag":131,"props":2026,"children":2027},{"class":133,"line":35},[2028],{"type":17,"tag":131,"props":2029,"children":2030},{"emptyLinePlaceholder":55},[2031],{"type":23,"value":802},{"type":17,"tag":131,"props":2033,"children":2034},{"class":133,"line":169},[2035,2039,2044,2048,2053,2058,2062,2066,2071,2076],{"type":17,"tag":131,"props":2036,"children":2037},{"style":138},[2038],{"type":23,"value":1992},{"type":17,"tag":131,"props":2040,"children":2041},{"style":150},[2042],{"type":23,"value":2043}," tick_callbacks ",{"type":17,"tag":131,"props":2045,"children":2046},{"style":138},[2047],{"type":23,"value":828},{"type":17,"tag":131,"props":2049,"children":2050},{"style":138},[2051],{"type":23,"value":2052}," stackalloc",{"type":17,"tag":131,"props":2054,"children":2055},{"style":138},[2056],{"type":23,"value":2057}," func",{"type":17,"tag":131,"props":2059,"children":2060},{"style":150},[2061],{"type":23,"value":1422},{"type":17,"tag":131,"props":2063,"children":2064},{"style":138},[2065],{"type":23,"value":1515},{"type":17,"tag":131,"props":2067,"children":2068},{"style":150},[2069],{"type":23,"value":2070},">[",{"type":17,"tag":131,"props":2072,"children":2073},{"style":243},[2074],{"type":23,"value":2075},"10",{"type":17,"tag":131,"props":2077,"children":2078},{"style":150},[2079],{"type":23,"value":2080},"]\n",{"type":17,"tag":131,"props":2082,"children":2083},{"class":133,"line":182},[2084,2088,2093,2097],{"type":17,"tag":131,"props":2085,"children":2086},{"style":138},[2087],{"type":23,"value":1992},{"type":17,"tag":131,"props":2089,"children":2090},{"style":150},[2091],{"type":23,"value":2092}," tick_callback_count ",{"type":17,"tag":131,"props":2094,"children":2095},{"style":138},[2096],{"type":23,"value":828},{"type":17,"tag":131,"props":2098,"children":2099},{"style":243},[2100],{"type":23,"value":2101}," 0\n",{"type":17,"tag":131,"props":2103,"children":2104},{"class":133,"line":303},[2105],{"type":17,"tag":131,"props":2106,"children":2107},{"emptyLinePlaceholder":55},[2108],{"type":23,"value":802},{"type":17,"tag":131,"props":2110,"children":2111},{"class":133,"line":328},[2112],{"type":17,"tag":131,"props":2113,"children":2114},{"style":413},[2115],{"type":23,"value":2116},"// Register a callback\n",{"type":17,"tag":131,"props":2118,"children":2119},{"class":133,"line":746},[2120,2124,2129,2133,2137,2141],{"type":17,"tag":131,"props":2121,"children":2122},{"style":138},[2123],{"type":23,"value":1515},{"type":17,"tag":131,"props":2125,"children":2126},{"style":150},[2127],{"type":23,"value":2128}," register_tick_callback(",{"type":17,"tag":131,"props":2130,"children":2131},{"style":138},[2132],{"type":23,"value":1415},{"type":17,"tag":131,"props":2134,"children":2135},{"style":150},[2136],{"type":23,"value":1422},{"type":17,"tag":131,"props":2138,"children":2139},{"style":138},[2140],{"type":23,"value":1515},{"type":17,"tag":131,"props":2142,"children":2143},{"style":150},[2144],{"type":23,"value":2145},"> callback) {\n",{"type":17,"tag":131,"props":2147,"children":2148},{"class":133,"line":863},[2149,2154,2159,2164,2168],{"type":17,"tag":131,"props":2150,"children":2151},{"style":150},[2152],{"type":23,"value":2153},"    tick_callbacks[tick_callback_count",{"type":17,"tag":131,"props":2155,"children":2156},{"style":138},[2157],{"type":23,"value":2158},"++",{"type":17,"tag":131,"props":2160,"children":2161},{"style":150},[2162],{"type":23,"value":2163},"] ",{"type":17,"tag":131,"props":2165,"children":2166},{"style":138},[2167],{"type":23,"value":828},{"type":17,"tag":131,"props":2169,"children":2170},{"style":150},[2171],{"type":23,"value":2172}," callback\n",{"type":17,"tag":131,"props":2174,"children":2175},{"class":133,"line":994},[2176],{"type":17,"tag":131,"props":2177,"children":2178},{"style":150},[2179],{"type":23,"value":188},{"type":17,"tag":131,"props":2181,"children":2182},{"class":133,"line":1240},[2183],{"type":17,"tag":131,"props":2184,"children":2185},{"emptyLinePlaceholder":55},[2186],{"type":23,"value":802},{"type":17,"tag":131,"props":2188,"children":2189},{"class":133,"line":1248},[2190],{"type":17,"tag":131,"props":2191,"children":2192},{"style":413},[2193],{"type":23,"value":2194},"// Call all the callbacks\n",{"type":17,"tag":131,"props":2196,"children":2197},{"class":133,"line":1270},[2198,2202],{"type":17,"tag":131,"props":2199,"children":2200},{"style":138},[2201],{"type":23,"value":1515},{"type":17,"tag":131,"props":2203,"children":2204},{"style":150},[2205],{"type":23,"value":2206}," tick() {\n",{"type":17,"tag":131,"props":2208,"children":2209},{"class":133,"line":1297},[2210,2215,2220,2224],{"type":17,"tag":131,"props":2211,"children":2212},{"style":138},[2213],{"type":23,"value":2214},"    for",{"type":17,"tag":131,"props":2216,"children":2217},{"style":150},[2218],{"type":23,"value":2219}," (int i = ",{"type":17,"tag":131,"props":2221,"children":2222},{"style":243},[2223],{"type":23,"value":2011},{"type":17,"tag":131,"props":2225,"children":2226},{"style":150},[2227],{"type":23,"value":2228},"; i \u003C tick_callback_count; i++) {\n",{"type":17,"tag":131,"props":2230,"children":2231},{"class":133,"line":1324},[2232],{"type":17,"tag":131,"props":2233,"children":2234},{"style":150},[2235],{"type":23,"value":2236},"        tick_callbacks[i]()\n",{"type":17,"tag":131,"props":2238,"children":2239},{"class":133,"line":1332},[2240],{"type":17,"tag":131,"props":2241,"children":2242},{"style":150},[2243],{"type":23,"value":2244},"    }\n",{"type":17,"tag":131,"props":2246,"children":2247},{"class":133,"line":1340},[2248],{"type":17,"tag":131,"props":2249,"children":2250},{"style":150},[2251],{"type":23,"value":188},{"type":17,"tag":131,"props":2253,"children":2254},{"class":133,"line":1349},[2255],{"type":17,"tag":131,"props":2256,"children":2257},{"emptyLinePlaceholder":55},[2258],{"type":23,"value":802},{"type":17,"tag":131,"props":2260,"children":2262},{"class":133,"line":2261},18,[2263],{"type":17,"tag":131,"props":2264,"children":2265},{"style":413},[2266],{"type":23,"value":2267},"// Register a callback that clears the screen\n",{"type":17,"tag":131,"props":2269,"children":2271},{"class":133,"line":2270},19,[2272,2277,2281],{"type":17,"tag":131,"props":2273,"children":2274},{"style":150},[2275],{"type":23,"value":2276},"register_tick_callback(() ",{"type":17,"tag":131,"props":2278,"children":2279},{"style":138},[2280],{"type":23,"value":828},{"type":17,"tag":131,"props":2282,"children":2283},{"style":150},[2284],{"type":23,"value":2285},"> {\n",{"type":17,"tag":131,"props":2287,"children":2289},{"class":133,"line":2288},20,[2290,2294,2298,2302,2307,2312,2317,2321],{"type":17,"tag":131,"props":2291,"children":2292},{"style":138},[2293],{"type":23,"value":2214},{"type":17,"tag":131,"props":2295,"children":2296},{"style":150},[2297],{"type":23,"value":2219},{"type":17,"tag":131,"props":2299,"children":2300},{"style":243},[2301],{"type":23,"value":2011},{"type":17,"tag":131,"props":2303,"children":2304},{"style":150},[2305],{"type":23,"value":2306},"; i \u003C ",{"type":17,"tag":131,"props":2308,"children":2309},{"style":243},[2310],{"type":23,"value":2311},"17",{"type":17,"tag":131,"props":2313,"children":2314},{"style":150},[2315],{"type":23,"value":2316}," * ",{"type":17,"tag":131,"props":2318,"children":2319},{"style":243},[2320],{"type":23,"value":2311},{"type":17,"tag":131,"props":2322,"children":2323},{"style":150},[2324],{"type":23,"value":2325},"; i++) {\n",{"type":17,"tag":131,"props":2327,"children":2329},{"class":133,"line":2328},21,[2330,2335,2339,2345],{"type":17,"tag":131,"props":2331,"children":2332},{"style":150},[2333],{"type":23,"value":2334},"        chars[i] ",{"type":17,"tag":131,"props":2336,"children":2337},{"style":138},[2338],{"type":23,"value":828},{"type":17,"tag":131,"props":2340,"children":2342},{"style":2341},"--shiki-default:#032F62;--shiki-dark:#9ECBFF",[2343],{"type":23,"value":2344}," '",{"type":17,"tag":131,"props":2346,"children":2347},{"style":2341},[2348],{"type":23,"value":2349}," '\n",{"type":17,"tag":131,"props":2351,"children":2353},{"class":133,"line":2352},22,[2354],{"type":17,"tag":131,"props":2355,"children":2356},{"style":150},[2357],{"type":23,"value":2244},{"type":17,"tag":131,"props":2359,"children":2361},{"class":133,"line":2360},23,[2362],{"type":17,"tag":131,"props":2363,"children":2364},{"style":150},[2365],{"type":23,"value":2366},"})\n",{"type":17,"tag":131,"props":2368,"children":2370},{"class":133,"line":2369},24,[2371],{"type":17,"tag":131,"props":2372,"children":2373},{"emptyLinePlaceholder":55},[2374],{"type":23,"value":802},{"type":17,"tag":131,"props":2376,"children":2378},{"class":133,"line":2377},25,[2379],{"type":17,"tag":131,"props":2380,"children":2381},{"style":413},[2382],{"type":23,"value":2383},"// Register a callback that draws a 'x' on the screen\n",{"type":17,"tag":131,"props":2385,"children":2387},{"class":133,"line":2386},26,[2388],{"type":17,"tag":131,"props":2389,"children":2390},{"style":413},[2391],{"type":23,"value":2392},"// and moves it to the right every time it is called\n",{"type":17,"tag":131,"props":2394,"children":2396},{"class":133,"line":2395},27,[2397,2401,2406,2410],{"type":17,"tag":131,"props":2398,"children":2399},{"style":138},[2400],{"type":23,"value":1992},{"type":17,"tag":131,"props":2402,"children":2403},{"style":150},[2404],{"type":23,"value":2405}," offset ",{"type":17,"tag":131,"props":2407,"children":2408},{"style":138},[2409],{"type":23,"value":828},{"type":17,"tag":131,"props":2411,"children":2412},{"style":243},[2413],{"type":23,"value":2101},{"type":17,"tag":131,"props":2415,"children":2417},{"class":133,"line":2416},28,[2418],{"type":17,"tag":131,"props":2419,"children":2420},{"emptyLinePlaceholder":55},[2421],{"type":23,"value":802},{"type":17,"tag":131,"props":2423,"children":2425},{"class":133,"line":2424},29,[2426,2430,2434],{"type":17,"tag":131,"props":2427,"children":2428},{"style":150},[2429],{"type":23,"value":2276},{"type":17,"tag":131,"props":2431,"children":2432},{"style":138},[2433],{"type":23,"value":828},{"type":17,"tag":131,"props":2435,"children":2436},{"style":150},[2437],{"type":23,"value":2285},{"type":17,"tag":131,"props":2439,"children":2441},{"class":133,"line":2440},30,[2442,2447,2451,2455,2459,2463,2468],{"type":17,"tag":131,"props":2443,"children":2444},{"style":150},[2445],{"type":23,"value":2446},"    chars[offset",{"type":17,"tag":131,"props":2448,"children":2449},{"style":138},[2450],{"type":23,"value":2158},{"type":17,"tag":131,"props":2452,"children":2453},{"style":150},[2454],{"type":23,"value":2163},{"type":17,"tag":131,"props":2456,"children":2457},{"style":138},[2458],{"type":23,"value":828},{"type":17,"tag":131,"props":2460,"children":2461},{"style":2341},[2462],{"type":23,"value":2344},{"type":17,"tag":131,"props":2464,"children":2465},{"style":150},[2466],{"type":23,"value":2467},"x",{"type":17,"tag":131,"props":2469,"children":2470},{"style":2341},[2471],{"type":23,"value":2472},"'\n",{"type":17,"tag":131,"props":2474,"children":2476},{"class":133,"line":2475},31,[2477],{"type":17,"tag":131,"props":2478,"children":2479},{"style":150},[2480],{"type":23,"value":2366},{"type":17,"tag":131,"props":2482,"children":2484},{"class":133,"line":2483},32,[2485],{"type":17,"tag":131,"props":2486,"children":2487},{"emptyLinePlaceholder":55},[2488],{"type":23,"value":802},{"type":17,"tag":131,"props":2490,"children":2492},{"class":133,"line":2491},33,[2493],{"type":17,"tag":131,"props":2494,"children":2495},{"style":413},[2496],{"type":23,"value":2497},"// Tick 3 times\n",{"type":17,"tag":131,"props":2499,"children":2501},{"class":133,"line":2500},34,[2502],{"type":17,"tag":131,"props":2503,"children":2504},{"style":150},[2505],{"type":23,"value":2506},"tick()\n",{"type":17,"tag":131,"props":2508,"children":2510},{"class":133,"line":2509},35,[2511],{"type":17,"tag":131,"props":2512,"children":2513},{"style":150},[2514],{"type":23,"value":2506},{"type":17,"tag":131,"props":2516,"children":2518},{"class":133,"line":2517},36,[2519],{"type":17,"tag":131,"props":2520,"children":2521},{"style":150},[2522],{"type":23,"value":2506},{"type":17,"tag":131,"props":2524,"children":2526},{"class":133,"line":2525},37,[2527],{"type":17,"tag":131,"props":2528,"children":2529},{"emptyLinePlaceholder":55},[2530],{"type":23,"value":802},{"type":17,"tag":131,"props":2532,"children":2534},{"class":133,"line":2533},38,[2535],{"type":17,"tag":131,"props":2536,"children":2537},{"style":413},[2538],{"type":23,"value":2539},"// The 'x' should be on the 3rd column\n",{"type":17,"tag":1369,"props":2541,"children":2542},{},[2543],{"type":23,"value":1373},{"title":7,"searchDepth":35,"depth":35,"links":2545},[2546,2547,2548,2549],{"id":1402,"depth":35,"text":1405},{"id":1546,"depth":35,"text":1549},{"id":1651,"depth":35,"text":1654},{"id":1969,"depth":35,"text":1972},"content:docs:3.language-reference:2.function-pointer.md","docs/3.language-reference/2.function-pointer.md",{"_path":73,"_dir":20,"_draft":6,"_partial":6,"_locale":7,"title":72,"description":2553,"tags":2554,"navigation":2555,"body":2556,"_type":37,"_id":3121,"_source":39,"_file":3122,"_extension":41},"Learn more about stack allocations.",[20],{"sidebar":55},{"type":14,"children":2557,"toc":3116},[2558,2563,2568,2573,2578,2584,2596,2641,2647,2652,2770,2774,2779,3112],{"type":17,"tag":18,"props":2559,"children":2561},{"id":2560},"stack-allocations",[2562],{"type":23,"value":72},{"type":17,"tag":25,"props":2564,"children":2565},{},[2566],{"type":23,"value":2567},"Stack allocations are used to allocate memory on the stack. They are useful for storing temporary values that are only needed for a short period of time.",{"type":17,"tag":25,"props":2569,"children":2570},{},[2571],{"type":23,"value":2572},"The stack allocations start at address 61294 and end at address 65535. The stack grows upwards, so the first stack allocation is at address 61294 and the last stack allocation is at address 65535.",{"type":17,"tag":25,"props":2574,"children":2575},{},[2576],{"type":23,"value":2577},"When a function is called, the current stack pointer is stored. When the function returns, the stack pointer is reset to the stored value. This means that stack allocations are only valid within the function they are declared in.",{"type":17,"tag":190,"props":2579,"children":2581},{"id":2580},"declaring-a-stack-allocation",[2582],{"type":23,"value":2583},"Declaring a stack allocation",{"type":17,"tag":25,"props":2585,"children":2586},{},[2587,2589,2594],{"type":23,"value":2588},"A stack allocation is declared using the ",{"type":17,"tag":127,"props":2590,"children":2591},{"className":7},[2592],{"type":23,"value":2593},"stackalloc",{"type":23,"value":2595}," keyword, followed by the type of the allocation and the name of the allocation:",{"type":17,"tag":120,"props":2597,"children":2599},{"className":122,"code":2598,"language":124,"meta":7,"style":7},"int[] numbers = stackalloc int[10]\n",[2600],{"type":17,"tag":127,"props":2601,"children":2602},{"__ignoreMap":7},[2603],{"type":17,"tag":131,"props":2604,"children":2605},{"class":133,"line":134},[2606,2610,2615,2619,2623,2628,2633,2637],{"type":17,"tag":131,"props":2607,"children":2608},{"style":138},[2609],{"type":23,"value":1107},{"type":17,"tag":131,"props":2611,"children":2612},{"style":150},[2613],{"type":23,"value":2614},"[] numbers ",{"type":17,"tag":131,"props":2616,"children":2617},{"style":138},[2618],{"type":23,"value":828},{"type":17,"tag":131,"props":2620,"children":2621},{"style":138},[2622],{"type":23,"value":2052},{"type":17,"tag":131,"props":2624,"children":2625},{"style":138},[2626],{"type":23,"value":2627}," int",{"type":17,"tag":131,"props":2629,"children":2630},{"style":150},[2631],{"type":23,"value":2632},"[",{"type":17,"tag":131,"props":2634,"children":2635},{"style":243},[2636],{"type":23,"value":2075},{"type":17,"tag":131,"props":2638,"children":2639},{"style":150},[2640],{"type":23,"value":2080},{"type":17,"tag":190,"props":2642,"children":2644},{"id":2643},"assigning-a-stack-allocation",[2645],{"type":23,"value":2646},"Assigning a stack allocation",{"type":17,"tag":25,"props":2648,"children":2649},{},[2650],{"type":23,"value":2651},"Since stack allocations are pointers, they can be used like any other pointer:",{"type":17,"tag":120,"props":2653,"children":2655},{"className":122,"code":2654,"filename":744,"language":124,"meta":7,"style":7},"int[] numbers = stackalloc int[10]\n\nnumbers[0] = 1 // Set the first element of the array to 1\n\nint result = numbers[0] // Get the first element of the array\n",[2656],{"type":17,"tag":127,"props":2657,"children":2658},{"__ignoreMap":7},[2659,2694,2701,2730,2737],{"type":17,"tag":131,"props":2660,"children":2661},{"class":133,"line":134},[2662,2666,2670,2674,2678,2682,2686,2690],{"type":17,"tag":131,"props":2663,"children":2664},{"style":138},[2665],{"type":23,"value":1107},{"type":17,"tag":131,"props":2667,"children":2668},{"style":150},[2669],{"type":23,"value":2614},{"type":17,"tag":131,"props":2671,"children":2672},{"style":138},[2673],{"type":23,"value":828},{"type":17,"tag":131,"props":2675,"children":2676},{"style":138},[2677],{"type":23,"value":2052},{"type":17,"tag":131,"props":2679,"children":2680},{"style":138},[2681],{"type":23,"value":2627},{"type":17,"tag":131,"props":2683,"children":2684},{"style":150},[2685],{"type":23,"value":2632},{"type":17,"tag":131,"props":2687,"children":2688},{"style":243},[2689],{"type":23,"value":2075},{"type":17,"tag":131,"props":2691,"children":2692},{"style":150},[2693],{"type":23,"value":2080},{"type":17,"tag":131,"props":2695,"children":2696},{"class":133,"line":35},[2697],{"type":17,"tag":131,"props":2698,"children":2699},{"emptyLinePlaceholder":55},[2700],{"type":23,"value":802},{"type":17,"tag":131,"props":2702,"children":2703},{"class":133,"line":169},[2704,2709,2713,2717,2721,2725],{"type":17,"tag":131,"props":2705,"children":2706},{"style":150},[2707],{"type":23,"value":2708},"numbers[",{"type":17,"tag":131,"props":2710,"children":2711},{"style":243},[2712],{"type":23,"value":2011},{"type":17,"tag":131,"props":2714,"children":2715},{"style":150},[2716],{"type":23,"value":2163},{"type":17,"tag":131,"props":2718,"children":2719},{"style":138},[2720],{"type":23,"value":828},{"type":17,"tag":131,"props":2722,"children":2723},{"style":243},[2724],{"type":23,"value":296},{"type":17,"tag":131,"props":2726,"children":2727},{"style":413},[2728],{"type":23,"value":2729}," // Set the first element of the array to 1\n",{"type":17,"tag":131,"props":2731,"children":2732},{"class":133,"line":182},[2733],{"type":17,"tag":131,"props":2734,"children":2735},{"emptyLinePlaceholder":55},[2736],{"type":23,"value":802},{"type":17,"tag":131,"props":2738,"children":2739},{"class":133,"line":303},[2740,2744,2748,2752,2757,2761,2765],{"type":17,"tag":131,"props":2741,"children":2742},{"style":138},[2743],{"type":23,"value":1107},{"type":17,"tag":131,"props":2745,"children":2746},{"style":150},[2747],{"type":23,"value":1622},{"type":17,"tag":131,"props":2749,"children":2750},{"style":138},[2751],{"type":23,"value":828},{"type":17,"tag":131,"props":2753,"children":2754},{"style":150},[2755],{"type":23,"value":2756}," numbers[",{"type":17,"tag":131,"props":2758,"children":2759},{"style":243},[2760],{"type":23,"value":2011},{"type":17,"tag":131,"props":2762,"children":2763},{"style":150},[2764],{"type":23,"value":2163},{"type":17,"tag":131,"props":2766,"children":2767},{"style":413},[2768],{"type":23,"value":2769},"// Get the first element of the array\n",{"type":17,"tag":190,"props":2771,"children":2772},{"id":1969},[2773],{"type":23,"value":1972},{"type":17,"tag":25,"props":2775,"children":2776},{},[2777],{"type":23,"value":2778},"The following shows an example of the stack allocations growing upwards:",{"type":17,"tag":120,"props":2780,"children":2782},{"className":122,"code":2781,"filename":744,"language":124,"meta":7,"style":7},"int allocate() {\n    // Allocate 10 integers on the stack\n    int[] numbers = stackalloc int[10]\n\n    // Return the address of the stack allocation\n    return get_address(numbers)\n}\n\n// The following call will return address 61294\nallocate()\n\nvoid allocate_call() {\n    // The following call will return address 61294\n    allocate()\n\n    // Because the stack is reset after a function returns,\n    // the following call allocation will also return address 61294\n    int[] numbers = stackalloc int[10]\n\n    // The following call will return address 61304\n    // because we allocated 10 integers in this function\n    allocate()\n}\n\nallocate_call()\n\n// Utility function to get the address of a stack allocation\ninline int get_address(int[] pointer) => asm { AIN @pointer }\n",[2783],{"type":17,"tag":127,"props":2784,"children":2785},{"__ignoreMap":7},[2786,2798,2806,2841,2848,2856,2868,2875,2882,2890,2898,2905,2917,2925,2933,2940,2948,2956,2991,2998,3006,3014,3021,3028,3035,3043,3050,3058],{"type":17,"tag":131,"props":2787,"children":2788},{"class":133,"line":134},[2789,2793],{"type":17,"tag":131,"props":2790,"children":2791},{"style":138},[2792],{"type":23,"value":1107},{"type":17,"tag":131,"props":2794,"children":2795},{"style":150},[2796],{"type":23,"value":2797}," allocate() {\n",{"type":17,"tag":131,"props":2799,"children":2800},{"class":133,"line":35},[2801],{"type":17,"tag":131,"props":2802,"children":2803},{"style":413},[2804],{"type":23,"value":2805},"    // Allocate 10 integers on the stack\n",{"type":17,"tag":131,"props":2807,"children":2808},{"class":133,"line":169},[2809,2813,2817,2821,2825,2829,2833,2837],{"type":17,"tag":131,"props":2810,"children":2811},{"style":138},[2812],{"type":23,"value":161},{"type":17,"tag":131,"props":2814,"children":2815},{"style":150},[2816],{"type":23,"value":2614},{"type":17,"tag":131,"props":2818,"children":2819},{"style":138},[2820],{"type":23,"value":828},{"type":17,"tag":131,"props":2822,"children":2823},{"style":138},[2824],{"type":23,"value":2052},{"type":17,"tag":131,"props":2826,"children":2827},{"style":138},[2828],{"type":23,"value":2627},{"type":17,"tag":131,"props":2830,"children":2831},{"style":150},[2832],{"type":23,"value":2632},{"type":17,"tag":131,"props":2834,"children":2835},{"style":243},[2836],{"type":23,"value":2075},{"type":17,"tag":131,"props":2838,"children":2839},{"style":150},[2840],{"type":23,"value":2080},{"type":17,"tag":131,"props":2842,"children":2843},{"class":133,"line":182},[2844],{"type":17,"tag":131,"props":2845,"children":2846},{"emptyLinePlaceholder":55},[2847],{"type":23,"value":802},{"type":17,"tag":131,"props":2849,"children":2850},{"class":133,"line":303},[2851],{"type":17,"tag":131,"props":2852,"children":2853},{"style":413},[2854],{"type":23,"value":2855},"    // Return the address of the stack allocation\n",{"type":17,"tag":131,"props":2857,"children":2858},{"class":133,"line":328},[2859,2863],{"type":17,"tag":131,"props":2860,"children":2861},{"style":138},[2862],{"type":23,"value":1822},{"type":17,"tag":131,"props":2864,"children":2865},{"style":150},[2866],{"type":23,"value":2867}," get_address(numbers)\n",{"type":17,"tag":131,"props":2869,"children":2870},{"class":133,"line":746},[2871],{"type":17,"tag":131,"props":2872,"children":2873},{"style":150},[2874],{"type":23,"value":188},{"type":17,"tag":131,"props":2876,"children":2877},{"class":133,"line":863},[2878],{"type":17,"tag":131,"props":2879,"children":2880},{"emptyLinePlaceholder":55},[2881],{"type":23,"value":802},{"type":17,"tag":131,"props":2883,"children":2884},{"class":133,"line":994},[2885],{"type":17,"tag":131,"props":2886,"children":2887},{"style":413},[2888],{"type":23,"value":2889},"// The following call will return address 61294\n",{"type":17,"tag":131,"props":2891,"children":2892},{"class":133,"line":1240},[2893],{"type":17,"tag":131,"props":2894,"children":2895},{"style":150},[2896],{"type":23,"value":2897},"allocate()\n",{"type":17,"tag":131,"props":2899,"children":2900},{"class":133,"line":1248},[2901],{"type":17,"tag":131,"props":2902,"children":2903},{"emptyLinePlaceholder":55},[2904],{"type":23,"value":802},{"type":17,"tag":131,"props":2906,"children":2907},{"class":133,"line":1270},[2908,2912],{"type":17,"tag":131,"props":2909,"children":2910},{"style":138},[2911],{"type":23,"value":1515},{"type":17,"tag":131,"props":2913,"children":2914},{"style":150},[2915],{"type":23,"value":2916}," allocate_call() {\n",{"type":17,"tag":131,"props":2918,"children":2919},{"class":133,"line":1297},[2920],{"type":17,"tag":131,"props":2921,"children":2922},{"style":413},[2923],{"type":23,"value":2924},"    // The following call will return address 61294\n",{"type":17,"tag":131,"props":2926,"children":2927},{"class":133,"line":1324},[2928],{"type":17,"tag":131,"props":2929,"children":2930},{"style":150},[2931],{"type":23,"value":2932},"    allocate()\n",{"type":17,"tag":131,"props":2934,"children":2935},{"class":133,"line":1332},[2936],{"type":17,"tag":131,"props":2937,"children":2938},{"emptyLinePlaceholder":55},[2939],{"type":23,"value":802},{"type":17,"tag":131,"props":2941,"children":2942},{"class":133,"line":1340},[2943],{"type":17,"tag":131,"props":2944,"children":2945},{"style":413},[2946],{"type":23,"value":2947},"    // Because the stack is reset after a function returns,\n",{"type":17,"tag":131,"props":2949,"children":2950},{"class":133,"line":1349},[2951],{"type":17,"tag":131,"props":2952,"children":2953},{"style":413},[2954],{"type":23,"value":2955},"    // the following call allocation will also return address 61294\n",{"type":17,"tag":131,"props":2957,"children":2958},{"class":133,"line":2261},[2959,2963,2967,2971,2975,2979,2983,2987],{"type":17,"tag":131,"props":2960,"children":2961},{"style":138},[2962],{"type":23,"value":161},{"type":17,"tag":131,"props":2964,"children":2965},{"style":150},[2966],{"type":23,"value":2614},{"type":17,"tag":131,"props":2968,"children":2969},{"style":138},[2970],{"type":23,"value":828},{"type":17,"tag":131,"props":2972,"children":2973},{"style":138},[2974],{"type":23,"value":2052},{"type":17,"tag":131,"props":2976,"children":2977},{"style":138},[2978],{"type":23,"value":2627},{"type":17,"tag":131,"props":2980,"children":2981},{"style":150},[2982],{"type":23,"value":2632},{"type":17,"tag":131,"props":2984,"children":2985},{"style":243},[2986],{"type":23,"value":2075},{"type":17,"tag":131,"props":2988,"children":2989},{"style":150},[2990],{"type":23,"value":2080},{"type":17,"tag":131,"props":2992,"children":2993},{"class":133,"line":2270},[2994],{"type":17,"tag":131,"props":2995,"children":2996},{"emptyLinePlaceholder":55},[2997],{"type":23,"value":802},{"type":17,"tag":131,"props":2999,"children":3000},{"class":133,"line":2288},[3001],{"type":17,"tag":131,"props":3002,"children":3003},{"style":413},[3004],{"type":23,"value":3005},"    // The following call will return address 61304\n",{"type":17,"tag":131,"props":3007,"children":3008},{"class":133,"line":2328},[3009],{"type":17,"tag":131,"props":3010,"children":3011},{"style":413},[3012],{"type":23,"value":3013},"    // because we allocated 10 integers in this function\n",{"type":17,"tag":131,"props":3015,"children":3016},{"class":133,"line":2352},[3017],{"type":17,"tag":131,"props":3018,"children":3019},{"style":150},[3020],{"type":23,"value":2932},{"type":17,"tag":131,"props":3022,"children":3023},{"class":133,"line":2360},[3024],{"type":17,"tag":131,"props":3025,"children":3026},{"style":150},[3027],{"type":23,"value":188},{"type":17,"tag":131,"props":3029,"children":3030},{"class":133,"line":2369},[3031],{"type":17,"tag":131,"props":3032,"children":3033},{"emptyLinePlaceholder":55},[3034],{"type":23,"value":802},{"type":17,"tag":131,"props":3036,"children":3037},{"class":133,"line":2377},[3038],{"type":17,"tag":131,"props":3039,"children":3040},{"style":150},[3041],{"type":23,"value":3042},"allocate_call()\n",{"type":17,"tag":131,"props":3044,"children":3045},{"class":133,"line":2386},[3046],{"type":17,"tag":131,"props":3047,"children":3048},{"emptyLinePlaceholder":55},[3049],{"type":23,"value":802},{"type":17,"tag":131,"props":3051,"children":3052},{"class":133,"line":2395},[3053],{"type":17,"tag":131,"props":3054,"children":3055},{"style":413},[3056],{"type":23,"value":3057},"// Utility function to get the address of a stack allocation\n",{"type":17,"tag":131,"props":3059,"children":3060},{"class":133,"line":2416},[3061,3066,3070,3075,3079,3084,3088,3093,3098,3102,3107],{"type":17,"tag":131,"props":3062,"children":3063},{"style":138},[3064],{"type":23,"value":3065},"inline",{"type":17,"tag":131,"props":3067,"children":3068},{"style":138},[3069],{"type":23,"value":2627},{"type":17,"tag":131,"props":3071,"children":3072},{"style":150},[3073],{"type":23,"value":3074}," get_address(",{"type":17,"tag":131,"props":3076,"children":3077},{"style":138},[3078],{"type":23,"value":1107},{"type":17,"tag":131,"props":3080,"children":3081},{"style":150},[3082],{"type":23,"value":3083},"[] pointer) ",{"type":17,"tag":131,"props":3085,"children":3086},{"style":138},[3087],{"type":23,"value":828},{"type":17,"tag":131,"props":3089,"children":3090},{"style":150},[3091],{"type":23,"value":3092},"> ",{"type":17,"tag":131,"props":3094,"children":3095},{"style":138},[3096],{"type":23,"value":3097},"asm",{"type":17,"tag":131,"props":3099,"children":3100},{"style":150},[3101],{"type":23,"value":833},{"type":17,"tag":131,"props":3103,"children":3104},{"style":138},[3105],{"type":23,"value":3106},"AIN",{"type":17,"tag":131,"props":3108,"children":3109},{"style":150},[3110],{"type":23,"value":3111}," @pointer }\n",{"type":17,"tag":1369,"props":3113,"children":3114},{},[3115],{"type":23,"value":1373},{"title":7,"searchDepth":35,"depth":35,"links":3117},[3118,3119,3120],{"id":2580,"depth":35,"text":2583},{"id":2643,"depth":35,"text":2646},{"id":1969,"depth":35,"text":1972},"content:docs:3.language-reference:3.stack-allocations.md","docs/3.language-reference/3.stack-allocations.md",1702088644834]