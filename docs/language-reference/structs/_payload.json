[{"data":1,"prerenderedAt":571},["Reactive",2],{"content-query-F8MIrzCjkh":3,"content-navigation-8C37fagqQL":534},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"navigation":11,"body":13,"_type":529,"_id":530,"_source":531,"_file":532,"_extension":533},"/docs/language-reference/structs","language-reference",false,"","Structs","Learn more about structs.",[5],{"sidebar":12},true,{"type":14,"children":15,"toc":524},"root",[16,24,30,101,108,113,246,267,274,279,393,398,518],{"type":17,"tag":18,"props":19,"children":21},"element","h1",{"id":20},"structs",[22],{"type":23,"value":8},"text",{"type":17,"tag":25,"props":26,"children":27},"p",{},[28],{"type":23,"value":29},"A struct is a data structure that can contain multiple fields. A struct can be used to group related data together. For example, the following struct can be used to represent a 2D point:",{"type":17,"tag":31,"props":32,"children":36},"pre",{"className":33,"code":34,"language":35,"meta":7,"style":7},"language-yabal shiki shiki-themes github-light github-dark","struct Point {\n    int x;\n    int y;\n}\n","yabal",[37],{"type":17,"tag":38,"props":39,"children":40},"code",{"__ignoreMap":7},[41,65,79,92],{"type":17,"tag":42,"props":43,"children":46},"span",{"class":44,"line":45},"line",1,[47,53,59],{"type":17,"tag":42,"props":48,"children":50},{"style":49},"--shiki-default:#D73A49;--shiki-dark:#F97583",[51],{"type":23,"value":52},"struct",{"type":17,"tag":42,"props":54,"children":56},{"style":55},"--shiki-default:#6F42C1;--shiki-dark:#B392F0",[57],{"type":23,"value":58}," Point",{"type":17,"tag":42,"props":60,"children":62},{"style":61},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[63],{"type":23,"value":64}," {\n",{"type":17,"tag":42,"props":66,"children":68},{"class":44,"line":67},2,[69,74],{"type":17,"tag":42,"props":70,"children":71},{"style":49},[72],{"type":23,"value":73},"    int",{"type":17,"tag":42,"props":75,"children":76},{"style":61},[77],{"type":23,"value":78}," x;\n",{"type":17,"tag":42,"props":80,"children":82},{"class":44,"line":81},3,[83,87],{"type":17,"tag":42,"props":84,"children":85},{"style":49},[86],{"type":23,"value":73},{"type":17,"tag":42,"props":88,"children":89},{"style":61},[90],{"type":23,"value":91}," y;\n",{"type":17,"tag":42,"props":93,"children":95},{"class":44,"line":94},4,[96],{"type":17,"tag":42,"props":97,"children":98},{"style":61},[99],{"type":23,"value":100},"}\n",{"type":17,"tag":102,"props":103,"children":105},"h2",{"id":104},"bit-fields",[106],{"type":23,"value":107},"Bit-fields",{"type":17,"tag":25,"props":109,"children":110},{},[111],{"type":23,"value":112},"It is also possible to declare a field with a bit-width. This is useful if you want to read data from a hardware device, such as a mouse. For example, the following struct can be used to read the position of a mouse, and the state of its left and right buttons:",{"type":17,"tag":31,"props":114,"children":116},{"className":33,"code":115,"language":35,"meta":7,"style":7},"struct MouseInput {\n    int y : 7;\n    int x : 7;\n    int left : 1;\n    int right : 1;\n}\n",[117],{"type":17,"tag":38,"props":118,"children":119},{"__ignoreMap":7},[120,136,164,188,213,238],{"type":17,"tag":42,"props":121,"children":122},{"class":44,"line":45},[123,127,132],{"type":17,"tag":42,"props":124,"children":125},{"style":49},[126],{"type":23,"value":52},{"type":17,"tag":42,"props":128,"children":129},{"style":55},[130],{"type":23,"value":131}," MouseInput",{"type":17,"tag":42,"props":133,"children":134},{"style":61},[135],{"type":23,"value":64},{"type":17,"tag":42,"props":137,"children":138},{"class":44,"line":67},[139,143,148,153,159],{"type":17,"tag":42,"props":140,"children":141},{"style":49},[142],{"type":23,"value":73},{"type":17,"tag":42,"props":144,"children":145},{"style":61},[146],{"type":23,"value":147}," y ",{"type":17,"tag":42,"props":149,"children":150},{"style":49},[151],{"type":23,"value":152},":",{"type":17,"tag":42,"props":154,"children":156},{"style":155},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[157],{"type":23,"value":158}," 7",{"type":17,"tag":42,"props":160,"children":161},{"style":61},[162],{"type":23,"value":163},";\n",{"type":17,"tag":42,"props":165,"children":166},{"class":44,"line":81},[167,171,176,180,184],{"type":17,"tag":42,"props":168,"children":169},{"style":49},[170],{"type":23,"value":73},{"type":17,"tag":42,"props":172,"children":173},{"style":61},[174],{"type":23,"value":175}," x ",{"type":17,"tag":42,"props":177,"children":178},{"style":49},[179],{"type":23,"value":152},{"type":17,"tag":42,"props":181,"children":182},{"style":155},[183],{"type":23,"value":158},{"type":17,"tag":42,"props":185,"children":186},{"style":61},[187],{"type":23,"value":163},{"type":17,"tag":42,"props":189,"children":190},{"class":44,"line":94},[191,195,200,204,209],{"type":17,"tag":42,"props":192,"children":193},{"style":49},[194],{"type":23,"value":73},{"type":17,"tag":42,"props":196,"children":197},{"style":61},[198],{"type":23,"value":199}," left ",{"type":17,"tag":42,"props":201,"children":202},{"style":49},[203],{"type":23,"value":152},{"type":17,"tag":42,"props":205,"children":206},{"style":155},[207],{"type":23,"value":208}," 1",{"type":17,"tag":42,"props":210,"children":211},{"style":61},[212],{"type":23,"value":163},{"type":17,"tag":42,"props":214,"children":216},{"class":44,"line":215},5,[217,221,226,230,234],{"type":17,"tag":42,"props":218,"children":219},{"style":49},[220],{"type":23,"value":73},{"type":17,"tag":42,"props":222,"children":223},{"style":61},[224],{"type":23,"value":225}," right ",{"type":17,"tag":42,"props":227,"children":228},{"style":49},[229],{"type":23,"value":152},{"type":17,"tag":42,"props":231,"children":232},{"style":155},[233],{"type":23,"value":208},{"type":17,"tag":42,"props":235,"children":236},{"style":61},[237],{"type":23,"value":163},{"type":17,"tag":42,"props":239,"children":241},{"class":44,"line":240},6,[242],{"type":17,"tag":42,"props":243,"children":244},{"style":61},[245],{"type":23,"value":100},{"type":17,"tag":247,"props":248,"children":249},"warning",{},[250],{"type":17,"tag":25,"props":251,"children":252},{},[253,259,261,265],{"type":17,"tag":254,"props":255,"children":256},"strong",{},[257],{"type":23,"value":258},"Note:",{"type":23,"value":260}," When declaring a field with a bit-width, the compiler will automatically add bit-wise operations to get and set the value of the field. This means that the field will be slower to access than a normal field.",{"type":17,"tag":262,"props":263,"children":264},"br",{},[],{"type":23,"value":266},"\nIt is not recommended to use bit-fields unless you are reading data from a hardware device.",{"type":17,"tag":268,"props":269,"children":271},"h3",{"id":270},"bit-offsets",[272],{"type":23,"value":273},"Bit offsets",{"type":17,"tag":25,"props":275,"children":276},{},[277],{"type":23,"value":278},"Bit-fields are aligned by 16 bits. It is not possible to start a bit-field outside the 16 bit range. For example:",{"type":17,"tag":31,"props":280,"children":282},{"className":33,"code":281,"language":35,"meta":7,"style":7},"// Note: the following example will not compile\nstruct InvalidExample {\n    int a : 7 // This is valid, offset 0 with 7 bits\n    int b : 7 // This is valid, offset 7 with 7 bits\n    int c : 7 // This is invalid, offset 14 with 7 bits: 14 + 7 > 16\n}\n",[283],{"type":17,"tag":38,"props":284,"children":285},{"__ignoreMap":7},[286,295,311,336,361,386],{"type":17,"tag":42,"props":287,"children":288},{"class":44,"line":45},[289],{"type":17,"tag":42,"props":290,"children":292},{"style":291},"--shiki-default:#6A737D;--shiki-dark:#6A737D",[293],{"type":23,"value":294},"// Note: the following example will not compile\n",{"type":17,"tag":42,"props":296,"children":297},{"class":44,"line":67},[298,302,307],{"type":17,"tag":42,"props":299,"children":300},{"style":49},[301],{"type":23,"value":52},{"type":17,"tag":42,"props":303,"children":304},{"style":55},[305],{"type":23,"value":306}," InvalidExample",{"type":17,"tag":42,"props":308,"children":309},{"style":61},[310],{"type":23,"value":64},{"type":17,"tag":42,"props":312,"children":313},{"class":44,"line":81},[314,318,323,327,331],{"type":17,"tag":42,"props":315,"children":316},{"style":49},[317],{"type":23,"value":73},{"type":17,"tag":42,"props":319,"children":320},{"style":61},[321],{"type":23,"value":322}," a ",{"type":17,"tag":42,"props":324,"children":325},{"style":49},[326],{"type":23,"value":152},{"type":17,"tag":42,"props":328,"children":329},{"style":155},[330],{"type":23,"value":158},{"type":17,"tag":42,"props":332,"children":333},{"style":291},[334],{"type":23,"value":335}," // This is valid, offset 0 with 7 bits\n",{"type":17,"tag":42,"props":337,"children":338},{"class":44,"line":94},[339,343,348,352,356],{"type":17,"tag":42,"props":340,"children":341},{"style":49},[342],{"type":23,"value":73},{"type":17,"tag":42,"props":344,"children":345},{"style":61},[346],{"type":23,"value":347}," b ",{"type":17,"tag":42,"props":349,"children":350},{"style":49},[351],{"type":23,"value":152},{"type":17,"tag":42,"props":353,"children":354},{"style":155},[355],{"type":23,"value":158},{"type":17,"tag":42,"props":357,"children":358},{"style":291},[359],{"type":23,"value":360}," // This is valid, offset 7 with 7 bits\n",{"type":17,"tag":42,"props":362,"children":363},{"class":44,"line":215},[364,368,373,377,381],{"type":17,"tag":42,"props":365,"children":366},{"style":49},[367],{"type":23,"value":73},{"type":17,"tag":42,"props":369,"children":370},{"style":61},[371],{"type":23,"value":372}," c ",{"type":17,"tag":42,"props":374,"children":375},{"style":49},[376],{"type":23,"value":152},{"type":17,"tag":42,"props":378,"children":379},{"style":155},[380],{"type":23,"value":158},{"type":17,"tag":42,"props":382,"children":383},{"style":291},[384],{"type":23,"value":385}," // This is invalid, offset 14 with 7 bits: 14 + 7 > 16\n",{"type":17,"tag":42,"props":387,"children":388},{"class":44,"line":240},[389],{"type":17,"tag":42,"props":390,"children":391},{"style":61},[392],{"type":23,"value":100},{"type":17,"tag":25,"props":394,"children":395},{},[396],{"type":23,"value":397},"When a normal field is introduced, the bit-field offset is reset to the 16 bit boundary. For example:",{"type":17,"tag":31,"props":399,"children":401},{"className":33,"code":400,"language":35,"meta":7,"style":7},"struct Example {\n    int a : 7   //          Offset 0,    7 bits\n    int b : 7   //          Offset 7,    7 bits\n    int c       // Reset,   Offset 16,   16 bits\n    int d : 7   //          Offset 32,   7 bits\n}\n",[402],{"type":17,"tag":38,"props":403,"children":404},{"__ignoreMap":7},[405,421,445,469,486,511],{"type":17,"tag":42,"props":406,"children":407},{"class":44,"line":45},[408,412,417],{"type":17,"tag":42,"props":409,"children":410},{"style":49},[411],{"type":23,"value":52},{"type":17,"tag":42,"props":413,"children":414},{"style":55},[415],{"type":23,"value":416}," Example",{"type":17,"tag":42,"props":418,"children":419},{"style":61},[420],{"type":23,"value":64},{"type":17,"tag":42,"props":422,"children":423},{"class":44,"line":67},[424,428,432,436,440],{"type":17,"tag":42,"props":425,"children":426},{"style":49},[427],{"type":23,"value":73},{"type":17,"tag":42,"props":429,"children":430},{"style":61},[431],{"type":23,"value":322},{"type":17,"tag":42,"props":433,"children":434},{"style":49},[435],{"type":23,"value":152},{"type":17,"tag":42,"props":437,"children":438},{"style":155},[439],{"type":23,"value":158},{"type":17,"tag":42,"props":441,"children":442},{"style":291},[443],{"type":23,"value":444},"   //          Offset 0,    7 bits\n",{"type":17,"tag":42,"props":446,"children":447},{"class":44,"line":81},[448,452,456,460,464],{"type":17,"tag":42,"props":449,"children":450},{"style":49},[451],{"type":23,"value":73},{"type":17,"tag":42,"props":453,"children":454},{"style":61},[455],{"type":23,"value":347},{"type":17,"tag":42,"props":457,"children":458},{"style":49},[459],{"type":23,"value":152},{"type":17,"tag":42,"props":461,"children":462},{"style":155},[463],{"type":23,"value":158},{"type":17,"tag":42,"props":465,"children":466},{"style":291},[467],{"type":23,"value":468},"   //          Offset 7,    7 bits\n",{"type":17,"tag":42,"props":470,"children":471},{"class":44,"line":94},[472,476,481],{"type":17,"tag":42,"props":473,"children":474},{"style":49},[475],{"type":23,"value":73},{"type":17,"tag":42,"props":477,"children":478},{"style":61},[479],{"type":23,"value":480}," c       ",{"type":17,"tag":42,"props":482,"children":483},{"style":291},[484],{"type":23,"value":485},"// Reset,   Offset 16,   16 bits\n",{"type":17,"tag":42,"props":487,"children":488},{"class":44,"line":215},[489,493,498,502,506],{"type":17,"tag":42,"props":490,"children":491},{"style":49},[492],{"type":23,"value":73},{"type":17,"tag":42,"props":494,"children":495},{"style":61},[496],{"type":23,"value":497}," d ",{"type":17,"tag":42,"props":499,"children":500},{"style":49},[501],{"type":23,"value":152},{"type":17,"tag":42,"props":503,"children":504},{"style":155},[505],{"type":23,"value":158},{"type":17,"tag":42,"props":507,"children":508},{"style":291},[509],{"type":23,"value":510},"   //          Offset 32,   7 bits\n",{"type":17,"tag":42,"props":512,"children":513},{"class":44,"line":240},[514],{"type":17,"tag":42,"props":515,"children":516},{"style":61},[517],{"type":23,"value":100},{"type":17,"tag":519,"props":520,"children":521},"style",{},[522],{"type":23,"value":523},"html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":67,"depth":67,"links":525},[526],{"id":104,"depth":67,"text":107,"children":527},[528],{"id":270,"depth":81,"text":273},"markdown","content:docs:3.language-reference:1.structs.md","content","docs/3.language-reference/1.structs.md","md",[535],{"title":536,"_path":537,"children":538,"root":12},"Documentation","/docs",[539,540,554,560],{"title":536,"_path":537},{"title":541,"_path":542,"children":543,"sidebar":6},"Getting started","/docs/get-started",[544,547,550,553],{"title":545,"_path":546,"sidebar":12},"Downloads","/docs/get-started/downloads",{"title":548,"_path":549,"sidebar":12},"Emulator","/docs/get-started/emulator",{"title":551,"_path":552,"sidebar":12},"Basics of Yabal","/docs/get-started/basics-of-yabal",{"title":541,"_path":542,"sidebar":6},{"title":555,"_path":556,"children":557,"sidebar":6},"Language reference","/docs/language-reference",[558,559],{"title":8,"_path":4,"sidebar":12},{"title":555,"_path":556,"sidebar":6},{"title":561,"_path":562,"children":563,"sidebar":6},"Advanced topics","/docs/advanced-topics",[564,567,570],{"title":565,"_path":566,"sidebar":12},"Assembly mode","/docs/advanced-topics/assembly-mode",{"title":568,"_path":569,"sidebar":12},"Optimizing","/docs/advanced-topics/optimizing",{"title":561,"_path":562,"sidebar":6},1698278553438]