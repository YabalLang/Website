[{"data":1,"prerenderedAt":697},["Reactive",2],{"content-query-BlDnTVezWW":3,"content-navigation-8C37fagqQL":646},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"tags":10,"navigation":11,"body":13,"_type":641,"_id":642,"_source":643,"_file":644,"_extension":645},"/docs/language-reference/stack-allocations","language-reference",false,"","Stack allocations","Learn more about stack allocations.",[5],{"sidebar":12},true,{"type":14,"children":15,"toc":636},"root",[16,24,30,35,40,47,60,119,125,130,259,265,270,630],{"type":17,"tag":18,"props":19,"children":21},"element","h1",{"id":20},"stack-allocations",[22],{"type":23,"value":8},"text",{"type":17,"tag":25,"props":26,"children":27},"p",{},[28],{"type":23,"value":29},"Stack allocations are used to allocate memory on the stack. They are useful for storing temporary values that are only needed for a short period of time.",{"type":17,"tag":25,"props":31,"children":32},{},[33],{"type":23,"value":34},"The stack allocations start at address 61294 and end at address 65535. The stack grows upwards, so the first stack allocation is at address 61294 and the last stack allocation is at address 65535.",{"type":17,"tag":25,"props":36,"children":37},{},[38],{"type":23,"value":39},"When a function is called, the current stack pointer is stored. When the function returns, the stack pointer is reset to the stored value. This means that stack allocations are only valid within the function they are declared in.",{"type":17,"tag":41,"props":42,"children":44},"h2",{"id":43},"declaring-a-stack-allocation",[45],{"type":23,"value":46},"Declaring a stack allocation",{"type":17,"tag":25,"props":48,"children":49},{},[50,52,58],{"type":23,"value":51},"A stack allocation is declared using the ",{"type":17,"tag":53,"props":54,"children":55},"code",{"className":7},[56],{"type":23,"value":57},"stackalloc",{"type":23,"value":59}," keyword, followed by the type of the allocation and the name of the allocation:",{"type":17,"tag":61,"props":62,"children":66},"pre",{"className":63,"code":64,"language":65,"meta":7,"style":7},"language-yabal shiki shiki-themes github-light github-dark","int[] numbers = stackalloc int[10]\n","yabal",[67],{"type":17,"tag":53,"props":68,"children":69},{"__ignoreMap":7},[70],{"type":17,"tag":71,"props":72,"children":75},"span",{"class":73,"line":74},"line",1,[76,82,88,93,98,103,108,114],{"type":17,"tag":71,"props":77,"children":79},{"style":78},"--shiki-default:#D73A49;--shiki-dark:#F97583",[80],{"type":23,"value":81},"int",{"type":17,"tag":71,"props":83,"children":85},{"style":84},"--shiki-default:#24292E;--shiki-dark:#E1E4E8",[86],{"type":23,"value":87},"[] numbers ",{"type":17,"tag":71,"props":89,"children":90},{"style":78},[91],{"type":23,"value":92},"=",{"type":17,"tag":71,"props":94,"children":95},{"style":78},[96],{"type":23,"value":97}," stackalloc",{"type":17,"tag":71,"props":99,"children":100},{"style":78},[101],{"type":23,"value":102}," int",{"type":17,"tag":71,"props":104,"children":105},{"style":84},[106],{"type":23,"value":107},"[",{"type":17,"tag":71,"props":109,"children":111},{"style":110},"--shiki-default:#005CC5;--shiki-dark:#79B8FF",[112],{"type":23,"value":113},"10",{"type":17,"tag":71,"props":115,"children":116},{"style":84},[117],{"type":23,"value":118},"]\n",{"type":17,"tag":41,"props":120,"children":122},{"id":121},"assigning-a-stack-allocation",[123],{"type":23,"value":124},"Assigning a stack allocation",{"type":17,"tag":25,"props":126,"children":127},{},[128],{"type":23,"value":129},"Since stack allocations are pointers, they can be used like any other pointer:",{"type":17,"tag":61,"props":131,"children":134},{"className":63,"code":132,"filename":133,"language":65,"meta":7,"style":7},"int[] numbers = stackalloc int[10]\n\nnumbers[0] = 1 // Set the first element of the array to 1\n\nint result = numbers[0] // Get the first element of the array\n","run",[135],{"type":17,"tag":53,"props":136,"children":137},{"__ignoreMap":7},[138,173,182,216,224],{"type":17,"tag":71,"props":139,"children":140},{"class":73,"line":74},[141,145,149,153,157,161,165,169],{"type":17,"tag":71,"props":142,"children":143},{"style":78},[144],{"type":23,"value":81},{"type":17,"tag":71,"props":146,"children":147},{"style":84},[148],{"type":23,"value":87},{"type":17,"tag":71,"props":150,"children":151},{"style":78},[152],{"type":23,"value":92},{"type":17,"tag":71,"props":154,"children":155},{"style":78},[156],{"type":23,"value":97},{"type":17,"tag":71,"props":158,"children":159},{"style":78},[160],{"type":23,"value":102},{"type":17,"tag":71,"props":162,"children":163},{"style":84},[164],{"type":23,"value":107},{"type":17,"tag":71,"props":166,"children":167},{"style":110},[168],{"type":23,"value":113},{"type":17,"tag":71,"props":170,"children":171},{"style":84},[172],{"type":23,"value":118},{"type":17,"tag":71,"props":174,"children":176},{"class":73,"line":175},2,[177],{"type":17,"tag":71,"props":178,"children":179},{"emptyLinePlaceholder":12},[180],{"type":23,"value":181},"\n",{"type":17,"tag":71,"props":183,"children":185},{"class":73,"line":184},3,[186,191,196,201,205,210],{"type":17,"tag":71,"props":187,"children":188},{"style":84},[189],{"type":23,"value":190},"numbers[",{"type":17,"tag":71,"props":192,"children":193},{"style":110},[194],{"type":23,"value":195},"0",{"type":17,"tag":71,"props":197,"children":198},{"style":84},[199],{"type":23,"value":200},"] ",{"type":17,"tag":71,"props":202,"children":203},{"style":78},[204],{"type":23,"value":92},{"type":17,"tag":71,"props":206,"children":207},{"style":110},[208],{"type":23,"value":209}," 1",{"type":17,"tag":71,"props":211,"children":213},{"style":212},"--shiki-default:#6A737D;--shiki-dark:#6A737D",[214],{"type":23,"value":215}," // Set the first element of the array to 1\n",{"type":17,"tag":71,"props":217,"children":219},{"class":73,"line":218},4,[220],{"type":17,"tag":71,"props":221,"children":222},{"emptyLinePlaceholder":12},[223],{"type":23,"value":181},{"type":17,"tag":71,"props":225,"children":227},{"class":73,"line":226},5,[228,232,237,241,246,250,254],{"type":17,"tag":71,"props":229,"children":230},{"style":78},[231],{"type":23,"value":81},{"type":17,"tag":71,"props":233,"children":234},{"style":84},[235],{"type":23,"value":236}," result ",{"type":17,"tag":71,"props":238,"children":239},{"style":78},[240],{"type":23,"value":92},{"type":17,"tag":71,"props":242,"children":243},{"style":84},[244],{"type":23,"value":245}," numbers[",{"type":17,"tag":71,"props":247,"children":248},{"style":110},[249],{"type":23,"value":195},{"type":17,"tag":71,"props":251,"children":252},{"style":84},[253],{"type":23,"value":200},{"type":17,"tag":71,"props":255,"children":256},{"style":212},[257],{"type":23,"value":258},"// Get the first element of the array\n",{"type":17,"tag":41,"props":260,"children":262},{"id":261},"example",[263],{"type":23,"value":264},"Example",{"type":17,"tag":25,"props":266,"children":267},{},[268],{"type":23,"value":269},"The following shows an example of the stack allocations growing upwards:",{"type":17,"tag":61,"props":271,"children":273},{"className":63,"code":272,"filename":133,"language":65,"meta":7,"style":7},"int allocate() {\n    // Allocate 10 integers on the stack\n    int[] numbers = stackalloc int[10]\n\n    // Return the address of the stack allocation\n    return get_address(numbers)\n}\n\n// The following call will return address 61294\nallocate()\n\nint allocate_call() {\n    // The following call will return address 61294\n    allocate()\n\n    // Because the stack is reset after a function returns,\n    // the following call allocation will also return address 61294\n    int[] numbers = stackalloc int[10]\n\n    // The following call will return address 61304\n    // because we allocated 10 integers in this function\n    allocate()\n}\n\nallocate_call()\n\n// Utility function to get the address of a stack allocation\ninline int get_address(int[] pointer) => asm { AIN @pointer }\n",[274],{"type":17,"tag":53,"props":275,"children":276},{"__ignoreMap":7},[277,289,297,333,340,348,362,371,379,388,397,405,418,427,436,444,453,462,498,506,515,524,532,540,548,557,565,574],{"type":17,"tag":71,"props":278,"children":279},{"class":73,"line":74},[280,284],{"type":17,"tag":71,"props":281,"children":282},{"style":78},[283],{"type":23,"value":81},{"type":17,"tag":71,"props":285,"children":286},{"style":84},[287],{"type":23,"value":288}," allocate() {\n",{"type":17,"tag":71,"props":290,"children":291},{"class":73,"line":175},[292],{"type":17,"tag":71,"props":293,"children":294},{"style":212},[295],{"type":23,"value":296},"    // Allocate 10 integers on the stack\n",{"type":17,"tag":71,"props":298,"children":299},{"class":73,"line":184},[300,305,309,313,317,321,325,329],{"type":17,"tag":71,"props":301,"children":302},{"style":78},[303],{"type":23,"value":304},"    int",{"type":17,"tag":71,"props":306,"children":307},{"style":84},[308],{"type":23,"value":87},{"type":17,"tag":71,"props":310,"children":311},{"style":78},[312],{"type":23,"value":92},{"type":17,"tag":71,"props":314,"children":315},{"style":78},[316],{"type":23,"value":97},{"type":17,"tag":71,"props":318,"children":319},{"style":78},[320],{"type":23,"value":102},{"type":17,"tag":71,"props":322,"children":323},{"style":84},[324],{"type":23,"value":107},{"type":17,"tag":71,"props":326,"children":327},{"style":110},[328],{"type":23,"value":113},{"type":17,"tag":71,"props":330,"children":331},{"style":84},[332],{"type":23,"value":118},{"type":17,"tag":71,"props":334,"children":335},{"class":73,"line":218},[336],{"type":17,"tag":71,"props":337,"children":338},{"emptyLinePlaceholder":12},[339],{"type":23,"value":181},{"type":17,"tag":71,"props":341,"children":342},{"class":73,"line":226},[343],{"type":17,"tag":71,"props":344,"children":345},{"style":212},[346],{"type":23,"value":347},"    // Return the address of the stack allocation\n",{"type":17,"tag":71,"props":349,"children":351},{"class":73,"line":350},6,[352,357],{"type":17,"tag":71,"props":353,"children":354},{"style":78},[355],{"type":23,"value":356},"    return",{"type":17,"tag":71,"props":358,"children":359},{"style":84},[360],{"type":23,"value":361}," get_address(numbers)\n",{"type":17,"tag":71,"props":363,"children":365},{"class":73,"line":364},7,[366],{"type":17,"tag":71,"props":367,"children":368},{"style":84},[369],{"type":23,"value":370},"}\n",{"type":17,"tag":71,"props":372,"children":374},{"class":73,"line":373},8,[375],{"type":17,"tag":71,"props":376,"children":377},{"emptyLinePlaceholder":12},[378],{"type":23,"value":181},{"type":17,"tag":71,"props":380,"children":382},{"class":73,"line":381},9,[383],{"type":17,"tag":71,"props":384,"children":385},{"style":212},[386],{"type":23,"value":387},"// The following call will return address 61294\n",{"type":17,"tag":71,"props":389,"children":391},{"class":73,"line":390},10,[392],{"type":17,"tag":71,"props":393,"children":394},{"style":84},[395],{"type":23,"value":396},"allocate()\n",{"type":17,"tag":71,"props":398,"children":400},{"class":73,"line":399},11,[401],{"type":17,"tag":71,"props":402,"children":403},{"emptyLinePlaceholder":12},[404],{"type":23,"value":181},{"type":17,"tag":71,"props":406,"children":408},{"class":73,"line":407},12,[409,413],{"type":17,"tag":71,"props":410,"children":411},{"style":78},[412],{"type":23,"value":81},{"type":17,"tag":71,"props":414,"children":415},{"style":84},[416],{"type":23,"value":417}," allocate_call() {\n",{"type":17,"tag":71,"props":419,"children":421},{"class":73,"line":420},13,[422],{"type":17,"tag":71,"props":423,"children":424},{"style":212},[425],{"type":23,"value":426},"    // The following call will return address 61294\n",{"type":17,"tag":71,"props":428,"children":430},{"class":73,"line":429},14,[431],{"type":17,"tag":71,"props":432,"children":433},{"style":84},[434],{"type":23,"value":435},"    allocate()\n",{"type":17,"tag":71,"props":437,"children":439},{"class":73,"line":438},15,[440],{"type":17,"tag":71,"props":441,"children":442},{"emptyLinePlaceholder":12},[443],{"type":23,"value":181},{"type":17,"tag":71,"props":445,"children":447},{"class":73,"line":446},16,[448],{"type":17,"tag":71,"props":449,"children":450},{"style":212},[451],{"type":23,"value":452},"    // Because the stack is reset after a function returns,\n",{"type":17,"tag":71,"props":454,"children":456},{"class":73,"line":455},17,[457],{"type":17,"tag":71,"props":458,"children":459},{"style":212},[460],{"type":23,"value":461},"    // the following call allocation will also return address 61294\n",{"type":17,"tag":71,"props":463,"children":465},{"class":73,"line":464},18,[466,470,474,478,482,486,490,494],{"type":17,"tag":71,"props":467,"children":468},{"style":78},[469],{"type":23,"value":304},{"type":17,"tag":71,"props":471,"children":472},{"style":84},[473],{"type":23,"value":87},{"type":17,"tag":71,"props":475,"children":476},{"style":78},[477],{"type":23,"value":92},{"type":17,"tag":71,"props":479,"children":480},{"style":78},[481],{"type":23,"value":97},{"type":17,"tag":71,"props":483,"children":484},{"style":78},[485],{"type":23,"value":102},{"type":17,"tag":71,"props":487,"children":488},{"style":84},[489],{"type":23,"value":107},{"type":17,"tag":71,"props":491,"children":492},{"style":110},[493],{"type":23,"value":113},{"type":17,"tag":71,"props":495,"children":496},{"style":84},[497],{"type":23,"value":118},{"type":17,"tag":71,"props":499,"children":501},{"class":73,"line":500},19,[502],{"type":17,"tag":71,"props":503,"children":504},{"emptyLinePlaceholder":12},[505],{"type":23,"value":181},{"type":17,"tag":71,"props":507,"children":509},{"class":73,"line":508},20,[510],{"type":17,"tag":71,"props":511,"children":512},{"style":212},[513],{"type":23,"value":514},"    // The following call will return address 61304\n",{"type":17,"tag":71,"props":516,"children":518},{"class":73,"line":517},21,[519],{"type":17,"tag":71,"props":520,"children":521},{"style":212},[522],{"type":23,"value":523},"    // because we allocated 10 integers in this function\n",{"type":17,"tag":71,"props":525,"children":527},{"class":73,"line":526},22,[528],{"type":17,"tag":71,"props":529,"children":530},{"style":84},[531],{"type":23,"value":435},{"type":17,"tag":71,"props":533,"children":535},{"class":73,"line":534},23,[536],{"type":17,"tag":71,"props":537,"children":538},{"style":84},[539],{"type":23,"value":370},{"type":17,"tag":71,"props":541,"children":543},{"class":73,"line":542},24,[544],{"type":17,"tag":71,"props":545,"children":546},{"emptyLinePlaceholder":12},[547],{"type":23,"value":181},{"type":17,"tag":71,"props":549,"children":551},{"class":73,"line":550},25,[552],{"type":17,"tag":71,"props":553,"children":554},{"style":84},[555],{"type":23,"value":556},"allocate_call()\n",{"type":17,"tag":71,"props":558,"children":560},{"class":73,"line":559},26,[561],{"type":17,"tag":71,"props":562,"children":563},{"emptyLinePlaceholder":12},[564],{"type":23,"value":181},{"type":17,"tag":71,"props":566,"children":568},{"class":73,"line":567},27,[569],{"type":17,"tag":71,"props":570,"children":571},{"style":212},[572],{"type":23,"value":573},"// Utility function to get the address of a stack allocation\n",{"type":17,"tag":71,"props":575,"children":577},{"class":73,"line":576},28,[578,583,587,592,596,601,605,610,615,620,625],{"type":17,"tag":71,"props":579,"children":580},{"style":78},[581],{"type":23,"value":582},"inline",{"type":17,"tag":71,"props":584,"children":585},{"style":78},[586],{"type":23,"value":102},{"type":17,"tag":71,"props":588,"children":589},{"style":84},[590],{"type":23,"value":591}," get_address(",{"type":17,"tag":71,"props":593,"children":594},{"style":78},[595],{"type":23,"value":81},{"type":17,"tag":71,"props":597,"children":598},{"style":84},[599],{"type":23,"value":600},"[] pointer) ",{"type":17,"tag":71,"props":602,"children":603},{"style":78},[604],{"type":23,"value":92},{"type":17,"tag":71,"props":606,"children":607},{"style":84},[608],{"type":23,"value":609},"> ",{"type":17,"tag":71,"props":611,"children":612},{"style":78},[613],{"type":23,"value":614},"asm",{"type":17,"tag":71,"props":616,"children":617},{"style":84},[618],{"type":23,"value":619}," { ",{"type":17,"tag":71,"props":621,"children":622},{"style":78},[623],{"type":23,"value":624},"AIN",{"type":17,"tag":71,"props":626,"children":627},{"style":84},[628],{"type":23,"value":629}," @pointer }\n",{"type":17,"tag":631,"props":632,"children":633},"style",{},[634],{"type":23,"value":635},"html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":7,"searchDepth":175,"depth":175,"links":637},[638,639,640],{"id":43,"depth":175,"text":46},{"id":121,"depth":175,"text":124},{"id":261,"depth":175,"text":264},"markdown","content:docs:3.language-reference:3.stack-allocations.md","content","docs/3.language-reference/3.stack-allocations.md","md",[647],{"title":648,"_path":649,"children":650,"root":12},"Documentation","/docs",[651,652,666,678,686],{"title":648,"_path":649},{"title":653,"_path":654,"children":655,"sidebar":6},"Getting started","/docs/get-started",[656,659,662,665],{"title":657,"_path":658,"sidebar":12},"Downloads","/docs/get-started/downloads",{"title":660,"_path":661,"sidebar":12},"Emulator","/docs/get-started/emulator",{"title":663,"_path":664,"sidebar":12},"Basics of Yabal","/docs/get-started/basics-of-yabal",{"title":653,"_path":654,"sidebar":6},{"title":667,"_path":668,"children":669,"sidebar":6},"Language reference","/docs/language-reference",[670,673,676,677],{"title":671,"_path":672,"sidebar":12},"Structs","/docs/language-reference/structs",{"title":674,"_path":675,"sidebar":12},"Function pointers","/docs/language-reference/function-pointer",{"title":8,"_path":4,"sidebar":12},{"title":667,"_path":668,"sidebar":6},{"title":679,"_path":680,"children":681,"sidebar":6},"Perhipherals","/docs/peripherals",[682,685],{"title":683,"_path":684,"sidebar":12},"Screen","/docs/peripherals/screen",{"title":679,"_path":680,"sidebar":6},{"title":687,"_path":688,"children":689,"sidebar":6},"Advanced topics","/docs/advanced-topics",[690,693,696],{"title":691,"_path":692,"sidebar":12},"Assembly mode","/docs/advanced-topics/assembly-mode",{"title":694,"_path":695,"sidebar":12},"Optimizing","/docs/advanced-topics/optimizing",{"title":687,"_path":688,"sidebar":6},1698440057324]